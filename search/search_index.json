{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Critical Making Studio CMCI STUDIO at CU Boulder Nothing is a mistake. There's no win and no fail, there's only make. ~ John Cage If you're a visitor to this site, follow us @criticalmakingstudio and @cmci.studio to see what we're up to! Fall 2020","title":"Home"},{"location":"#fall-2020","text":"","title":"Fall 2020"},{"location":"APRD-5005/","text":"Critical Making 1: Finding Your Superpower Through Digital and Physical Making Critical Making 1 is a first semester project-based studio course that provides a foundation in the creative process of making with new and emerging digital and physical technologies responsible for building the products and services shaping the world we live in. In this course students work towards becoming fluent with digital and physical tools and technologies supporting their creative visions for new products and services. This includes working with modern web technologies (languages, frameworks, API\u2019s) to produce functional prototypes, surveying Computer-Aided Design (CAD) tools for 3D modeling and visualization and leveraging digital fabrication tools (3D Printing, Laser Cutting, CNC Milling) to rapidly produce physical objects and prototypes. The course will culminate in a final project leveraging the various digital and physical tools, techniques, skills, and knowledge gained throughout the semester. Project examples include web-based applications, connected experiences, smart devices, everyday / enchanted / functional objects, media-based installations, and product-based experiences. Day and Time: APRD-5005-003 / AM Section - Monday, 9:30 am - 12:30 pm APRD-5005-001 / PM Section - Monday, 1:30 pm - 4:30 pm Location: We have adopted a hybrid (remote/in-person) class structure this semester due to COVID-19 . This means anyone can participate in person or virtually over Zoom anytime. The class schedule will indicate when class is to be held in person at the Studio or virtually over Zoom. The following Zoom link is to be used for all class sessions. The required password is provided in Slack. >> Zoom Meeting (Password Required) << Instructor: RJ Duran rj.duran@colorado.edu Slack: @rjduran. #cmstudio on cmcistudio.slack.com Office hours by appointment. Feel free to reach out to me via slack or email. Syllabus: This website is a real-time version of the course syllabus. It is updated weekly throughout the semester. A static version will be available soon. Course Resources This website is the primary resource for all Critical Making Studio courses. Some of the resources used across the different courses are divided up into sections found on the left sidebar. Course specific resources will be found within the course schedule page specific to each course, also found on the left sidebar. Do I need to know all of these tools? No! Think of these resources as maps containing many possible tools that could help you accomplish your work and from which you can choose some to learn and work with. There are pros and cons to any tool and all have a set of functionalities and a purpose. As with any tool and any kind of personal creative process you are free to choose anything that works for you. In addition to the tools found here in the digital space, you have access to physical tools for building anything you can imagine here at the studio, on campus at the Idea Forge , or in the community at BLDG61 . IMPORTANT: In this time of COVID-19, be sure to investigate any policies and regulations for all campus based or non-CU based resources before using them. Be safe. Our Studios CMCI Studio facilities include the large main room (West Studio) and adjacent smaller room (North Studio). Both rooms contain different functionalities for developing projects at varying scales and for varying audiences. Read through the Studio Handbook for learning about each room and accessing the various tools and capabilities we have on site. Idea Forge The Idea Forge is an on-campus design and fabrication facility open to all students located in the Fleming Building (near the Wolf Law Building at Broadway & Baseline Rd). In this course we will be making use of the tools and resources available to build projects and develop skills. Learn more at https://www.colorado.edu/ideaforge/ . Fall 2020 Operations CU Boulder Campus Map Hours Workshop Schedule BLDG61: Boulder Library Makerspace BLDG 61 is a free community workshop that provides maker education and technology to the public in a creative and inclusive environment. They are located nearby, just down the street from our studio. They offer a variety of free workshops and access to tools and knowledge within the larger Boulder community. I highly recommend becoming familiar with their space. Learn more at https://boulderlibrary.org/bldg61/ . Course Workload The CM1 is a 3 credit hour course. You should expect to dedicate at least 2-3 hours per credit hour. This translates into a 6-9 hours per week. Consider 6 hours a minimum expectation for one studio course and plan accordingly with your other studio courses. Assignments for the course consist of weekly blog posts demonstrating project-based and process oriented research and explorations in making . Assignment parameters will be based on the topic of the week and \"due\" the following week by the start of class time. Refer to the Course Deliverables section for more information. The course is organized into weekly meetings consisting of instructor led project-driven topics organized as workshops and studio work sessions. It is expected that all students are active participants in each session. Course Deliverables CM1 is a project based course and largely driven by student research and interests. As such, each deliverable is expected to vary based on the project parameters and requirements. The following outlines the general criteria for course deliverables throughout the semester. Assignments Assignments are given weekly and need to be submitted as a blog post published to your Critical Making blog. A minimum of 1 blog post per week is the expectation. Medium is widely used in other studio classes but any blogging platform may be used. Posts are to be submitted via slack #cmstudio by the specified due date each week. It is recommended that a post includes a variety of media and content to support the subject matter. For example: text, images, video, graphics, photos, mockups, screen captures, tutorials, 3d model viewers (sketchfab), sketches, code, gifs, references, etc. Anything that is required to effectively communicate the details of a project, process, prototype, or idea. The subject matter is in response to the topics of the week. Ideally, it falls in line with your interests, research area, project, creative process, etc. For example, you might consider doing a series of tutorials on a topic that interests you or a process/workflow you are currently exploring through the course. Posts should be written to the best of your abilities and for a public audience. The post and any accompanying visual content (images, video) may be shared on social media. Final Project Final projects consist of three parts: Final Project Proposal (Blog Post) Final Project Presentation (Location TBD) Final Project Documentation (Blog Post) Course Themes Building Creative Habits and Practices Emerging Tech Rapid Prototyping Product Development Materials Digital Fabrication Interactive and Immersive Digital / Physical Experiences Parametric Modeling and Design Visualization / Rendering Deconstructing Problems and Solutions Analyzing Systems of Logic Phase 1: Make Everyday Week 1: Overview Aug 28 (Friday) | Location: In Person + Zoom Meeting Intros / Course Overview ( Slides ) CM1 Student Questionnaire Making \"making\" a practice (aka Dailies, Everydays) Jonathan Harris - Today - Cowbird onepic_everyday by Allison Spiegel (C10) Beeple Everydays Things Organized Neatly Significant Nonsense 1 Second Everyday App Collecting Words by Brian Fouhy (C3) Getting Creative with Perlin Noise Fields House Numbers Styles Things Come Apart by Todd McLellan Codevember Methodologies for \"making\" Richard Serra Verb List (MOMA) / PDF Books Graphic Design: The New Basics The Art of Critical Making: Rhode Island School of Design on Creative Practice Got Skills? Lynda.com for students Processing Workshop We will go through a process of creating a simple poster sized 24x36 in using the Processing IDE. Download and Install Processing Sketch (Instructions on slides) Resources Processing Language Reference Learning Processing Visualizing Data: Exploring and Explaining Data with the Processing Environment Finding Inspiration Where do you find inspiration? Here are a few I frequent. MIT Technology Review Creative Applications Bantam Tools Podcast: The Edge - A great podcast about design and technology. CW&T / Instagram Instructables Radiolab Sleepwalkers Podcast - A podcast about AI, Machine Learning, Data, and Privacy. Creative Industries HardwareUX pdesign101 Age of Entanglement by Neri Oxman - An outstanding article and map / chart (The Krebs Cycle of Creativity). Tim Rodenbroeker - Input / Output Map Bauhaus Curriculum / Bauhaus || The School of Everything Designspiration The Coding Train Kurt Vonnegut on the Shapes of Stories (long version) / Kurt Vonnegut on the Shapes of Stories (short version) Four Tet: Looking Backward, Moving Forward Shapeways Material Guide McMaster Carr - TONS OF PARTS Assignment 0: Setup a \"maker\" blog Setup a dedicated blog to document your Critical Making experience. What if I already have a website/blog? Great! Just make sure you tag or categorize your posts with \"Critical Making 1\" so they are easy to locate. If you do not yet have a blog or wish to setup a dedicated site for this course, you have a plethora of options to choose from . Feel free to use whatever works for you to submit your work in blog post format. Many STCM students choose to use Medium because it's used to submit posts for RE Studio. Examples by previous students: Clayton Kenny (C11), Yvonne Danyluck (C11), Dave Laskowski (C11), Aitana Rothfield (C11), Gia Almuaili (C11), Tess Stevens (C11), Karen McClellan (C10), Allison Speigel (C10), Jonas Escobedo (C10), Sarah Cohen (C10), Diamond Alexander (C10), Kelly Phillips (C10), Hanshu Zhou (C10), Sarah Safranski (C9), Jim Murphy (C9), Matt Isola (C9), Nikki Cavalier (C9), Nick Balderston (C9) Examples of similar blogs: Chikara Inamura (HTMAA 2014) , Matt Keeter (HTMAA 2011) , Christos Tzamos(HTMAA 2014) , Zach Seibold (HTMAA 2014) , Merav Gazit (HTMAA 2014) , Dorota Orlof (FAB Academy 2018 Barcelona) Assignment 1: Know thyself Your first assignment consists of 2 parts: Part 1: Make a map Generate a map of some kind that communicates your journey to CMCI Studio. Such a map might be a timeline, visualization, info graphic, mind map, photographic series, video, written document, or any combination of these formats. Include your interests and pursuits in CMCI Studio. Questions: What led you to CMCI Studio? What is your question? Based on the survey, what do you feel strong in and what are you excited to learn more about through this course? Where do you see yourself by the end of the program? If you could design and build anything, what would it be? Resources Mind Mapping Part 2: Things I Like & Dislike Choose 3 things you like (or love) and 3 things you dislike (or hate) and describe what they mean to you and why. Possible choices might be products, objects, artifacts, or experiences. Be wary of pointing out behaviors in people or circumstances beyond your control or judgement. Focus on the tangible attributes that you can clearly articulate. Questions: What\u2019s their story? Who made them and why? Why do or did they exist? Why do you find them intriguing or despise them? Deliverable: Write and submit a blog post for Part 1 and Part 2 on your blog. Include any media in your post that supports your thoughts and ideas. Share a link to your post on Slack #cmstudio by Sept 7 (Labor Day). Due: Sept 7 Week 2: Tools for Development Aug 31 | Location: Zoom Meeting Today in class we will be working on setting up software and becoming familiar with some of the tools used for development. Questions Assignment #2 begins today Class Format over Zoom Break out rooms? Setting up your development environment What's that and why do we need it? What does a development environment look like? IDE's vs Text Editors, working code folder, Terminal, Node.js, NPM, Version Control. The combination of all these tools is what I refer to as a \"sandbox\" or local development environment. Terminal Workshop Hello Terminal Basic folder navigation and file creation Showing hidden files on your system \"dot\" files (aka a file with a dot or period at the beginning of it's filename is a hidden file) Install Git Github Workshop Version Control (aka a time machine for code/data) Setup Github account Create your first repo Markdown Setup local development environment Make a Sandbox (aka local dev server environment) Play in the sandbox by making a basic HTML webpage and serving it up Code: The Hidden Language of Computer Hardware and Software ASCII vs Binary Files ASCII - Data for a human to read/write Binary - Data for a computer to read/write Development Environment Lets get started by setting up a development environment. The most basic things you need for any web development tasks are a text editor and a browser like Chrome, Safari, or Firefox. Other tools such as the Terminal, Git, Github, and Node.js enable you to work with all sorts of libraries and frameworks, collaborate with others, and quickly prototype new ideas. All these tools come together under the idea of running a \"local development server\" or localhost on your machine. We will be setting up all these parts and will utilize them in different ways over the course of the semester. If you are curious about the history of electronics, computers, computer science, programming, and the Internet, check out the Histories section. I strongly advise you to start getting familiar with the various histories and technological underpinnings of the technologies you use every day. Remember, it's also about building awareness and understanding about the systems that run our world. These resources are meant to work through at your own speed and as you begin to ask deeper questions about why something works and how something works. I also highly recommend the book Code: The Hidden Language of Computer Hardware and Software by Charles Petzold. It is a foundational text on why computers are the way they are and how they work, beginning with code. Text Editors What is a text editor? What is it's purpose? How is it useful for development? When it comes to web development or software development work, you need a text editor capable of working with ASCII data and rich in features supporting development tasks. My editor of choice is currently Visual Studio Code (VSCode) . Will Microsoft Word, Google Docs, or Pages work? No! These are word processing applications that deal primarily with binary data because in addition to the actual text information stored in a .doc file, it encapsulates data such as font and formatting. Don't use these editors for this kind of work. You will be sad. Terminal Workshop What is the Terminal? What is it's purpose? How is it useful for development? Goals: Get familiar with the terminal by creating and manipulating files and folders on your system. Set up git to be able to use version control to manage projects on Github. Terminal 101 Location on MacOS: Applications/Utilities/Terminal.app For the Windows users: Cmder is a Terminal emulator that works in a similar way to the mac terminal. How to display hidden files on MacOS Customize your Terminal in Terminal > Preferences. It helps to make the text larger on most screens. Common commands: cd, ls, mkdir, rmdir, rm, mv, cp, pwd, man, touch . Think of all these commands as tiny applications that have no GUI. They are very old and have been around since the start of Unix based systems (Read this to learn more: Looking back at OS X's origins ). Look at MacOS/Linux/Unix Command Line Cheat Sheet to see more information about common commands. Working with directories and files: cd <folder> - Goto into a folder cd .. - Go up one level cd ../<folder> - Go up one level (to parent folder) and into a child folder cd ../.. - Go up two levels etc Tab completion - When you start typing in a terminal you can hit tab to complete the command if the file or folder you are going to use is available. If you hit Tab twice, you will see the contents of a folder. Getting out of or killing a process that is running in Terminal: ctrl + c Install Git You will likely not have Git installed on your machine by default. You will know if you have it or not when you type git into the Terminal. If you do have it installed you will see information about how to use it. If you don't, you will see the output \"command not found\". You may be prompted to install XCode Developer Tools when installing git. Accept the install and proceed. You have two options to install git: Install the XCode Developer tools (easy way) or download the installer from git-scm . After installing it the git command should work in the Terminal. This is essential to working with Github. Resources Learning Terminal - Cheetsheets and more! Learning Git How to use Terminal on Mac , How to use a Terminal on Windows Command Line Cheat Sheet by git-tower - This one is great for both git and terminal commands! Github Workshop Goals: Setup a Github account Create your first repository Publish some code to it How to Use Github Sign up for a Github account . Choose a username wisely. You might just be \"Internet famous\" someday. ( Stuck on choosing a username? Read this. A Tale of Github Usernames ) Create a hello-world repo on Github . If you check the box to add a README file it will include a README.md file in the repo. This is the main information file shown when you goto the repo URL Markdown = text file with special syntax that gets converted into HTML. Review Markdown Cheatsheet . Complete list of github markdown emoji markup Clone your repo using the terminal. Doing this will download a copy of your repository onto your machine. Clone Repo: git clone <repo url> . For Example, git clone git@github.com:rjduran/cm-sandbox.git . Note the URL and its use of \"git\" or \"https\". Use \"https\" to start. You need to go through the Github tutorial below in step #4 to connect to Github via SSH. Open VSCode and add the cloned folder to the workspace Make some changes to your README.md file using VSCode Stage the changes: git add . or git add README.md Commit the changes: git commit -m \"my message describing changes\" Push the changes: git push You will be asked for your username and password when attempting to push changes to your repo at this stage. Once the changes are uploaded you will see the changes on the Github page for the repo. Yay! Good times! Success! Pro tip: After setting up your Github account, read through Connecting to Github with SSH to setup your system to connect securely to Github and not require you to enter your username and password credentials each time you push changes. Sandbox Time! Make a Sandbox (aka local dev server environment) Play in the sandbox by making a basic HTML webpage and serving it up. Assignment 2: Everyday Project Objective: Make something and capture a digital representation of it each day for the next 2 weeks. You should have at a minimum 14 objects. Thoughts on how to accomplish this: Choose any tool(s) at your disposal. Choose any theme or topic. Date Range: Monday Aug 31 to Monday Sept 14 Decide how you will document your project. For example, Instagram, blog post, a single image, a document, a Github repo commit, a video, etc. Consider how the result will travel digitally. Refer to the projects and practices you observed from last week. Questions: What do you already make and want to make more of? What new thing has peaked your interest and will you use to make something every day? Deliverable: Submit a blog post documenting your project process and outcome in Slack #cmstudio . Due: Sept 14 Week 3: Labor Day Sept 7 Labor Day, No Class Phase 2: The Modern Web Week 4: Intro to Web Development Sept 14 | Location: Zoom Meeting Week 5: Web Applications & Frameworks Sept 21 | Location: In Person + Zoom Meeting Week 6: Data, API's & Connectivity Sept 28 | Location: Zoom Meeting Phase 3: Digital Design Foundations Week 7: Intro to CAD Oct 5 | Location: In Person + Zoom Meeting Week 8: Visualization & Rendering Oct 12 | Location: Zoom Meeting Week 9: From CAD to CAM Oct 19 | Location: Zoom Meeting Phase 4: Becoming Physical Week 10: Intro to Digital Fabrication Oct 26 | Location: Zoom Meeting Week 11: Fabrication Workflows Nov 2 | Location: In Person + Zoom Meeting Week 12: Materials Nov 9 | Location: In Person + Zoom Meeting Final Project Proposal Due Phase 5: Final Project Week 13: Final Project Nov 16 | Location: In Person + Zoom Meeting Week 14: Final Projects Nov 23 | Location: In Person + Zoom Meeting Week 15: Final Projects Nov 30 | Location: In Person + Zoom Meeting Week 16: Final Project Presentations Dec 7 | Location: In Person + Zoom Meeting Last Day of Class","title":"CM1 Schedule"},{"location":"APRD-5005/#critical-making-1-finding-your-superpower-through-digital-and-physical-making","text":"Critical Making 1 is a first semester project-based studio course that provides a foundation in the creative process of making with new and emerging digital and physical technologies responsible for building the products and services shaping the world we live in. In this course students work towards becoming fluent with digital and physical tools and technologies supporting their creative visions for new products and services. This includes working with modern web technologies (languages, frameworks, API\u2019s) to produce functional prototypes, surveying Computer-Aided Design (CAD) tools for 3D modeling and visualization and leveraging digital fabrication tools (3D Printing, Laser Cutting, CNC Milling) to rapidly produce physical objects and prototypes. The course will culminate in a final project leveraging the various digital and physical tools, techniques, skills, and knowledge gained throughout the semester. Project examples include web-based applications, connected experiences, smart devices, everyday / enchanted / functional objects, media-based installations, and product-based experiences. Day and Time: APRD-5005-003 / AM Section - Monday, 9:30 am - 12:30 pm APRD-5005-001 / PM Section - Monday, 1:30 pm - 4:30 pm Location: We have adopted a hybrid (remote/in-person) class structure this semester due to COVID-19 . This means anyone can participate in person or virtually over Zoom anytime. The class schedule will indicate when class is to be held in person at the Studio or virtually over Zoom. The following Zoom link is to be used for all class sessions. The required password is provided in Slack. >> Zoom Meeting (Password Required) << Instructor: RJ Duran rj.duran@colorado.edu Slack: @rjduran. #cmstudio on cmcistudio.slack.com Office hours by appointment. Feel free to reach out to me via slack or email. Syllabus: This website is a real-time version of the course syllabus. It is updated weekly throughout the semester. A static version will be available soon.","title":"Critical Making 1: Finding Your Superpower Through Digital and Physical Making"},{"location":"APRD-5005/#course-resources","text":"This website is the primary resource for all Critical Making Studio courses. Some of the resources used across the different courses are divided up into sections found on the left sidebar. Course specific resources will be found within the course schedule page specific to each course, also found on the left sidebar. Do I need to know all of these tools? No! Think of these resources as maps containing many possible tools that could help you accomplish your work and from which you can choose some to learn and work with. There are pros and cons to any tool and all have a set of functionalities and a purpose. As with any tool and any kind of personal creative process you are free to choose anything that works for you. In addition to the tools found here in the digital space, you have access to physical tools for building anything you can imagine here at the studio, on campus at the Idea Forge , or in the community at BLDG61 . IMPORTANT: In this time of COVID-19, be sure to investigate any policies and regulations for all campus based or non-CU based resources before using them. Be safe.","title":"Course Resources"},{"location":"APRD-5005/#our-studios","text":"CMCI Studio facilities include the large main room (West Studio) and adjacent smaller room (North Studio). Both rooms contain different functionalities for developing projects at varying scales and for varying audiences. Read through the Studio Handbook for learning about each room and accessing the various tools and capabilities we have on site.","title":"Our Studios"},{"location":"APRD-5005/#idea-forge","text":"The Idea Forge is an on-campus design and fabrication facility open to all students located in the Fleming Building (near the Wolf Law Building at Broadway & Baseline Rd). In this course we will be making use of the tools and resources available to build projects and develop skills. Learn more at https://www.colorado.edu/ideaforge/ . Fall 2020 Operations CU Boulder Campus Map Hours Workshop Schedule","title":"Idea Forge"},{"location":"APRD-5005/#bldg61-boulder-library-makerspace","text":"BLDG 61 is a free community workshop that provides maker education and technology to the public in a creative and inclusive environment. They are located nearby, just down the street from our studio. They offer a variety of free workshops and access to tools and knowledge within the larger Boulder community. I highly recommend becoming familiar with their space. Learn more at https://boulderlibrary.org/bldg61/ .","title":"BLDG61: Boulder Library Makerspace"},{"location":"APRD-5005/#course-workload","text":"The CM1 is a 3 credit hour course. You should expect to dedicate at least 2-3 hours per credit hour. This translates into a 6-9 hours per week. Consider 6 hours a minimum expectation for one studio course and plan accordingly with your other studio courses. Assignments for the course consist of weekly blog posts demonstrating project-based and process oriented research and explorations in making . Assignment parameters will be based on the topic of the week and \"due\" the following week by the start of class time. Refer to the Course Deliverables section for more information. The course is organized into weekly meetings consisting of instructor led project-driven topics organized as workshops and studio work sessions. It is expected that all students are active participants in each session.","title":"Course Workload"},{"location":"APRD-5005/#course-deliverables","text":"CM1 is a project based course and largely driven by student research and interests. As such, each deliverable is expected to vary based on the project parameters and requirements. The following outlines the general criteria for course deliverables throughout the semester.","title":"Course Deliverables"},{"location":"APRD-5005/#assignments","text":"Assignments are given weekly and need to be submitted as a blog post published to your Critical Making blog. A minimum of 1 blog post per week is the expectation. Medium is widely used in other studio classes but any blogging platform may be used. Posts are to be submitted via slack #cmstudio by the specified due date each week. It is recommended that a post includes a variety of media and content to support the subject matter. For example: text, images, video, graphics, photos, mockups, screen captures, tutorials, 3d model viewers (sketchfab), sketches, code, gifs, references, etc. Anything that is required to effectively communicate the details of a project, process, prototype, or idea. The subject matter is in response to the topics of the week. Ideally, it falls in line with your interests, research area, project, creative process, etc. For example, you might consider doing a series of tutorials on a topic that interests you or a process/workflow you are currently exploring through the course. Posts should be written to the best of your abilities and for a public audience. The post and any accompanying visual content (images, video) may be shared on social media.","title":"Assignments"},{"location":"APRD-5005/#final-project","text":"Final projects consist of three parts: Final Project Proposal (Blog Post) Final Project Presentation (Location TBD) Final Project Documentation (Blog Post)","title":"Final Project"},{"location":"APRD-5005/#course-themes","text":"Building Creative Habits and Practices Emerging Tech Rapid Prototyping Product Development Materials Digital Fabrication Interactive and Immersive Digital / Physical Experiences Parametric Modeling and Design Visualization / Rendering Deconstructing Problems and Solutions Analyzing Systems of Logic","title":"Course Themes"},{"location":"APRD-5005/#phase-1-make-everyday","text":"","title":"Phase 1: Make Everyday"},{"location":"APRD-5005/#week-1-overview","text":"Aug 28 (Friday) | Location: In Person + Zoom Meeting Intros / Course Overview ( Slides ) CM1 Student Questionnaire Making \"making\" a practice (aka Dailies, Everydays) Jonathan Harris - Today - Cowbird onepic_everyday by Allison Spiegel (C10) Beeple Everydays Things Organized Neatly Significant Nonsense 1 Second Everyday App Collecting Words by Brian Fouhy (C3) Getting Creative with Perlin Noise Fields House Numbers Styles Things Come Apart by Todd McLellan Codevember Methodologies for \"making\" Richard Serra Verb List (MOMA) / PDF Books Graphic Design: The New Basics The Art of Critical Making: Rhode Island School of Design on Creative Practice Got Skills? Lynda.com for students Processing Workshop We will go through a process of creating a simple poster sized 24x36 in using the Processing IDE. Download and Install Processing Sketch (Instructions on slides) Resources Processing Language Reference Learning Processing Visualizing Data: Exploring and Explaining Data with the Processing Environment Finding Inspiration Where do you find inspiration? Here are a few I frequent. MIT Technology Review Creative Applications Bantam Tools Podcast: The Edge - A great podcast about design and technology. CW&T / Instagram Instructables Radiolab Sleepwalkers Podcast - A podcast about AI, Machine Learning, Data, and Privacy. Creative Industries HardwareUX pdesign101 Age of Entanglement by Neri Oxman - An outstanding article and map / chart (The Krebs Cycle of Creativity). Tim Rodenbroeker - Input / Output Map Bauhaus Curriculum / Bauhaus || The School of Everything Designspiration The Coding Train Kurt Vonnegut on the Shapes of Stories (long version) / Kurt Vonnegut on the Shapes of Stories (short version) Four Tet: Looking Backward, Moving Forward Shapeways Material Guide McMaster Carr - TONS OF PARTS","title":"Week 1: Overview"},{"location":"APRD-5005/#assignment-0-setup-a-maker-blog","text":"Setup a dedicated blog to document your Critical Making experience. What if I already have a website/blog? Great! Just make sure you tag or categorize your posts with \"Critical Making 1\" so they are easy to locate. If you do not yet have a blog or wish to setup a dedicated site for this course, you have a plethora of options to choose from . Feel free to use whatever works for you to submit your work in blog post format. Many STCM students choose to use Medium because it's used to submit posts for RE Studio. Examples by previous students: Clayton Kenny (C11), Yvonne Danyluck (C11), Dave Laskowski (C11), Aitana Rothfield (C11), Gia Almuaili (C11), Tess Stevens (C11), Karen McClellan (C10), Allison Speigel (C10), Jonas Escobedo (C10), Sarah Cohen (C10), Diamond Alexander (C10), Kelly Phillips (C10), Hanshu Zhou (C10), Sarah Safranski (C9), Jim Murphy (C9), Matt Isola (C9), Nikki Cavalier (C9), Nick Balderston (C9) Examples of similar blogs: Chikara Inamura (HTMAA 2014) , Matt Keeter (HTMAA 2011) , Christos Tzamos(HTMAA 2014) , Zach Seibold (HTMAA 2014) , Merav Gazit (HTMAA 2014) , Dorota Orlof (FAB Academy 2018 Barcelona)","title":"Assignment 0: Setup a \"maker\" blog"},{"location":"APRD-5005/#assignment-1-know-thyself","text":"Your first assignment consists of 2 parts: Part 1: Make a map Generate a map of some kind that communicates your journey to CMCI Studio. Such a map might be a timeline, visualization, info graphic, mind map, photographic series, video, written document, or any combination of these formats. Include your interests and pursuits in CMCI Studio. Questions: What led you to CMCI Studio? What is your question? Based on the survey, what do you feel strong in and what are you excited to learn more about through this course? Where do you see yourself by the end of the program? If you could design and build anything, what would it be? Resources Mind Mapping Part 2: Things I Like & Dislike Choose 3 things you like (or love) and 3 things you dislike (or hate) and describe what they mean to you and why. Possible choices might be products, objects, artifacts, or experiences. Be wary of pointing out behaviors in people or circumstances beyond your control or judgement. Focus on the tangible attributes that you can clearly articulate. Questions: What\u2019s their story? Who made them and why? Why do or did they exist? Why do you find them intriguing or despise them? Deliverable: Write and submit a blog post for Part 1 and Part 2 on your blog. Include any media in your post that supports your thoughts and ideas. Share a link to your post on Slack #cmstudio by Sept 7 (Labor Day). Due: Sept 7","title":"Assignment 1: Know thyself"},{"location":"APRD-5005/#week-2-tools-for-development","text":"Aug 31 | Location: Zoom Meeting Today in class we will be working on setting up software and becoming familiar with some of the tools used for development. Questions Assignment #2 begins today Class Format over Zoom Break out rooms? Setting up your development environment What's that and why do we need it? What does a development environment look like? IDE's vs Text Editors, working code folder, Terminal, Node.js, NPM, Version Control. The combination of all these tools is what I refer to as a \"sandbox\" or local development environment. Terminal Workshop Hello Terminal Basic folder navigation and file creation Showing hidden files on your system \"dot\" files (aka a file with a dot or period at the beginning of it's filename is a hidden file) Install Git Github Workshop Version Control (aka a time machine for code/data) Setup Github account Create your first repo Markdown Setup local development environment Make a Sandbox (aka local dev server environment) Play in the sandbox by making a basic HTML webpage and serving it up Code: The Hidden Language of Computer Hardware and Software ASCII vs Binary Files ASCII - Data for a human to read/write Binary - Data for a computer to read/write Development Environment Lets get started by setting up a development environment. The most basic things you need for any web development tasks are a text editor and a browser like Chrome, Safari, or Firefox. Other tools such as the Terminal, Git, Github, and Node.js enable you to work with all sorts of libraries and frameworks, collaborate with others, and quickly prototype new ideas. All these tools come together under the idea of running a \"local development server\" or localhost on your machine. We will be setting up all these parts and will utilize them in different ways over the course of the semester. If you are curious about the history of electronics, computers, computer science, programming, and the Internet, check out the Histories section. I strongly advise you to start getting familiar with the various histories and technological underpinnings of the technologies you use every day. Remember, it's also about building awareness and understanding about the systems that run our world. These resources are meant to work through at your own speed and as you begin to ask deeper questions about why something works and how something works. I also highly recommend the book Code: The Hidden Language of Computer Hardware and Software by Charles Petzold. It is a foundational text on why computers are the way they are and how they work, beginning with code. Text Editors What is a text editor? What is it's purpose? How is it useful for development? When it comes to web development or software development work, you need a text editor capable of working with ASCII data and rich in features supporting development tasks. My editor of choice is currently Visual Studio Code (VSCode) . Will Microsoft Word, Google Docs, or Pages work? No! These are word processing applications that deal primarily with binary data because in addition to the actual text information stored in a .doc file, it encapsulates data such as font and formatting. Don't use these editors for this kind of work. You will be sad. Terminal Workshop What is the Terminal? What is it's purpose? How is it useful for development? Goals: Get familiar with the terminal by creating and manipulating files and folders on your system. Set up git to be able to use version control to manage projects on Github. Terminal 101 Location on MacOS: Applications/Utilities/Terminal.app For the Windows users: Cmder is a Terminal emulator that works in a similar way to the mac terminal. How to display hidden files on MacOS Customize your Terminal in Terminal > Preferences. It helps to make the text larger on most screens. Common commands: cd, ls, mkdir, rmdir, rm, mv, cp, pwd, man, touch . Think of all these commands as tiny applications that have no GUI. They are very old and have been around since the start of Unix based systems (Read this to learn more: Looking back at OS X's origins ). Look at MacOS/Linux/Unix Command Line Cheat Sheet to see more information about common commands. Working with directories and files: cd <folder> - Goto into a folder cd .. - Go up one level cd ../<folder> - Go up one level (to parent folder) and into a child folder cd ../.. - Go up two levels etc Tab completion - When you start typing in a terminal you can hit tab to complete the command if the file or folder you are going to use is available. If you hit Tab twice, you will see the contents of a folder. Getting out of or killing a process that is running in Terminal: ctrl + c Install Git You will likely not have Git installed on your machine by default. You will know if you have it or not when you type git into the Terminal. If you do have it installed you will see information about how to use it. If you don't, you will see the output \"command not found\". You may be prompted to install XCode Developer Tools when installing git. Accept the install and proceed. You have two options to install git: Install the XCode Developer tools (easy way) or download the installer from git-scm . After installing it the git command should work in the Terminal. This is essential to working with Github. Resources Learning Terminal - Cheetsheets and more! Learning Git How to use Terminal on Mac , How to use a Terminal on Windows Command Line Cheat Sheet by git-tower - This one is great for both git and terminal commands! Github Workshop Goals: Setup a Github account Create your first repository Publish some code to it How to Use Github Sign up for a Github account . Choose a username wisely. You might just be \"Internet famous\" someday. ( Stuck on choosing a username? Read this. A Tale of Github Usernames ) Create a hello-world repo on Github . If you check the box to add a README file it will include a README.md file in the repo. This is the main information file shown when you goto the repo URL Markdown = text file with special syntax that gets converted into HTML. Review Markdown Cheatsheet . Complete list of github markdown emoji markup Clone your repo using the terminal. Doing this will download a copy of your repository onto your machine. Clone Repo: git clone <repo url> . For Example, git clone git@github.com:rjduran/cm-sandbox.git . Note the URL and its use of \"git\" or \"https\". Use \"https\" to start. You need to go through the Github tutorial below in step #4 to connect to Github via SSH. Open VSCode and add the cloned folder to the workspace Make some changes to your README.md file using VSCode Stage the changes: git add . or git add README.md Commit the changes: git commit -m \"my message describing changes\" Push the changes: git push You will be asked for your username and password when attempting to push changes to your repo at this stage. Once the changes are uploaded you will see the changes on the Github page for the repo. Yay! Good times! Success! Pro tip: After setting up your Github account, read through Connecting to Github with SSH to setup your system to connect securely to Github and not require you to enter your username and password credentials each time you push changes. Sandbox Time! Make a Sandbox (aka local dev server environment) Play in the sandbox by making a basic HTML webpage and serving it up.","title":"Week 2: Tools for Development"},{"location":"APRD-5005/#assignment-2-everyday-project","text":"Objective: Make something and capture a digital representation of it each day for the next 2 weeks. You should have at a minimum 14 objects. Thoughts on how to accomplish this: Choose any tool(s) at your disposal. Choose any theme or topic. Date Range: Monday Aug 31 to Monday Sept 14 Decide how you will document your project. For example, Instagram, blog post, a single image, a document, a Github repo commit, a video, etc. Consider how the result will travel digitally. Refer to the projects and practices you observed from last week. Questions: What do you already make and want to make more of? What new thing has peaked your interest and will you use to make something every day? Deliverable: Submit a blog post documenting your project process and outcome in Slack #cmstudio . Due: Sept 14","title":"Assignment 2: Everyday Project"},{"location":"APRD-5005/#week-3-labor-day","text":"Sept 7 Labor Day, No Class","title":"Week 3: Labor Day"},{"location":"APRD-5005/#phase-2-the-modern-web","text":"","title":"Phase 2: The Modern Web"},{"location":"APRD-5005/#week-4-intro-to-web-development","text":"Sept 14 | Location: Zoom Meeting","title":"Week 4: Intro to Web Development"},{"location":"APRD-5005/#week-5-web-applications-frameworks","text":"Sept 21 | Location: In Person + Zoom Meeting","title":"Week 5: Web Applications &amp; Frameworks"},{"location":"APRD-5005/#week-6-data-apis-connectivity","text":"Sept 28 | Location: Zoom Meeting","title":"Week 6: Data, API's &amp; Connectivity"},{"location":"APRD-5005/#phase-3-digital-design-foundations","text":"","title":"Phase 3: Digital Design Foundations"},{"location":"APRD-5005/#week-7-intro-to-cad","text":"Oct 5 | Location: In Person + Zoom Meeting","title":"Week 7: Intro to CAD"},{"location":"APRD-5005/#week-8-visualization-rendering","text":"Oct 12 | Location: Zoom Meeting","title":"Week 8: Visualization &amp; Rendering"},{"location":"APRD-5005/#week-9-from-cad-to-cam","text":"Oct 19 | Location: Zoom Meeting","title":"Week 9: From CAD to CAM"},{"location":"APRD-5005/#phase-4-becoming-physical","text":"","title":"Phase 4: Becoming Physical"},{"location":"APRD-5005/#week-10-intro-to-digital-fabrication","text":"Oct 26 | Location: Zoom Meeting","title":"Week 10: Intro to Digital Fabrication"},{"location":"APRD-5005/#week-11-fabrication-workflows","text":"Nov 2 | Location: In Person + Zoom Meeting","title":"Week 11: Fabrication Workflows"},{"location":"APRD-5005/#week-12-materials","text":"Nov 9 | Location: In Person + Zoom Meeting Final Project Proposal Due","title":"Week 12: Materials"},{"location":"APRD-5005/#phase-5-final-project","text":"","title":"Phase 5: Final Project"},{"location":"APRD-5005/#week-13-final-project","text":"Nov 16 | Location: In Person + Zoom Meeting","title":"Week 13: Final Project"},{"location":"APRD-5005/#week-14-final-projects","text":"Nov 23 | Location: In Person + Zoom Meeting","title":"Week 14: Final Projects"},{"location":"APRD-5005/#week-15-final-projects","text":"Nov 30 | Location: In Person + Zoom Meeting","title":"Week 15: Final Projects"},{"location":"APRD-5005/#week-16-final-project-presentations","text":"Dec 7 | Location: In Person + Zoom Meeting Last Day of Class","title":"Week 16: Final Project Presentations"},{"location":"APRD-5007/","text":"Critical Making 2: Immersive Media Design Focuses on building virtual reality and augmented reality based experiences for product innovation. It is a studio-based course that explores the intersection of virtual reality (VR) tools and workflows, interaction design, multimedia production, and product innovation as possible tools for solving industry-based challenges. Students will develop fundamental skills in 2D/3D asset creation, reality capture and representation, simulation, animation, and rendering strategies used in the production of high-quality content for use in crafting immersive digital experiences. The course will utilize industry-standard tools such as Unity, Cinema 4D, Adobe Creative Cloud, and hardware platforms such as HTC VIVE and Oculus Rift. In addition, the course will cover concepts ranging from UI/UX design for immersive experiences, interaction design in VR, programming game mechanics, designing for human interaction, and scripting behaviors for digital objects and agents. Information Day and Time: Monday, 1:30 pm - 4:30 pm CMCI Studio (1301 Walnut St) Instructor: RJ Duran Email: rj.duran@colorado.edu Slack: @rjduran on cmcistudio.slack.com Office hours by appointment. Feel free to reach out to me via slack or email. Slack: Channel #cmstudio and user group @imd will be used for all course communication and notifications. Be sure to use the appropriate user group when necessary. Course Themes Building VR Experiences Building Mobile AR Experiences Designing Media for VR and AR VR and AR Hardware Systems Scripting / Programming Digital Asset Creation Digital Workflows and Asset Pipelines Reality Capture Interactive and Immersive Digital / Physical Experiences Emerging XR Tech UX/UI of XR Rapid Prototyping Product Development Resources This website is the primary resource for all Critical Making Studio courses. Some of the resources used across the different courses are divided up into sections found on the left sidebar. Course specific resources will be found within this course schedule page, also found near the top of the left sidebar. CMCI Studio CMCI Studio facilities include the large main room (West Studio) and adjacent smaller room (North Studio). Both rooms contain different functionalities for developing projects at varying scales and for varying audiences. Read through the Studio Handbook for learning about each room and accessing the various tools and capabilities we have on site. DCMP VR Lab The CMCI Department of Critical Media Practices (DCMP) VR Lab contains tools and equipment for building VR, AR, and MR based experiences. Students have keycard access to a variety of PC workstations with HTC Vive Pro Hardware, Apple iMac workstations and software including Unity, UE4, Metashape Pro, Blender, and Adobe Suite. Lab Manager: Jason Gnerre Email: gnerre@colorado.edu Location: Folsom Stadium. STAD 136, between Gate 5 and 6. ( map ) Hours: Go check the schedule posted on the door to see when the lab is open. IMD Learning Resources This course will make use of various kinds of media such as books, websites, technical documentation, and video tutorials spanning interaction design, game engines, programming / scripting, computer graphics, and hardware systems used to construct immersive media based experiences. While some resources will be listed under the week we encounter them, most of the primary learning resources can be found listed in the Learning Resources section of the IMD Setup Guide . Course Repo You will be able to find the examples we talk about in class here. Course Repo: CM2-IMD Workload This is a 3 credit hour course. You should expect to dedicate at least 2-3 hours per credit hour. This translates into a 6-9 hours per week. Consider 6 hours a minimum expectation for one studio course and plan accordingly with your other studio courses. Deliverables for the course consist of \" Looking Outwards \" Reports, Workouts , Projects , and a Final Project . These are to be submitted weekly as blog posts on the due date specified each week. In general, assignment parameters will be based on the topics of the week and due the following week by the start of class time. Refer to the Deliverables section for more detail. The course is organized into weekly meetings consisting of instructor led project-driven topics organized as workshops and studio work sessions. It is expected that all students are active participants in each session. This course will require considerable effort outside of class time. Plan work sessions with others as much as possible and be sure to take care of your mind and body so as not to get too stressed or overexert yourself. If you should need assistance managing stress or otherwise, you can get in touch with CAPS . Deliverables This is an experimental project based course, largely driven by student research and interests. Each week will follow a similar format when it comes to finding balance between theory and practice. It's expected that each student has varying skills and interests upon entering the course and are excited to expand on them and apply them towards their areas of interest. The course deliverables consist of \" Looking Outwards \" Reports to discover the emerging boundaries of XR and report on them, Workouts to develop skills in 3D asset creation, C# scripting, and modern XR toolkits, Projects to put research findings into practice and exercise creative faculties, and a Final Project to design and build a functional XR experience. Each deliverable is expected to vary based on the area of interest and parameters defined. The following outlines the general criteria for course deliverables throughout the semester. Looking Outwards What is a \"Looking Outwards\" Report? It's basically a blog post containing your research, thoughts, and ideas on a particular topic of interest. This means you should be looking at a variety of information sources such as blogs, emerging tech news, research papers, design/art/tech focused websites, tutorials, etc. covering the topics listed under Course Themes and reporting on what you find each week. These kinds of reports are due almost every week as noted in the schedule and count towards 10% of your final grade. This approach is inspired by Prof. Golan Levin's Looking Outwards Reports for the course Interactivity & Computation at CMU School of Art. Why are we doing these? Reason 1: I literally can\u2019t keep up with the changes taking place in the various fields related to XR and I need your help. Many hands make light work. You are the pioneers of this class and are tasked with discovering content and creating documentation that adds to the field of Immersive Media Design. Reason 2: We need to build a body of documentation that connect several disparate fields. Conducting research across several fields will uncover new and interesting opportunities for us. Throughout the semester I will document our collective findings under Looking Outwards (found in the left sidebar under CM 2 IMD). Workouts What is a \"Workout\"? A workout is some kind of weekly exercise that aims to practice and build skills. It's just what it sounds like, a way to work your \"muscles.\" What form do these take? They can take the form of reading technical documentation, writing code, solving a design challenge, trying out new software, and working through video tutorials that challenge and enable practice of concepts discussed in class. These are not graded but are highly recommended because they will provide greater understanding of a specific topic through focused hands-on practice. You may write blog posts for the workouts you do to help document your progress and process but it's not required. Projects What is a Project? A project aims to solve a problem or accomplish a goal using tools and skills. What form do these take? They are largely based on the topics explored in class, through the workouts, and through your research. They allow you to dig into and expand on a topic that interests you within the field of Immersive Media Design. They can be thought of as mini-projects to build towards developing your final project or one-off experiments exploring a particular technique or software workflow you are interested in. Projects are due every few weeks as noted on the schedule and count towards 40% of your final grade. Final Project Read more about writing a project proposal and final project deliverables here . Grading & Evaluation Grades for the course follow the standard A through F letter grading system and will be determined by the following breakdown. Type Percentage of Grade Looking Outwards 10 % Workouts Not graded Projects 40 % Final Project 50 % Work is evaluated based on the following: Done vs Not Done. Done gets credit, Not Done does not get credit. Quality and Quantity of deliverables. This studio based course requires a healthy level of creative immersion and balance to be successful. Explore your creative process through making and always deliver to the best of your abilities. Achieve quality through quantity. Engagement with the subject matter. If something isn't interesting to you, make it interesting. Clarity of documentation. Make it easy for others to read and understand. Collaboration will also be a factor of evaluation if you choose to work on projects in teams of no more than 3-4 people. The division of duties on any project needs to be clearly defined and documented by all team members and will factor into individual evaluations. Week 1: Overview Jan 17 (Friday) Overview of Course Course Deliverables IMD Setup Guide Mobile Devices Survey DCMP VR Lab Tour - Friday Jan 31, 9:30-10:30am Signup Form VR and AR Hardware & Software Overview There are various ways to get started with VR and AR at this point in time. Too many in fact. It can be difficult to know where to begin. For the majority of this class we will be focused on Unity, XCode, Cinema4D, and C# Scripting with Visual Studio or VSCode. For hardware we have several HTC Vive units, a desktop PC and two laptop PCs capable of running any VR experience you build. You also have access to the DCMP VR Lab to develop experiences. Looking at the results from the mobile device survey you filled out, most people seem to have a recent Apple iPhone capable of supporting AR Kit. Yay! Related CES2020 Reports in VR/AR CES 2020 proved VR and AR are thriving \u2014 and moving into automobiles CES 2020: A Reality Check For The VR And AR Industries Panasonic at CES 2020: the world\u2019s first HDR capable UHD VR eyeglasses Apple AR App Store AR AR Foundation Adobe Aero Using quicktime to show AR content running on device. If your camera or microphone doesn't show up, you may need to goto Security & Privacy in System Preferences and enable Microphone access for QuickTime Player. Big Bang AR ( App Store ) Background info at CERN Experiments with Google XR Ethics Manifesto by Kent Bye (Voices of VR Podcast) How and Why Immersive Experiences Are Taking Over the Denver Art Scene This is the computer you\u2019ll wear on your face in 10 years Spectacles by Snapchat Lens Studio by Snapchat Spark AR Studio by Facebook/Instagram Goodbye Uncanny Valley - A great overview of computer graphics, rendering technologies, and a spectrum of works exploring the future of the CG medium. VR Awesome VR, AR and Mixed Reality Resources The UX of VR AR Will Spark the Next Big Tech Platform\u2014Call It Mirrorworld by Kevin Kelly Where to find more VR and AR news UploadVR Next Reality Venture Beat ARPost Creative Applications Voices of VR Podcast AR/VR Journey People / Projects Wenzy90 Andrew James Art Matt Taylor - 3D Gfx and Motion Designer / Artist Robbie Tilton - Designer Keijiro Takahashi , Unity Experiments ???+ note \"Looking Outwards [0]: The XR Landscape\" Begin looking at the current state of VR and AR applications, tools, and technologies. Spend time this week scanning the latest from CES 2020 and other tech news sources reporting on the state of the industry, new technology, design and development trends, and showcasing interesting applications and use cases in AR/VR. Start by investigating some of sites above. 1. Identify 2-3 applications or aspects of VR and/or AR you find intriguing. * What's interesting to you about your findings? Try to be specific. 2. Identify 2-3 creatives (story tellers, designers, developers, coders, etc) that are making interesting digital content or VR and/or AR based media or works. * What are they making? * Try to identify specifically what is interesting to you about their work and workflow. What's inspiring about the work? * What kinds of tools are they using? Share a link to your post with user group **@imd** in Slack channel **#cmstudio**. **_Due: Jan 27_** ???+ example \"Workout [0]: Getting Started\" 1. This week you need to download and install the required software listed in the [IMD Setup Guide](/guides/imd-setup-guide/). 2. You should start exploring any of the tools through the freely available and built in documentation, tutorials, and guides. Adobe, Cinema4D, Unity, and XCode have large user communities and great documentation to get started. My suggestion is to start getting familiar with Unity since much of the work we do will end up in there. I suggest looking in the Unity tutorials for a Foundational tutorial or Creator Kit tutorial that interests you to work through over the next week. Getting Started with Unity * [learn.unity.com](https://learn.unity.com/) * [Creator Kit: Puzzle](https://learn.unity.com/project/creator-kit-puzzle) * [Projects](https://learn.unity.com/projects) * [Unity Manual](https://docs.unity3d.com/Manual/index.html) Week 2: No Class Jan 20 MLK Day, No Class Week 3: Intro to Cinema 4D Jan 27 Discussion Looking Outwards [0] - What did you find? Workout [0] - Any software issues? What did you make? Course Repo: CM2-IMD - You will be able to find the examples we talk about in class here. This week we are starting to look at C4D's comprehensive set of tools for creating assets that can be used in VR and AR. Many people use the tools for motion graphics, which you will quickly find as you start investigating the tutorials and resources out there. Just like other 3D design software, it can be a bit intimidating at first since there are so many ways to use it and so many tools to get familiar with. In my experience, it's best to start by focusing on understanding a few tools that help you accomplish a specific task, then continue exploring whats possible as you learn your way around. C4D is similar to Blender, Autodesk Maya, and After Effects in many ways and combines the best of some of these tools into something approachable for designers new to working in 3D. Most people working in the motion graphics world utilize some combination of C4D, After Effects, Illustrator, and Photoshop. Overview The Interface Layouts, Toolbars, Views, Timeline, Materials, Objects, Attributes Default Units = cm To Change Units: Edit > Preferences > Units > Basic > Unit Display Views Single and 4 Up View (Perspective, Top, Right, Front) To Reset View: View > Frame Default Axes X = Red, Y = Green, Z = Blue XYZ Gizmo (aka \"Gumball\") Translation (Coordinates), Scale (Object Properties) Planar or Multi-Axis Movement (Corner Angle Gizmos) Scale with small boxes on gizmo Object Movement Translation - E Scale - T Rotate - R Movement in Views Pan - 1 + Click (OR Two-Finger Movement) Zoom - 2 + Click (OR Pinch-In/Out Movement) Orbit - 3 + Click (OR Option + Click) Primitives (Objects) Object Manager - All the objects in the scene Renaming Objects Attribute Manager - Properties for selected object(s) Modeling Primitives - \"Blue Cube\" Icon Parametric Object vs Polygonal Object - aka \"Make Editable\" - C This converts a parametric object into a polygonal object with vertices, faces, and edges. Splines - \"Pen\" Icon Materials Creating new materials Assigning colors Animation Using keyframes to create motion Position Size Rotation The Timeline Adding keyframes Visualize Curves Window > Timeline (F-Curve) Import / Export Rendering Images / Video Render View - CMD + R (Quick Render in Active View) Render Settings - Set size, output location, etc Render to Picture Viewer Window > Picture Viewer Exporting 3D Models File > Export File Types: FBX, OBJ, etc Making videos and GIFs Exporting MOV or MP4 videos from C4D Gif Brewery 3 (macOS App) After Effects Tutorial: How to import an image sequence ???+ note \"Looking Outwards [1]: Motion Design\" The world of motion graphics is powered by Cinema 4D and lots of creative magic and skill. Before we jump further into building VR and AR applications, it's good to have some understanding of at least one 3D design workflow or toolset for producing content. Your objective this week is to investigate what designers are doing and how they are doing it to bring ideas to life. Whether producing content for ads or marketing, designing animated info graphics or data visualization, or exploring digital art or building games, understanding the role of motion design in our digital landscape is an essential part of any modern designers toolkit. 1. Identify 2-3 applications or aspects of motion design or motion graphics you find intriguing. * What's interesting to you about your findings? Try to be specific. 2. Identify 2-3 creatives (artists, designers, freelancers, agencies, collectives, etc) that are exploring motion design. * What are they making and how? * Try to identify specifically what is interesting to you about their work and workflow. Share a link to your post with user group **@imd** in Slack channel **#cmstudio**. **_Due: Feb 3_** ???+ example \"Workout [1]: Getting Familiar with Cinema 4D\" This week I would like you to explore Cinema 4D as a tool for creating 3D assets for use in VR and AR applications. I assume most are new to the environment so just explore the resources below to get a feel for how to work with the tools. Most importantly, attempt to make something that you are interested in. You can use these tutorials are starting points or explore another workflow you find. Getting Started with Cinema 4D * [Introduction to Cinema 4D](https://www.linkedin.com/learning/introduction-to-3d-2/cinema-4d-interface-and-overview?u=42275329) - Part of the LinkedIn Learning Course [Introduction to 3D](https://www.linkedin.com/learning/introduction-to-3d-2). It covers the basics of C4D. * [Getting Started with Cinema 4D by EJ Hassenfratz](https://www.cineversity.com/vidplaylist/getting_started_with_cinema_4d_r20) - A great introduction series. I highly recommend starting with these. * [Introduction to Cinema 4D](https://greyscalegorilla.com/intro-to-cinema-4d/) by [Grey Scale Gorilla](https://greyscalegorilla.com/) - Tutorial series by one of the best motion graphics resources out there. * [Cinema 4D Tutorials](https://www.youtube.com/playlist?list=PLn_EY8NKzmnAYKIghACOh1PrIrl0vlPjZ) by [MOBOX Graphics](https://www.youtube.com/channel/UCQyp3CBrBSfIynoDosN3c7g) - Simple tutorials for C4D and After Effects. * [School of Motion Cinema 4D Tutorials](https://www.schoolofmotion.com/search-results?templateTypes=TUTORIAL&category=&tool=Cinema%204D&pageIndex=0) Week 4: Intro to Unity / XR Assets Feb 3 Discussion Looking Outwards [1]: Motion Design - What did you find? Workout [1]: Getting Familiar with Cinema 4D - What did you make? Intro to Unity Overview of Interface Unity Basics Asset Store Building a Basic 3D Project Assets Folder / File Management GameObjects Unity Manual Importing Creating Assets outside of Unity Working with Assets Where can you get 3d assets for a project? Unity Asset Store Free Assets CGTrader Mega List of 200 Free Unity Assets Free3D How do you make them? You can 3d model your own or find them online. What are common file types for VR and AR content? FBX, OBJ, glTF How can I view asset files? FBX Review - A really useful cross platform file viewer for FBX files. Meshlab - This is a good viewer for OBJ files and working with 3d scan data (meshes). Blender Cinema4D Exporting FBX files for use in Adobe Aero or Unity How to bake dynamic animation to keyframed animation. For Adobe Aero there are several limitations in the current (1.0) version, but this will improve over time. It's a good time to start getting familiar with the types of animation that are possible. Read Key 3D modeling concepts: Animation from the Adobe Aero documentation to learn more. Mixamo Adobe Mixamo is a tool that lets your choose a character and animate it with a set of parameters. You can eaily upload human character models from Fuse or another character modeling workflow and auto-rig it. Once a model is rigged and has an animation you can export it for use in Adobe Aero, Unity, or for further manipulation in a 3D modeling environment. Common questions Upload and rig 3D characters with Mixamo Adobe Fuse Adobe Fuse is part of creative cloud and is currently available but will be removed from Creative Cloud in September 2020. Unfortunately Adobe Fuse does not run on macOS Catalina since it's a 32-bit application. Adobe is not supporting it anymore. We are forced to look at other character modeling tools like Make Human or DAZ3D for near-out-of-the-box character (humanoid/avatar) parametric modeling. ???+ note \"Looking Outwards [2]: Report on XR Assets\" Your objective this week is to investigate how assets are created for AR and VR. 1. Identify 2-3 tools that help designers create 2D or 3D assets for use in VR and AR and find some key learning resources for them. * What's interesting to you about your findings? Try to be specific. 2. Identify 2-3 industries or creatives (game designers, artists, programmers, creative coders, etc) making use of these tools to build their experiences. * What are they making and how? * Try to identify specifically what is interesting to you about their work and workflow. Share a link to your post with user group **@imd** in Slack channel **#cmstudio**. **_Due: Feb 10_** ???+ example \"Workout [2]: Asset Workflows\" This week I would like you to explore the asset creation workflows shown above and in class. Experiment with tools such as Mixamo to customize and animate a humanoid character or Cinema 4D to build a dynamic animation for use in Adobe Aero or Unity. Perhaps you come across another tool when researching how assets are created this week. Attempt to build something with that tool and workflow. Once you have some kind of asset, put it into Adobe Aero to view it in AR or build a simple Unity world around it. Make a screen capture of your experience and share it in your report if you like. **AR Prototyping with Adobe Aero and Cinema 4D** * Export FBX file from Cinema 4D * Open the Creative Cloud Desktop Application (In the menu bar on macOS or system tray on Windows). * Goto File > Open Sync Folder. This will open the \"Creative Cloud Files\" folder on your system to drop your asset files into. * Copy assets to this folder. They will sync with the cloud and show up in Adobe Aero. * In Adobe Aero, make a new scene, scan a surface and add files from Creative Cloud. **Adobe Aero References** * [Get Started](https://helpx.adobe.com/aero/get-started.html) * [Supported file formats](https://helpx.adobe.com/aero/using/supported-file-formats.html) * [Prepare 3D Content](https://helpx.adobe.com/aero/using/prepare-3d-content-aero.html) * [Import FBX files into Aero](https://helpx.adobe.com/aero/using/import-fbx-files-into-aero.html) * [Import animated FBX from C4D/Maya to Aero](https://community.adobe.com/t5/aero/import-animated-fbx-from-c4d-maya-to-aero/td-p/10755583?page=1) - Aero only supports (Position-Scale-Rotation) PSR Animations for the time being. * Tutorial: [Using Adobe Aero & Cinema 4D to Create Augmented Reality Experiences](https://www.eyedesyn.com/tutorials/using-adobe-aero-cinema-4d-to-create-augmented-reality-experiences/) * Tutorial: [Using Cinema 4D Art for Augmented Reality with Adobe Aero](https://www.schoolofmotion.com/blog/using-cinema-4d-art-augmented-reality-adobe-aero) - This is a slightly expanded and step-by-step version of the previous tutorial by EJ Hassenfratz. Week 5: Apple Development / Intro to Xcode Feb 10 Discussion Looking Outwards [2]: Report on XR Assets - What did you find? Workout [2]: Asset Workflows - What did you make? Minor change. \"Assignments\" are now referred to as \"Projects\". Questions on Cinema 4D, Unity, Adobe Aero, other stuff? This week we will work on getting everyone setup as Apple developers as part of our CMCI STUDIO team. We will then take a look at Xcode and start looking at how to start building apps using Unity and AR Foundation as time allows. We will be looking at different aspects of AR Foundation and scripting in the weeks ahead. iOS University Developer Program Getting started with app development Setup access to CMCI STUDIO team. I need the following. Send to me via Slack DM. I need your university (@colorado.edu) email address to add you to the team. I need some device information for any Apple device you will want to use. How to locate your device ID Next Steps: Get familiar with Xcode and all the development resources on developer.apple.com . Intro to Xcode Overview Team, Signing Certificate, Provisioning Profile (IMD) Building an iOS Application Run app in simulator and on a device Xcode Help References Getting started with iOS development - A section from the Unity manual. Good to be familiar with for building apps in Unity with the goal of putting them on iOS devices. Project #1: Asset Creation & Visualization Design a set of avatars / characters and environmental assets for use in VR or AR experiences. Create at least 1 avatar / character Create at least 2 environmental assets Tips: Using Cinema 4D, Make Human, Mixamo, Fuse, and/or another character building or 3D modeling workflows, design a collection of assets that can be used in VR and/or AR applications. What kind of assets? Each tool we've encountered so far has a set of tools and functions. For instance, Make Human is a parametric character modeling tool. The resulting human figures can be exported and imported into Mixamo for auto-rigging. Cinema 4D as you have seen is primarily used for motion graphics but can be used to animate dynamic 3D objects for use in other workflows such as Unity or Adobe Aero. Visualize your assets in an interesting way using Adobe Aero , Torch AR , and/or Unity. If using Adobe Aero or Torch AR, experiment with the built in behaviors (interaction and triggers) functionality to give your AR experience dynamic interactions. If using Unity, you likely are interested in building a VR expeirence using Steam VR. Follow the Unity + SteamVR tutorial to setup a basic VR world and configure object interaction and teleportation. Deliverable: Documentation in the form of a blog post of your design process and assets created. What were your goals and outcomes? Use screenshots, screen captures, renderings, gifs, Sketchfab viewers (for sharing 3D content), Github repos, and video. Include links to any tutorials, videos, and learning resources used. Be prepared to give a short presentation of your project next class. Share a link to your post with user group @imd in Slack channel #cmstudio . Due: Feb 17 Week 6: Intro to C# Scripting in Unity Feb 17 Discussion Project 1 Share Intro to AR Foundation next week Getting Started Download and Install Visual Studio if you haven\u2019t done it yet. Refer to the required software in the IMD Setup Guide . Scripting, Why and How? Scripts act as the glue between everything in Unity. They enable custom functionality between objects and systems, handle user input (interactions, touches, etc), allow GameObjects to interact with eachother, enable connectivity with networks, and much more. Scripts are simply added to GameObjects or used in combination with other C# files to build functionality through code. Visual Studio is the primary IDE tool for developing (writing code) scripts. What is scripting in Unity? A unity \"script\" is a C# file that contains a Class that inherits from MonoBehaviour . Read about Creating and Using Scripts . What is C#? A programming language. There are many resources online there to learn and practice. You can start with some of the resources below in the workout for this week. What is in a script? Lets find out! Primary References These are the primary references for learning about scripting in Unity. Bookmark and refer to as needed. Unity Scripting API Unity Manual: Scripting Scripting Overview Hello World Script Build a Unity Project Make a Cube GameObject. (What's a GameObject anyway? Lets look at the GameObject class in the Unity Scripting API .) Make a new script and add it as a Component to your new GameObject. Double click the script in the Assets folder to launch Visual Studio. Write code in Visual Studio to print to the Unity console from your script. Type the following code into your Start() function. Save the script. Debug.Log(\"Hello World!!\"); Press Play in Unity Cool! This should display your log message in the Unity console. Where to go for help Unity Forum Stack Overflow for Unity3D Google it of course! ???+ note \"Looking Outwards [3]: Identifying Functionality in Scripts\" 1. Identify a technique, behavior, or interaction that is made possible through the use of a script in Unity and write about it. It may help to do this after working through the tutorials in the workout. 2. Using the [Scripting Reference](ttps://docs.unity3d.com/ScriptReference/index.html), locate and point out any relevant classes, properties, and/or methods that enable the functionality you have identified. For example, every object in Unity is a [GameObject](https://docs.unity3d.com/ScriptReference/GameObject.html) with a [transform](https://docs.unity3d.com/ScriptReference/GameObject-transform.html) property and a [SetActive](https://docs.unity3d.com/ScriptReference/GameObject.SetActive.html) method. The transform property is used to access the position, rotation, and scale of the object and the SetActive method is used to enable or disable the object. _TIP: [Watch this short video showing how to search the Unity Scripting Reference](https://youtu.be/PDeha4vRXXU). If you press **CMD + '** while highlighting a particular class or method in a script, you will launch the Unity Scripting API search in the browser. It will return the results of the search, which you can then locate the information you need. For example, in a script select the \"transform\" method text and press **CMD + '** to launch the search._ Share a link to your post with user group **@imd** in Slack channel **#cmstudio**. **_Due: Feb 24_** ???+ example \"Workout [3]: Scripting in Unity\" This week your task is start getting familiar with scripting in Unity by working through the following tutorials. 1. Start by working through the [Roll-a-Ball Tutorial](https://learn.unity.com/project/roll-a-ball-tutorial). It's a great starting point to understanding how to use a script for controlling object movement and interaction in a scene. If you have already gone through this tutorial, then proceed to work through the tutorials below or expand upon what you learned in the Roll-a-Ball Tutorial. 2. Work through [Unit 1 - Player Control](https://learn.unity.com/project/unit-1-driving-simulation?courseId=5cf96c41edbc2a2ca6e8810f) in the course [Create with Code](https://learn.unity.com/course/create-with-code). This walks step-by-step through making a car and airplane simulation. Optional Tutorials 1. Watch the [Beginner Scripting](https://learn.unity.com/project/beginner-gameplay-scripting) video series. You don't need to code everything they explain, just watch in order to better understand something about C# and how the language is used. 2. Work though [Coding in Unity for the Absolute Beginner](https://learn.unity.com/tutorial/coding-in-unity-for-the-absolute-beginner). This is a video from 2014 but the concepts are still relevant. Watch this one for another take on how to use scripting to build functionality. **Beginner C# Resources** _Note: These resources are listed under [IMD Learning Resources](/guides/imd-setup-guide/#learning-resources) > [C# (C Sharp)](/guides/imd-setup-guide/#c-c-sharp)._ * [Visual Studio Tutorials | C#](https://docs.microsoft.com/en-us/visualstudio/get-started/csharp/?view=vs-2019) * [C# Documentation](https://docs.microsoft.com/en-us/dotnet/csharp/) * [Learn C#](https://www.learncs.org/) * [W3Schools C# Tutorial (C Sharp)](https://www.w3schools.com/cs/default.asp) * [The C# Players Guide Book](/dl/The-Csharp-Players-Guide-3rd-Edition.pdf) (pdf) - This is a great resource to better understand the C# programming language. **Unity Resources** * [learn.unity.com](https://learn.unity.com/) * [Unity Manual](https://docs.unity3d.com/Manual/index.html) * [Unity Scripting API](https://docs.unity3d.com/ScriptReference/) Week 7: Intro to AR Foundation Feb 24 Discussion Looking Outwards [3]: Identifying Functionality in Scripts - What did you find? Workout [3]: Scripting in Unity - What did you make? Question for class - Continue with AR Foundation next week or move on to SteamVR? Questions - Unity, Scripting, Visual Studio, Docs, C# Language, etc AR Foundation What is AR Foundation? AR Foundation is a set of Unity packages that enable Unity based applications to build and run on AR compatible devices supporting ARKit (iOS) or ARCore (Android). Emerging Tech - It's still the early days of learning to use this tool and lots of things are still in flux. The package has only been around for a few years and supported by a handful of devices but this will soon shift as more AR compatible devices come to market. In short, the time to start learning how to work with these tools is NOW. The best resource to staying up to date is the Unity Blog, AR/VR (XR) Unity Forum , and the AR Foundation Docs . AR Foundation Overview Building Unity Applications for iOS We will walk through this process together to make sure everyone is able to build Xcode projects from Unity, open in Xcode, and compile to run on a mobile device. in this workflow we will be building a Unity iOS application without AR Foundation to get the hang of the build process. The workout will walk through building the AR Foundation sample apps. Setup a Unity project Add a cube to the scene How to configure Unity build settings File > Build Settings Choose iOS and click \"Change Platform\" Click \"Player Settings\" to configure settings for iOS Choose scene and click Build to save the Xcode project. Create a \"Builds\" folder in your Unity project folder next to Assets, not inside of it. Launch Xcode Open the Unity-iPhone.xcodeproj contained in the build project folder you just saved. Select the Unity-iPhone target to configure the following details. General: Bundle Identifier: studio.cmci.make.myapp Display Name: MyApp Signing & Capabilities: Check Automatically manage signing Connect device via USB cable and press Play button to compile and run on the device. AR Foundation References AR Foundation Documentation Unity Blog: AR Foundation Overview AR Foundation Samples Learn Unity's AR Foundation - Great overview and tutorial of AR Foundation. Walks through a basic project showing how to work with both Android and iOS workflows. AR/VR (XR) Unity Forum AR Foundation Support for ARKit3 ???+ note \"Looking Outwards [4]: Understanding AR Foundation\" 1. Review the following resources to better understand the current state and future of AR Foundation. * [Unity Blog: AR Foundation Overview](https://blogs.unity3d.com/2018/12/18/unitys-handheld-ar-ecosystem-ar-foundation-arcore-and-arkit/) * [Learn Unity's AR Foundation](https://www.youtube.com/watch?v=FGh7f-PaGQc) - Great overview and tutorial of AR Foundation. Walks through a basic project showing how to work with both Android and iOS workflows. Just watch the first 6 mins to start. * [AR Foundation framework: Product roadmap - Unite Copenhagen 2019](https://youtu.be/UkBXOff8Efo) - Watch the first 35 mins. * [AR Foundation Architecture](https://youtu.be/UkBXOff8Efo?t=605) * [Our Journey So Far](https://youtu.be/UkBXOff8Efo?t=779) * [Base AR Features](https://youtu.be/UkBXOff8Efo?t=937) ([Screenshot](imgs/BaseARFoundationFeatures.png)) * [Supported Features](https://youtu.be/UkBXOff8Efo?t=1431) ([Screenshot](imgs/SupportedARFoundationFeatures.png)) * [AR Foundation Support for ARKit3](https://blogs.unity3d.com/2019/06/06/ar-foundation-support-for-arkit-3/) - Great overview of ARKit 3 supported features. 2. Based on your understanding of the AR Foundation package, what design opportunities do you envision given features such as plane tracking, image and object tracking, light estimation, and the more recent features supported by AR Kit 3 such as face tracking, motion capture, and people occulsion? Share a link to your post with user group **@imd** in Slack channel **#cmstudio**. **_Due: Mar 2_** ???+ example \"Workout [4]: Building AR Foundation Applications for iOS\" Your task this week is to build and run one or more AR Foundation applications on your iOS device. You will be following the same process we went through in class but for the AR Foundation sample projects. After getting comfortable with this process, continue working through the optional tutorials below as a way to improve your understanding of scripting and Unity in general. **I highly recommend** working your way through the Create with Code units and lessons. **Building the AR Foundation Samples** 1. Download the [AR Foundation Samples](https://github.com/Unity-Technologies/arfoundation-samples) from the Github repo. Extract the zip file and rename your folder \"arfoundation-samples\". _Note: Github repos downloaded as zip will always have the \"-master\" or branch name on the end of the repo when extracted_. 2. Open Unity Hub and \"Add\" the \"arfoundation-samples\" project folder. Use a recent version of Unity to build from. Unity 2019.3 works for me. Note: You will have to confirm upgrading the database if using 2019.3. Click OK and wait. You should see the Unity editor open up in a new scene when complete. 3. Change the Build Platform to iOS in the Build Settings. _Note: This will take a few mins to complete. Be patient._ * Under File > Build Settings, select iOS as the Platform and Click Switch Platform. Unity will change which platform to build to and will display a small Unity icon next to the current build platform when complete. 4. Configure Player Settings (Build Settings) * Click Player Settings to bring up the build options. 5. Change the following build settings under Player > \"Other Settings\" * Bundle Identifier: studio.cmci.make.ARFoundation * Automatically Sign: Checked (Note: This will need to be adjusted in Xcode) * Target minimum iOS version: 13.1 (Note: You need to make sure your device is up to date for AR Kit to work.) * Architecture: ARM64 * Camera Usage Description: Enable to use AR Foundation 6. Click the checkbox for scene file: Scenes/SimpleAR/SimpleAR 7. Click Build to save an Xcode project. Be sure to make a folder called \"Builds\" next to your Assets folder, not inside of it, to store all your builds. Note: This process takes a few minutes to complete a build. 8. Launch Xcode 9. Open the Unity-iPhone.xcodeproj contained in the build project folder you just saved. 10. Select the Unity-iPhone target to configure the following details. _Note that the Display Name is what will show up as the app name on your device._ * General: * Bundle Identifier: studio.cmci.make.ARFoundation.SimpleAR * Display Name: SimpleAR * Signing & Capabilities: * Check Automatically manage signing 11. Connect device via USB cable and press Play button to compile and run on the device. Press stop button to stop the application. Note: The app is installed on your device and can me removed just like any app. **NOTE: I am working on putting this entire process into a document and video format to hopefully make it easier to follow.** **Optional Tutorials** If you were successiful last week with Unit 1, proceed to work through [Unit 2 - Basic Gameplay](https://learn.unity.com/project/unit-2-basic-gameplay?courseId=5cf96c41edbc2a2ca6e8810f) in the course [Create with Code](https://learn.unity.com/course/create-with-code). This unit walks step-by-step through building a simple top-down game where you throw food at hungry animals and another where you play fetch with a dog. Your goal moving forward will be to apply the skills learned in asset design and scripting to a project and final project. Week 8: Mobile Interaction / AR Foundation Cont. Mar 2 Discussion Looking Outwards [4]: Understanding AR Foundation - What did you find? Workout [4]: Building AR Foundation Applications for iOS - What did you make? Questions - Unity, Scripting, Visual Studio, Docs, C# Language, etc Working with Mobile Inputs Learning how to use mobile inputs is important for building mobile AR experiences. How does a user interact with your application on a mobile device and how is it different than another device like a keyboard or VR controller? Lets look at a few examples of user interaction that are unique to mobile devices. Touch Interactions Touch Pressure Example Joystick Example Device Movement Accelerometer Example Roll-a-Ball for Mobile Example AR Foundation Lets explore the sample files a bit. Lets look at what they do and how they work at a high level. Dilmer Valecillos Youtube Tutorials - He has the most videos on AR Foundation development. Unity3d AR Foundation Tutorials For Beginners The Future Unity XR platform updates - Unity Technologies XR Interaction Toolkit (In preview) Unity Mixed and Augmented Reality Studio (aka Project MARS) (Still in development) Project MARS: What you need to know - Unite Copenhagen 2019 / Slides Project #2: Build a Unity Based Mobile App Your objective this week is to create a Unity based mobile app that runs on an iOS device. For the time being you do not need to make it capable of AR with AR Foundation. We will continue to explore how to design for AR and VR in the weeks ahead. Create a Unity scene and place objects or assets into it. At least 1 animated avatar or character or 3D object in the scene. At least 2 environmental assets to make it visually interesting. Experiment with it. Tip: Look back at previous resources for ways to make and animate characters or objects. Adapt any lessons or techniques learned by watching the Unity Create with Code tutorials or other tutorials that explore ways to visually enhance Unity scenes. Use an interaction method such as touch or device orientation to cause a change in the scene. If using touch interaction, you could cause a change in the character or object's transform (position, scale, rotation), appearance (color), visibility (active or not active). Similarily, if using the accelerometer, you could cause a change to a game object based on the orientation of the device. Tip: This part will require you to write at least one C# script to handle the interaction(s). Look at the examples on interaction above for ways to do this. To prototype with a mobile device tethered you can download the Unity Remote 5 app from the App Store. Learn more about using Unity Remote . Useful Resources Creating Input in Unity - Overview of possible inputs. Input Manager - You shouldn't need to change anything. Just for reference. Mobile device inputs - This shows how to work with mobile inputs such as touch and accelerometer. Input.Touch API - Properties for touch inputs. Touch Input for Mobile Scripting - 2019 - Unity tutorial on how Touch input works for mobile. Input.GetTouch API - This page has good examples of some ways to use touch input. Roll-a-Ball for Mobile Example - A mobile implementation of the Roll-a-Ball tutorial that uses the accelerometer to control motion of the ball. Build your Unity project for iOS and run on a mobile device. Create a build for your scene. Compile using Xcode and run on your device. Tip: Refer to the notes and workout from last week for how to do this. Capture video recording on your device and include in documentation. Tip: Refer to the guide on Mobile Screen Capture or look at How to record the screen on your iPhone, iPad, or iPod touch . Deliverable: Documentation in the form of a blog post of your creative process and experience. What were your goals and outcomes? Use screenshots, screen captures, renderings, gifs, Sketchfab viewers (for sharing 3D content), Github repos, and video. Include links to any tutorials, videos, and learning resources used. Be prepared to give a short presentation of your project next class. Share a link to your post with user group @imd in Slack channel #cmstudio . Due: Mar 9 Week 9: UI and UX of XR Mar 9 Discussion Project 2 Share Questions - Unity, Scripting, Visual Studio, Docs, C# Language, etc XR Design Theory VR Interface Design Manifesto (2014) by Mike Alger VR Interface Design Pre-Visualisation Methods by Mike Alger - A great research based video covering several topics relevant to designing VR interfaces. Highly recommend. Be sure to look at video description for a list of references and cooresponding writeup document. XR Design Theory and Practice for Digital Eyewear by Mike Alger / Video References MCE 2018: How we design for VR | Mike Alger - This is a great talk from 2018. He breaks down the emerging skills, roles, and applications of XR. XR Design: Imagination, Immersion, and Presence VR Design Sprint - Example (case study) of a design spring process. Interesting read and something to think more about as you begin to prototype. VR And AR Mark The Greatest Revolution In The History Of UX/UI Design - Good discussion about aspects of VR/AR relating to UX and UI design. The UX of VR - A curated list of resources to help you on your journey into the User Experience of Virtual Reality. Creative tools and workflows for immersive content creation (pdf) - An industry report by ImmerseUK.org featuring case studies, workflows, and more. Designing for Mobile AR This is a great series of articles by Bushra Mahmood from Unity. A Quick Guide to Designing for Augmented Reality on Mobile (Part 1) - Intro to this series of articles and the most common problem for designers new to AR (which is mostly everyone still). A Quick Guide to Designing for Augmented Reality on Mobile (Part 2) - A collection of some basic interface patterns and behaviors that have started to emerge and worth considering when designing an AR experience. A Quick Guide to Designing for Augmented Reality on Mobile (Part 3) - \u200b\u200bAR is driven by behavior and interaction. This article will dive into different types of experiences, as well as common design patterns and styles found in current AR apps. A Quick Guide to Designing for Augmented Reality on Mobile (Part 4) - A quick primer on designing for 3D in AR. Context-First Design for Augmented Reality A designer's guide to hardware and software for mobile AR Future UI / Interface Design HUDS + GUIS - A great website to look deeper into the workflows of VFX industry experts and motion designers responsible for crafting the UI and UX we see in movies, games, and real world applications. Robbie Tilton Design Guidelines I'm sure there are more of these design guidelines being created by other large compenies. These are just a few cases where the company is putting design guidelines out there next to existing standards to make the knowledge accessible. Keep your eye out for others and share as you find them. Apple's AR Design Guidelines - Part of the Human Interface Guidelines IBM AR/VR Design Guidelines UX Patterns ???+ note \"Looking Outwards [5]: UI and UX for XR\" Identify 2-3 particular ideas or aspects from the articles, videos, websites above that relate to the topic of UI design for XR or UX design for XR and discuss them further. This is meant to be more of a research based exploration post. * Identify the basic concepts being discussed and how you understand them. How do the ideas inform your understanding of UI design and/orUX design? * Where do you see the ideas being deployed in the world right now? Where might these ideas be implemented in the future? For what purpose? * How can UI design and/or UX design evolve to integrate new workflows? * What can designers do today to make it easier for designers of tomorrow to create for XR? * What problems do you see with present design workflows for XR or do you see on the horizon? Share a link to your post with user group **@imd** in Slack channel **#cmstudio**. **_Due: Mar 16_** ???+ example \"Workout [5]: Blog Posts\" Your task this week is to make sure you are caught up on all posts for \"looking outwards\" posts (5) and projects (2). Share a link to your post with user group **@imd** in Slack channel **#cmstudio**. Week 10: Going Virtual Mar 16 We will use the following Zoom meeting to have class each week. You can learn more about Zoom from OIT at https://oit.colorado.edu/services/conferencing-services/web-conferencing-zoom . Zoom Meeting: https://cuboulder.zoom.us/j/6140595823 Discussion Virtual class for rest of semester. What does this look like? Opportunities for us in VR or AR Tools that support new ways to work virtually / remotely / collaboratively Tools that enable capture, transmission, and representation Collaboration hubs framevr.io miro - It's like an infinite whiteboard moot - Slack extension for VR rooms discord Reality Capture display.land Representation sketchfab - VR and AR modes Final Project Proposal Final Project Proposal Meet with each project group via Zoom Meeting to discuss proposals. Sign up for a meeting time here Due: Mar 30 Spring Break Mar 23 Spring Break, No Class Week 11: Review Final Project Proposals Mar 30 Meet with each project group via Zoom Meeting to discuss proposals. Sign up for a meeting time here Week 12: Final Projects Apr 6 Meet via Zoom Meeting for virtual studio Week 13: Final Projects Apr 13 Meet via Zoom Meeting for virtual studio Week 14: Final Projects Apr 20 FCQ's Meet via Zoom Meeting for virtual studio Week 15: Final Projects Apr 27 Prepare for \"Virtual\" Spring Show Apr 30th - Last day of Spring classes. May 4th - Final Project Documentation Due Final Project Documentation AR Service Dog Simulation by Gia Almuaili Our Ocean by Caro Beresford-Wood AR Illustration by Yeon Choi Stuttering VR Exposure Therapy by Steven Douglas AR Race Game by Min Kim Addressing Depression: Empathy Through VR by Megan Kwiatkowski The Illusion of Life 2.0 by Nick Lunt Data Visualization and the Corona Conversation by Derek Palmer AR Book Map by Tess Stevens AQUA Brand Animation by Yangmin Zhang","title":"Critical Making 2: Immersive Media Design"},{"location":"APRD-5007/#critical-making-2-immersive-media-design","text":"Focuses on building virtual reality and augmented reality based experiences for product innovation. It is a studio-based course that explores the intersection of virtual reality (VR) tools and workflows, interaction design, multimedia production, and product innovation as possible tools for solving industry-based challenges. Students will develop fundamental skills in 2D/3D asset creation, reality capture and representation, simulation, animation, and rendering strategies used in the production of high-quality content for use in crafting immersive digital experiences. The course will utilize industry-standard tools such as Unity, Cinema 4D, Adobe Creative Cloud, and hardware platforms such as HTC VIVE and Oculus Rift. In addition, the course will cover concepts ranging from UI/UX design for immersive experiences, interaction design in VR, programming game mechanics, designing for human interaction, and scripting behaviors for digital objects and agents.","title":"Critical Making 2: Immersive Media Design"},{"location":"APRD-5007/#information","text":"Day and Time: Monday, 1:30 pm - 4:30 pm CMCI Studio (1301 Walnut St) Instructor: RJ Duran Email: rj.duran@colorado.edu Slack: @rjduran on cmcistudio.slack.com Office hours by appointment. Feel free to reach out to me via slack or email. Slack: Channel #cmstudio and user group @imd will be used for all course communication and notifications. Be sure to use the appropriate user group when necessary.","title":"Information"},{"location":"APRD-5007/#course-themes","text":"Building VR Experiences Building Mobile AR Experiences Designing Media for VR and AR VR and AR Hardware Systems Scripting / Programming Digital Asset Creation Digital Workflows and Asset Pipelines Reality Capture Interactive and Immersive Digital / Physical Experiences Emerging XR Tech UX/UI of XR Rapid Prototyping Product Development","title":"Course Themes"},{"location":"APRD-5007/#resources","text":"This website is the primary resource for all Critical Making Studio courses. Some of the resources used across the different courses are divided up into sections found on the left sidebar. Course specific resources will be found within this course schedule page, also found near the top of the left sidebar.","title":"Resources"},{"location":"APRD-5007/#cmci-studio","text":"CMCI Studio facilities include the large main room (West Studio) and adjacent smaller room (North Studio). Both rooms contain different functionalities for developing projects at varying scales and for varying audiences. Read through the Studio Handbook for learning about each room and accessing the various tools and capabilities we have on site.","title":"CMCI Studio"},{"location":"APRD-5007/#dcmp-vr-lab","text":"The CMCI Department of Critical Media Practices (DCMP) VR Lab contains tools and equipment for building VR, AR, and MR based experiences. Students have keycard access to a variety of PC workstations with HTC Vive Pro Hardware, Apple iMac workstations and software including Unity, UE4, Metashape Pro, Blender, and Adobe Suite. Lab Manager: Jason Gnerre Email: gnerre@colorado.edu Location: Folsom Stadium. STAD 136, between Gate 5 and 6. ( map ) Hours: Go check the schedule posted on the door to see when the lab is open.","title":"DCMP VR Lab"},{"location":"APRD-5007/#imd-learning-resources","text":"This course will make use of various kinds of media such as books, websites, technical documentation, and video tutorials spanning interaction design, game engines, programming / scripting, computer graphics, and hardware systems used to construct immersive media based experiences. While some resources will be listed under the week we encounter them, most of the primary learning resources can be found listed in the Learning Resources section of the IMD Setup Guide .","title":"IMD Learning Resources"},{"location":"APRD-5007/#course-repo","text":"You will be able to find the examples we talk about in class here. Course Repo: CM2-IMD","title":"Course Repo"},{"location":"APRD-5007/#workload","text":"This is a 3 credit hour course. You should expect to dedicate at least 2-3 hours per credit hour. This translates into a 6-9 hours per week. Consider 6 hours a minimum expectation for one studio course and plan accordingly with your other studio courses. Deliverables for the course consist of \" Looking Outwards \" Reports, Workouts , Projects , and a Final Project . These are to be submitted weekly as blog posts on the due date specified each week. In general, assignment parameters will be based on the topics of the week and due the following week by the start of class time. Refer to the Deliverables section for more detail. The course is organized into weekly meetings consisting of instructor led project-driven topics organized as workshops and studio work sessions. It is expected that all students are active participants in each session. This course will require considerable effort outside of class time. Plan work sessions with others as much as possible and be sure to take care of your mind and body so as not to get too stressed or overexert yourself. If you should need assistance managing stress or otherwise, you can get in touch with CAPS .","title":"Workload"},{"location":"APRD-5007/#deliverables","text":"This is an experimental project based course, largely driven by student research and interests. Each week will follow a similar format when it comes to finding balance between theory and practice. It's expected that each student has varying skills and interests upon entering the course and are excited to expand on them and apply them towards their areas of interest. The course deliverables consist of \" Looking Outwards \" Reports to discover the emerging boundaries of XR and report on them, Workouts to develop skills in 3D asset creation, C# scripting, and modern XR toolkits, Projects to put research findings into practice and exercise creative faculties, and a Final Project to design and build a functional XR experience. Each deliverable is expected to vary based on the area of interest and parameters defined. The following outlines the general criteria for course deliverables throughout the semester.","title":"Deliverables"},{"location":"APRD-5007/#looking-outwards","text":"What is a \"Looking Outwards\" Report? It's basically a blog post containing your research, thoughts, and ideas on a particular topic of interest. This means you should be looking at a variety of information sources such as blogs, emerging tech news, research papers, design/art/tech focused websites, tutorials, etc. covering the topics listed under Course Themes and reporting on what you find each week. These kinds of reports are due almost every week as noted in the schedule and count towards 10% of your final grade. This approach is inspired by Prof. Golan Levin's Looking Outwards Reports for the course Interactivity & Computation at CMU School of Art. Why are we doing these? Reason 1: I literally can\u2019t keep up with the changes taking place in the various fields related to XR and I need your help. Many hands make light work. You are the pioneers of this class and are tasked with discovering content and creating documentation that adds to the field of Immersive Media Design. Reason 2: We need to build a body of documentation that connect several disparate fields. Conducting research across several fields will uncover new and interesting opportunities for us. Throughout the semester I will document our collective findings under Looking Outwards (found in the left sidebar under CM 2 IMD).","title":"Looking Outwards"},{"location":"APRD-5007/#workouts","text":"What is a \"Workout\"? A workout is some kind of weekly exercise that aims to practice and build skills. It's just what it sounds like, a way to work your \"muscles.\" What form do these take? They can take the form of reading technical documentation, writing code, solving a design challenge, trying out new software, and working through video tutorials that challenge and enable practice of concepts discussed in class. These are not graded but are highly recommended because they will provide greater understanding of a specific topic through focused hands-on practice. You may write blog posts for the workouts you do to help document your progress and process but it's not required.","title":"Workouts"},{"location":"APRD-5007/#projects","text":"What is a Project? A project aims to solve a problem or accomplish a goal using tools and skills. What form do these take? They are largely based on the topics explored in class, through the workouts, and through your research. They allow you to dig into and expand on a topic that interests you within the field of Immersive Media Design. They can be thought of as mini-projects to build towards developing your final project or one-off experiments exploring a particular technique or software workflow you are interested in. Projects are due every few weeks as noted on the schedule and count towards 40% of your final grade.","title":"Projects"},{"location":"APRD-5007/#final-project","text":"Read more about writing a project proposal and final project deliverables here .","title":"Final Project"},{"location":"APRD-5007/#grading-evaluation","text":"Grades for the course follow the standard A through F letter grading system and will be determined by the following breakdown. Type Percentage of Grade Looking Outwards 10 % Workouts Not graded Projects 40 % Final Project 50 % Work is evaluated based on the following: Done vs Not Done. Done gets credit, Not Done does not get credit. Quality and Quantity of deliverables. This studio based course requires a healthy level of creative immersion and balance to be successful. Explore your creative process through making and always deliver to the best of your abilities. Achieve quality through quantity. Engagement with the subject matter. If something isn't interesting to you, make it interesting. Clarity of documentation. Make it easy for others to read and understand. Collaboration will also be a factor of evaluation if you choose to work on projects in teams of no more than 3-4 people. The division of duties on any project needs to be clearly defined and documented by all team members and will factor into individual evaluations.","title":"Grading &amp; Evaluation"},{"location":"APRD-5007/#week-1-overview","text":"Jan 17 (Friday) Overview of Course Course Deliverables IMD Setup Guide Mobile Devices Survey DCMP VR Lab Tour - Friday Jan 31, 9:30-10:30am Signup Form VR and AR Hardware & Software Overview There are various ways to get started with VR and AR at this point in time. Too many in fact. It can be difficult to know where to begin. For the majority of this class we will be focused on Unity, XCode, Cinema4D, and C# Scripting with Visual Studio or VSCode. For hardware we have several HTC Vive units, a desktop PC and two laptop PCs capable of running any VR experience you build. You also have access to the DCMP VR Lab to develop experiences. Looking at the results from the mobile device survey you filled out, most people seem to have a recent Apple iPhone capable of supporting AR Kit. Yay! Related CES2020 Reports in VR/AR CES 2020 proved VR and AR are thriving \u2014 and moving into automobiles CES 2020: A Reality Check For The VR And AR Industries Panasonic at CES 2020: the world\u2019s first HDR capable UHD VR eyeglasses Apple AR App Store AR AR Foundation Adobe Aero Using quicktime to show AR content running on device. If your camera or microphone doesn't show up, you may need to goto Security & Privacy in System Preferences and enable Microphone access for QuickTime Player. Big Bang AR ( App Store ) Background info at CERN Experiments with Google XR Ethics Manifesto by Kent Bye (Voices of VR Podcast) How and Why Immersive Experiences Are Taking Over the Denver Art Scene This is the computer you\u2019ll wear on your face in 10 years Spectacles by Snapchat Lens Studio by Snapchat Spark AR Studio by Facebook/Instagram Goodbye Uncanny Valley - A great overview of computer graphics, rendering technologies, and a spectrum of works exploring the future of the CG medium. VR Awesome VR, AR and Mixed Reality Resources The UX of VR AR Will Spark the Next Big Tech Platform\u2014Call It Mirrorworld by Kevin Kelly Where to find more VR and AR news UploadVR Next Reality Venture Beat ARPost Creative Applications Voices of VR Podcast AR/VR Journey People / Projects Wenzy90 Andrew James Art Matt Taylor - 3D Gfx and Motion Designer / Artist Robbie Tilton - Designer Keijiro Takahashi , Unity Experiments ???+ note \"Looking Outwards [0]: The XR Landscape\" Begin looking at the current state of VR and AR applications, tools, and technologies. Spend time this week scanning the latest from CES 2020 and other tech news sources reporting on the state of the industry, new technology, design and development trends, and showcasing interesting applications and use cases in AR/VR. Start by investigating some of sites above. 1. Identify 2-3 applications or aspects of VR and/or AR you find intriguing. * What's interesting to you about your findings? Try to be specific. 2. Identify 2-3 creatives (story tellers, designers, developers, coders, etc) that are making interesting digital content or VR and/or AR based media or works. * What are they making? * Try to identify specifically what is interesting to you about their work and workflow. What's inspiring about the work? * What kinds of tools are they using? Share a link to your post with user group **@imd** in Slack channel **#cmstudio**. **_Due: Jan 27_** ???+ example \"Workout [0]: Getting Started\" 1. This week you need to download and install the required software listed in the [IMD Setup Guide](/guides/imd-setup-guide/). 2. You should start exploring any of the tools through the freely available and built in documentation, tutorials, and guides. Adobe, Cinema4D, Unity, and XCode have large user communities and great documentation to get started. My suggestion is to start getting familiar with Unity since much of the work we do will end up in there. I suggest looking in the Unity tutorials for a Foundational tutorial or Creator Kit tutorial that interests you to work through over the next week. Getting Started with Unity * [learn.unity.com](https://learn.unity.com/) * [Creator Kit: Puzzle](https://learn.unity.com/project/creator-kit-puzzle) * [Projects](https://learn.unity.com/projects) * [Unity Manual](https://docs.unity3d.com/Manual/index.html)","title":"Week 1: Overview"},{"location":"APRD-5007/#week-2-no-class","text":"Jan 20 MLK Day, No Class","title":"Week 2: No Class"},{"location":"APRD-5007/#week-3-intro-to-cinema-4d","text":"Jan 27 Discussion Looking Outwards [0] - What did you find? Workout [0] - Any software issues? What did you make? Course Repo: CM2-IMD - You will be able to find the examples we talk about in class here. This week we are starting to look at C4D's comprehensive set of tools for creating assets that can be used in VR and AR. Many people use the tools for motion graphics, which you will quickly find as you start investigating the tutorials and resources out there. Just like other 3D design software, it can be a bit intimidating at first since there are so many ways to use it and so many tools to get familiar with. In my experience, it's best to start by focusing on understanding a few tools that help you accomplish a specific task, then continue exploring whats possible as you learn your way around. C4D is similar to Blender, Autodesk Maya, and After Effects in many ways and combines the best of some of these tools into something approachable for designers new to working in 3D. Most people working in the motion graphics world utilize some combination of C4D, After Effects, Illustrator, and Photoshop. Overview The Interface Layouts, Toolbars, Views, Timeline, Materials, Objects, Attributes Default Units = cm To Change Units: Edit > Preferences > Units > Basic > Unit Display Views Single and 4 Up View (Perspective, Top, Right, Front) To Reset View: View > Frame Default Axes X = Red, Y = Green, Z = Blue XYZ Gizmo (aka \"Gumball\") Translation (Coordinates), Scale (Object Properties) Planar or Multi-Axis Movement (Corner Angle Gizmos) Scale with small boxes on gizmo Object Movement Translation - E Scale - T Rotate - R Movement in Views Pan - 1 + Click (OR Two-Finger Movement) Zoom - 2 + Click (OR Pinch-In/Out Movement) Orbit - 3 + Click (OR Option + Click) Primitives (Objects) Object Manager - All the objects in the scene Renaming Objects Attribute Manager - Properties for selected object(s) Modeling Primitives - \"Blue Cube\" Icon Parametric Object vs Polygonal Object - aka \"Make Editable\" - C This converts a parametric object into a polygonal object with vertices, faces, and edges. Splines - \"Pen\" Icon Materials Creating new materials Assigning colors Animation Using keyframes to create motion Position Size Rotation The Timeline Adding keyframes Visualize Curves Window > Timeline (F-Curve) Import / Export Rendering Images / Video Render View - CMD + R (Quick Render in Active View) Render Settings - Set size, output location, etc Render to Picture Viewer Window > Picture Viewer Exporting 3D Models File > Export File Types: FBX, OBJ, etc Making videos and GIFs Exporting MOV or MP4 videos from C4D Gif Brewery 3 (macOS App) After Effects Tutorial: How to import an image sequence ???+ note \"Looking Outwards [1]: Motion Design\" The world of motion graphics is powered by Cinema 4D and lots of creative magic and skill. Before we jump further into building VR and AR applications, it's good to have some understanding of at least one 3D design workflow or toolset for producing content. Your objective this week is to investigate what designers are doing and how they are doing it to bring ideas to life. Whether producing content for ads or marketing, designing animated info graphics or data visualization, or exploring digital art or building games, understanding the role of motion design in our digital landscape is an essential part of any modern designers toolkit. 1. Identify 2-3 applications or aspects of motion design or motion graphics you find intriguing. * What's interesting to you about your findings? Try to be specific. 2. Identify 2-3 creatives (artists, designers, freelancers, agencies, collectives, etc) that are exploring motion design. * What are they making and how? * Try to identify specifically what is interesting to you about their work and workflow. Share a link to your post with user group **@imd** in Slack channel **#cmstudio**. **_Due: Feb 3_** ???+ example \"Workout [1]: Getting Familiar with Cinema 4D\" This week I would like you to explore Cinema 4D as a tool for creating 3D assets for use in VR and AR applications. I assume most are new to the environment so just explore the resources below to get a feel for how to work with the tools. Most importantly, attempt to make something that you are interested in. You can use these tutorials are starting points or explore another workflow you find. Getting Started with Cinema 4D * [Introduction to Cinema 4D](https://www.linkedin.com/learning/introduction-to-3d-2/cinema-4d-interface-and-overview?u=42275329) - Part of the LinkedIn Learning Course [Introduction to 3D](https://www.linkedin.com/learning/introduction-to-3d-2). It covers the basics of C4D. * [Getting Started with Cinema 4D by EJ Hassenfratz](https://www.cineversity.com/vidplaylist/getting_started_with_cinema_4d_r20) - A great introduction series. I highly recommend starting with these. * [Introduction to Cinema 4D](https://greyscalegorilla.com/intro-to-cinema-4d/) by [Grey Scale Gorilla](https://greyscalegorilla.com/) - Tutorial series by one of the best motion graphics resources out there. * [Cinema 4D Tutorials](https://www.youtube.com/playlist?list=PLn_EY8NKzmnAYKIghACOh1PrIrl0vlPjZ) by [MOBOX Graphics](https://www.youtube.com/channel/UCQyp3CBrBSfIynoDosN3c7g) - Simple tutorials for C4D and After Effects. * [School of Motion Cinema 4D Tutorials](https://www.schoolofmotion.com/search-results?templateTypes=TUTORIAL&category=&tool=Cinema%204D&pageIndex=0)","title":"Week 3: Intro to Cinema 4D"},{"location":"APRD-5007/#week-4-intro-to-unity-xr-assets","text":"Feb 3 Discussion Looking Outwards [1]: Motion Design - What did you find? Workout [1]: Getting Familiar with Cinema 4D - What did you make? Intro to Unity Overview of Interface Unity Basics Asset Store Building a Basic 3D Project Assets Folder / File Management GameObjects Unity Manual Importing Creating Assets outside of Unity Working with Assets Where can you get 3d assets for a project? Unity Asset Store Free Assets CGTrader Mega List of 200 Free Unity Assets Free3D How do you make them? You can 3d model your own or find them online. What are common file types for VR and AR content? FBX, OBJ, glTF How can I view asset files? FBX Review - A really useful cross platform file viewer for FBX files. Meshlab - This is a good viewer for OBJ files and working with 3d scan data (meshes). Blender Cinema4D Exporting FBX files for use in Adobe Aero or Unity How to bake dynamic animation to keyframed animation. For Adobe Aero there are several limitations in the current (1.0) version, but this will improve over time. It's a good time to start getting familiar with the types of animation that are possible. Read Key 3D modeling concepts: Animation from the Adobe Aero documentation to learn more. Mixamo Adobe Mixamo is a tool that lets your choose a character and animate it with a set of parameters. You can eaily upload human character models from Fuse or another character modeling workflow and auto-rig it. Once a model is rigged and has an animation you can export it for use in Adobe Aero, Unity, or for further manipulation in a 3D modeling environment. Common questions Upload and rig 3D characters with Mixamo Adobe Fuse Adobe Fuse is part of creative cloud and is currently available but will be removed from Creative Cloud in September 2020. Unfortunately Adobe Fuse does not run on macOS Catalina since it's a 32-bit application. Adobe is not supporting it anymore. We are forced to look at other character modeling tools like Make Human or DAZ3D for near-out-of-the-box character (humanoid/avatar) parametric modeling. ???+ note \"Looking Outwards [2]: Report on XR Assets\" Your objective this week is to investigate how assets are created for AR and VR. 1. Identify 2-3 tools that help designers create 2D or 3D assets for use in VR and AR and find some key learning resources for them. * What's interesting to you about your findings? Try to be specific. 2. Identify 2-3 industries or creatives (game designers, artists, programmers, creative coders, etc) making use of these tools to build their experiences. * What are they making and how? * Try to identify specifically what is interesting to you about their work and workflow. Share a link to your post with user group **@imd** in Slack channel **#cmstudio**. **_Due: Feb 10_** ???+ example \"Workout [2]: Asset Workflows\" This week I would like you to explore the asset creation workflows shown above and in class. Experiment with tools such as Mixamo to customize and animate a humanoid character or Cinema 4D to build a dynamic animation for use in Adobe Aero or Unity. Perhaps you come across another tool when researching how assets are created this week. Attempt to build something with that tool and workflow. Once you have some kind of asset, put it into Adobe Aero to view it in AR or build a simple Unity world around it. Make a screen capture of your experience and share it in your report if you like. **AR Prototyping with Adobe Aero and Cinema 4D** * Export FBX file from Cinema 4D * Open the Creative Cloud Desktop Application (In the menu bar on macOS or system tray on Windows). * Goto File > Open Sync Folder. This will open the \"Creative Cloud Files\" folder on your system to drop your asset files into. * Copy assets to this folder. They will sync with the cloud and show up in Adobe Aero. * In Adobe Aero, make a new scene, scan a surface and add files from Creative Cloud. **Adobe Aero References** * [Get Started](https://helpx.adobe.com/aero/get-started.html) * [Supported file formats](https://helpx.adobe.com/aero/using/supported-file-formats.html) * [Prepare 3D Content](https://helpx.adobe.com/aero/using/prepare-3d-content-aero.html) * [Import FBX files into Aero](https://helpx.adobe.com/aero/using/import-fbx-files-into-aero.html) * [Import animated FBX from C4D/Maya to Aero](https://community.adobe.com/t5/aero/import-animated-fbx-from-c4d-maya-to-aero/td-p/10755583?page=1) - Aero only supports (Position-Scale-Rotation) PSR Animations for the time being. * Tutorial: [Using Adobe Aero & Cinema 4D to Create Augmented Reality Experiences](https://www.eyedesyn.com/tutorials/using-adobe-aero-cinema-4d-to-create-augmented-reality-experiences/) * Tutorial: [Using Cinema 4D Art for Augmented Reality with Adobe Aero](https://www.schoolofmotion.com/blog/using-cinema-4d-art-augmented-reality-adobe-aero) - This is a slightly expanded and step-by-step version of the previous tutorial by EJ Hassenfratz.","title":"Week 4: Intro to Unity / XR Assets"},{"location":"APRD-5007/#week-5-apple-development-intro-to-xcode","text":"Feb 10 Discussion Looking Outwards [2]: Report on XR Assets - What did you find? Workout [2]: Asset Workflows - What did you make? Minor change. \"Assignments\" are now referred to as \"Projects\". Questions on Cinema 4D, Unity, Adobe Aero, other stuff? This week we will work on getting everyone setup as Apple developers as part of our CMCI STUDIO team. We will then take a look at Xcode and start looking at how to start building apps using Unity and AR Foundation as time allows. We will be looking at different aspects of AR Foundation and scripting in the weeks ahead. iOS University Developer Program Getting started with app development Setup access to CMCI STUDIO team. I need the following. Send to me via Slack DM. I need your university (@colorado.edu) email address to add you to the team. I need some device information for any Apple device you will want to use. How to locate your device ID Next Steps: Get familiar with Xcode and all the development resources on developer.apple.com . Intro to Xcode Overview Team, Signing Certificate, Provisioning Profile (IMD) Building an iOS Application Run app in simulator and on a device Xcode Help References Getting started with iOS development - A section from the Unity manual. Good to be familiar with for building apps in Unity with the goal of putting them on iOS devices.","title":"Week 5: Apple Development / Intro to Xcode"},{"location":"APRD-5007/#project-1-asset-creation-visualization","text":"Design a set of avatars / characters and environmental assets for use in VR or AR experiences. Create at least 1 avatar / character Create at least 2 environmental assets Tips: Using Cinema 4D, Make Human, Mixamo, Fuse, and/or another character building or 3D modeling workflows, design a collection of assets that can be used in VR and/or AR applications. What kind of assets? Each tool we've encountered so far has a set of tools and functions. For instance, Make Human is a parametric character modeling tool. The resulting human figures can be exported and imported into Mixamo for auto-rigging. Cinema 4D as you have seen is primarily used for motion graphics but can be used to animate dynamic 3D objects for use in other workflows such as Unity or Adobe Aero. Visualize your assets in an interesting way using Adobe Aero , Torch AR , and/or Unity. If using Adobe Aero or Torch AR, experiment with the built in behaviors (interaction and triggers) functionality to give your AR experience dynamic interactions. If using Unity, you likely are interested in building a VR expeirence using Steam VR. Follow the Unity + SteamVR tutorial to setup a basic VR world and configure object interaction and teleportation. Deliverable: Documentation in the form of a blog post of your design process and assets created. What were your goals and outcomes? Use screenshots, screen captures, renderings, gifs, Sketchfab viewers (for sharing 3D content), Github repos, and video. Include links to any tutorials, videos, and learning resources used. Be prepared to give a short presentation of your project next class. Share a link to your post with user group @imd in Slack channel #cmstudio . Due: Feb 17","title":"Project #1: Asset Creation &amp; Visualization"},{"location":"APRD-5007/#week-6-intro-to-c-scripting-in-unity","text":"Feb 17 Discussion Project 1 Share Intro to AR Foundation next week Getting Started Download and Install Visual Studio if you haven\u2019t done it yet. Refer to the required software in the IMD Setup Guide . Scripting, Why and How? Scripts act as the glue between everything in Unity. They enable custom functionality between objects and systems, handle user input (interactions, touches, etc), allow GameObjects to interact with eachother, enable connectivity with networks, and much more. Scripts are simply added to GameObjects or used in combination with other C# files to build functionality through code. Visual Studio is the primary IDE tool for developing (writing code) scripts. What is scripting in Unity? A unity \"script\" is a C# file that contains a Class that inherits from MonoBehaviour . Read about Creating and Using Scripts . What is C#? A programming language. There are many resources online there to learn and practice. You can start with some of the resources below in the workout for this week. What is in a script? Lets find out! Primary References These are the primary references for learning about scripting in Unity. Bookmark and refer to as needed. Unity Scripting API Unity Manual: Scripting Scripting Overview Hello World Script Build a Unity Project Make a Cube GameObject. (What's a GameObject anyway? Lets look at the GameObject class in the Unity Scripting API .) Make a new script and add it as a Component to your new GameObject. Double click the script in the Assets folder to launch Visual Studio. Write code in Visual Studio to print to the Unity console from your script. Type the following code into your Start() function. Save the script. Debug.Log(\"Hello World!!\"); Press Play in Unity Cool! This should display your log message in the Unity console. Where to go for help Unity Forum Stack Overflow for Unity3D Google it of course! ???+ note \"Looking Outwards [3]: Identifying Functionality in Scripts\" 1. Identify a technique, behavior, or interaction that is made possible through the use of a script in Unity and write about it. It may help to do this after working through the tutorials in the workout. 2. Using the [Scripting Reference](ttps://docs.unity3d.com/ScriptReference/index.html), locate and point out any relevant classes, properties, and/or methods that enable the functionality you have identified. For example, every object in Unity is a [GameObject](https://docs.unity3d.com/ScriptReference/GameObject.html) with a [transform](https://docs.unity3d.com/ScriptReference/GameObject-transform.html) property and a [SetActive](https://docs.unity3d.com/ScriptReference/GameObject.SetActive.html) method. The transform property is used to access the position, rotation, and scale of the object and the SetActive method is used to enable or disable the object. _TIP: [Watch this short video showing how to search the Unity Scripting Reference](https://youtu.be/PDeha4vRXXU). If you press **CMD + '** while highlighting a particular class or method in a script, you will launch the Unity Scripting API search in the browser. It will return the results of the search, which you can then locate the information you need. For example, in a script select the \"transform\" method text and press **CMD + '** to launch the search._ Share a link to your post with user group **@imd** in Slack channel **#cmstudio**. **_Due: Feb 24_** ???+ example \"Workout [3]: Scripting in Unity\" This week your task is start getting familiar with scripting in Unity by working through the following tutorials. 1. Start by working through the [Roll-a-Ball Tutorial](https://learn.unity.com/project/roll-a-ball-tutorial). It's a great starting point to understanding how to use a script for controlling object movement and interaction in a scene. If you have already gone through this tutorial, then proceed to work through the tutorials below or expand upon what you learned in the Roll-a-Ball Tutorial. 2. Work through [Unit 1 - Player Control](https://learn.unity.com/project/unit-1-driving-simulation?courseId=5cf96c41edbc2a2ca6e8810f) in the course [Create with Code](https://learn.unity.com/course/create-with-code). This walks step-by-step through making a car and airplane simulation. Optional Tutorials 1. Watch the [Beginner Scripting](https://learn.unity.com/project/beginner-gameplay-scripting) video series. You don't need to code everything they explain, just watch in order to better understand something about C# and how the language is used. 2. Work though [Coding in Unity for the Absolute Beginner](https://learn.unity.com/tutorial/coding-in-unity-for-the-absolute-beginner). This is a video from 2014 but the concepts are still relevant. Watch this one for another take on how to use scripting to build functionality. **Beginner C# Resources** _Note: These resources are listed under [IMD Learning Resources](/guides/imd-setup-guide/#learning-resources) > [C# (C Sharp)](/guides/imd-setup-guide/#c-c-sharp)._ * [Visual Studio Tutorials | C#](https://docs.microsoft.com/en-us/visualstudio/get-started/csharp/?view=vs-2019) * [C# Documentation](https://docs.microsoft.com/en-us/dotnet/csharp/) * [Learn C#](https://www.learncs.org/) * [W3Schools C# Tutorial (C Sharp)](https://www.w3schools.com/cs/default.asp) * [The C# Players Guide Book](/dl/The-Csharp-Players-Guide-3rd-Edition.pdf) (pdf) - This is a great resource to better understand the C# programming language. **Unity Resources** * [learn.unity.com](https://learn.unity.com/) * [Unity Manual](https://docs.unity3d.com/Manual/index.html) * [Unity Scripting API](https://docs.unity3d.com/ScriptReference/)","title":"Week 6: Intro to C# Scripting in Unity"},{"location":"APRD-5007/#week-7-intro-to-ar-foundation","text":"Feb 24 Discussion Looking Outwards [3]: Identifying Functionality in Scripts - What did you find? Workout [3]: Scripting in Unity - What did you make? Question for class - Continue with AR Foundation next week or move on to SteamVR? Questions - Unity, Scripting, Visual Studio, Docs, C# Language, etc AR Foundation What is AR Foundation? AR Foundation is a set of Unity packages that enable Unity based applications to build and run on AR compatible devices supporting ARKit (iOS) or ARCore (Android). Emerging Tech - It's still the early days of learning to use this tool and lots of things are still in flux. The package has only been around for a few years and supported by a handful of devices but this will soon shift as more AR compatible devices come to market. In short, the time to start learning how to work with these tools is NOW. The best resource to staying up to date is the Unity Blog, AR/VR (XR) Unity Forum , and the AR Foundation Docs . AR Foundation Overview Building Unity Applications for iOS We will walk through this process together to make sure everyone is able to build Xcode projects from Unity, open in Xcode, and compile to run on a mobile device. in this workflow we will be building a Unity iOS application without AR Foundation to get the hang of the build process. The workout will walk through building the AR Foundation sample apps. Setup a Unity project Add a cube to the scene How to configure Unity build settings File > Build Settings Choose iOS and click \"Change Platform\" Click \"Player Settings\" to configure settings for iOS Choose scene and click Build to save the Xcode project. Create a \"Builds\" folder in your Unity project folder next to Assets, not inside of it. Launch Xcode Open the Unity-iPhone.xcodeproj contained in the build project folder you just saved. Select the Unity-iPhone target to configure the following details. General: Bundle Identifier: studio.cmci.make.myapp Display Name: MyApp Signing & Capabilities: Check Automatically manage signing Connect device via USB cable and press Play button to compile and run on the device. AR Foundation References AR Foundation Documentation Unity Blog: AR Foundation Overview AR Foundation Samples Learn Unity's AR Foundation - Great overview and tutorial of AR Foundation. Walks through a basic project showing how to work with both Android and iOS workflows. AR/VR (XR) Unity Forum AR Foundation Support for ARKit3 ???+ note \"Looking Outwards [4]: Understanding AR Foundation\" 1. Review the following resources to better understand the current state and future of AR Foundation. * [Unity Blog: AR Foundation Overview](https://blogs.unity3d.com/2018/12/18/unitys-handheld-ar-ecosystem-ar-foundation-arcore-and-arkit/) * [Learn Unity's AR Foundation](https://www.youtube.com/watch?v=FGh7f-PaGQc) - Great overview and tutorial of AR Foundation. Walks through a basic project showing how to work with both Android and iOS workflows. Just watch the first 6 mins to start. * [AR Foundation framework: Product roadmap - Unite Copenhagen 2019](https://youtu.be/UkBXOff8Efo) - Watch the first 35 mins. * [AR Foundation Architecture](https://youtu.be/UkBXOff8Efo?t=605) * [Our Journey So Far](https://youtu.be/UkBXOff8Efo?t=779) * [Base AR Features](https://youtu.be/UkBXOff8Efo?t=937) ([Screenshot](imgs/BaseARFoundationFeatures.png)) * [Supported Features](https://youtu.be/UkBXOff8Efo?t=1431) ([Screenshot](imgs/SupportedARFoundationFeatures.png)) * [AR Foundation Support for ARKit3](https://blogs.unity3d.com/2019/06/06/ar-foundation-support-for-arkit-3/) - Great overview of ARKit 3 supported features. 2. Based on your understanding of the AR Foundation package, what design opportunities do you envision given features such as plane tracking, image and object tracking, light estimation, and the more recent features supported by AR Kit 3 such as face tracking, motion capture, and people occulsion? Share a link to your post with user group **@imd** in Slack channel **#cmstudio**. **_Due: Mar 2_** ???+ example \"Workout [4]: Building AR Foundation Applications for iOS\" Your task this week is to build and run one or more AR Foundation applications on your iOS device. You will be following the same process we went through in class but for the AR Foundation sample projects. After getting comfortable with this process, continue working through the optional tutorials below as a way to improve your understanding of scripting and Unity in general. **I highly recommend** working your way through the Create with Code units and lessons. **Building the AR Foundation Samples** 1. Download the [AR Foundation Samples](https://github.com/Unity-Technologies/arfoundation-samples) from the Github repo. Extract the zip file and rename your folder \"arfoundation-samples\". _Note: Github repos downloaded as zip will always have the \"-master\" or branch name on the end of the repo when extracted_. 2. Open Unity Hub and \"Add\" the \"arfoundation-samples\" project folder. Use a recent version of Unity to build from. Unity 2019.3 works for me. Note: You will have to confirm upgrading the database if using 2019.3. Click OK and wait. You should see the Unity editor open up in a new scene when complete. 3. Change the Build Platform to iOS in the Build Settings. _Note: This will take a few mins to complete. Be patient._ * Under File > Build Settings, select iOS as the Platform and Click Switch Platform. Unity will change which platform to build to and will display a small Unity icon next to the current build platform when complete. 4. Configure Player Settings (Build Settings) * Click Player Settings to bring up the build options. 5. Change the following build settings under Player > \"Other Settings\" * Bundle Identifier: studio.cmci.make.ARFoundation * Automatically Sign: Checked (Note: This will need to be adjusted in Xcode) * Target minimum iOS version: 13.1 (Note: You need to make sure your device is up to date for AR Kit to work.) * Architecture: ARM64 * Camera Usage Description: Enable to use AR Foundation 6. Click the checkbox for scene file: Scenes/SimpleAR/SimpleAR 7. Click Build to save an Xcode project. Be sure to make a folder called \"Builds\" next to your Assets folder, not inside of it, to store all your builds. Note: This process takes a few minutes to complete a build. 8. Launch Xcode 9. Open the Unity-iPhone.xcodeproj contained in the build project folder you just saved. 10. Select the Unity-iPhone target to configure the following details. _Note that the Display Name is what will show up as the app name on your device._ * General: * Bundle Identifier: studio.cmci.make.ARFoundation.SimpleAR * Display Name: SimpleAR * Signing & Capabilities: * Check Automatically manage signing 11. Connect device via USB cable and press Play button to compile and run on the device. Press stop button to stop the application. Note: The app is installed on your device and can me removed just like any app. **NOTE: I am working on putting this entire process into a document and video format to hopefully make it easier to follow.** **Optional Tutorials** If you were successiful last week with Unit 1, proceed to work through [Unit 2 - Basic Gameplay](https://learn.unity.com/project/unit-2-basic-gameplay?courseId=5cf96c41edbc2a2ca6e8810f) in the course [Create with Code](https://learn.unity.com/course/create-with-code). This unit walks step-by-step through building a simple top-down game where you throw food at hungry animals and another where you play fetch with a dog. Your goal moving forward will be to apply the skills learned in asset design and scripting to a project and final project.","title":"Week 7: Intro to AR Foundation"},{"location":"APRD-5007/#week-8-mobile-interaction-ar-foundation-cont","text":"Mar 2 Discussion Looking Outwards [4]: Understanding AR Foundation - What did you find? Workout [4]: Building AR Foundation Applications for iOS - What did you make? Questions - Unity, Scripting, Visual Studio, Docs, C# Language, etc Working with Mobile Inputs Learning how to use mobile inputs is important for building mobile AR experiences. How does a user interact with your application on a mobile device and how is it different than another device like a keyboard or VR controller? Lets look at a few examples of user interaction that are unique to mobile devices. Touch Interactions Touch Pressure Example Joystick Example Device Movement Accelerometer Example Roll-a-Ball for Mobile Example AR Foundation Lets explore the sample files a bit. Lets look at what they do and how they work at a high level. Dilmer Valecillos Youtube Tutorials - He has the most videos on AR Foundation development. Unity3d AR Foundation Tutorials For Beginners The Future Unity XR platform updates - Unity Technologies XR Interaction Toolkit (In preview) Unity Mixed and Augmented Reality Studio (aka Project MARS) (Still in development) Project MARS: What you need to know - Unite Copenhagen 2019 / Slides","title":"Week 8: Mobile Interaction / AR Foundation Cont."},{"location":"APRD-5007/#project-2-build-a-unity-based-mobile-app","text":"Your objective this week is to create a Unity based mobile app that runs on an iOS device. For the time being you do not need to make it capable of AR with AR Foundation. We will continue to explore how to design for AR and VR in the weeks ahead. Create a Unity scene and place objects or assets into it. At least 1 animated avatar or character or 3D object in the scene. At least 2 environmental assets to make it visually interesting. Experiment with it. Tip: Look back at previous resources for ways to make and animate characters or objects. Adapt any lessons or techniques learned by watching the Unity Create with Code tutorials or other tutorials that explore ways to visually enhance Unity scenes. Use an interaction method such as touch or device orientation to cause a change in the scene. If using touch interaction, you could cause a change in the character or object's transform (position, scale, rotation), appearance (color), visibility (active or not active). Similarily, if using the accelerometer, you could cause a change to a game object based on the orientation of the device. Tip: This part will require you to write at least one C# script to handle the interaction(s). Look at the examples on interaction above for ways to do this. To prototype with a mobile device tethered you can download the Unity Remote 5 app from the App Store. Learn more about using Unity Remote . Useful Resources Creating Input in Unity - Overview of possible inputs. Input Manager - You shouldn't need to change anything. Just for reference. Mobile device inputs - This shows how to work with mobile inputs such as touch and accelerometer. Input.Touch API - Properties for touch inputs. Touch Input for Mobile Scripting - 2019 - Unity tutorial on how Touch input works for mobile. Input.GetTouch API - This page has good examples of some ways to use touch input. Roll-a-Ball for Mobile Example - A mobile implementation of the Roll-a-Ball tutorial that uses the accelerometer to control motion of the ball. Build your Unity project for iOS and run on a mobile device. Create a build for your scene. Compile using Xcode and run on your device. Tip: Refer to the notes and workout from last week for how to do this. Capture video recording on your device and include in documentation. Tip: Refer to the guide on Mobile Screen Capture or look at How to record the screen on your iPhone, iPad, or iPod touch . Deliverable: Documentation in the form of a blog post of your creative process and experience. What were your goals and outcomes? Use screenshots, screen captures, renderings, gifs, Sketchfab viewers (for sharing 3D content), Github repos, and video. Include links to any tutorials, videos, and learning resources used. Be prepared to give a short presentation of your project next class. Share a link to your post with user group @imd in Slack channel #cmstudio . Due: Mar 9","title":"Project #2: Build a Unity Based Mobile App"},{"location":"APRD-5007/#week-9-ui-and-ux-of-xr","text":"Mar 9 Discussion Project 2 Share Questions - Unity, Scripting, Visual Studio, Docs, C# Language, etc XR Design Theory VR Interface Design Manifesto (2014) by Mike Alger VR Interface Design Pre-Visualisation Methods by Mike Alger - A great research based video covering several topics relevant to designing VR interfaces. Highly recommend. Be sure to look at video description for a list of references and cooresponding writeup document. XR Design Theory and Practice for Digital Eyewear by Mike Alger / Video References MCE 2018: How we design for VR | Mike Alger - This is a great talk from 2018. He breaks down the emerging skills, roles, and applications of XR. XR Design: Imagination, Immersion, and Presence VR Design Sprint - Example (case study) of a design spring process. Interesting read and something to think more about as you begin to prototype. VR And AR Mark The Greatest Revolution In The History Of UX/UI Design - Good discussion about aspects of VR/AR relating to UX and UI design. The UX of VR - A curated list of resources to help you on your journey into the User Experience of Virtual Reality. Creative tools and workflows for immersive content creation (pdf) - An industry report by ImmerseUK.org featuring case studies, workflows, and more. Designing for Mobile AR This is a great series of articles by Bushra Mahmood from Unity. A Quick Guide to Designing for Augmented Reality on Mobile (Part 1) - Intro to this series of articles and the most common problem for designers new to AR (which is mostly everyone still). A Quick Guide to Designing for Augmented Reality on Mobile (Part 2) - A collection of some basic interface patterns and behaviors that have started to emerge and worth considering when designing an AR experience. A Quick Guide to Designing for Augmented Reality on Mobile (Part 3) - \u200b\u200bAR is driven by behavior and interaction. This article will dive into different types of experiences, as well as common design patterns and styles found in current AR apps. A Quick Guide to Designing for Augmented Reality on Mobile (Part 4) - A quick primer on designing for 3D in AR. Context-First Design for Augmented Reality A designer's guide to hardware and software for mobile AR Future UI / Interface Design HUDS + GUIS - A great website to look deeper into the workflows of VFX industry experts and motion designers responsible for crafting the UI and UX we see in movies, games, and real world applications. Robbie Tilton Design Guidelines I'm sure there are more of these design guidelines being created by other large compenies. These are just a few cases where the company is putting design guidelines out there next to existing standards to make the knowledge accessible. Keep your eye out for others and share as you find them. Apple's AR Design Guidelines - Part of the Human Interface Guidelines IBM AR/VR Design Guidelines UX Patterns ???+ note \"Looking Outwards [5]: UI and UX for XR\" Identify 2-3 particular ideas or aspects from the articles, videos, websites above that relate to the topic of UI design for XR or UX design for XR and discuss them further. This is meant to be more of a research based exploration post. * Identify the basic concepts being discussed and how you understand them. How do the ideas inform your understanding of UI design and/orUX design? * Where do you see the ideas being deployed in the world right now? Where might these ideas be implemented in the future? For what purpose? * How can UI design and/or UX design evolve to integrate new workflows? * What can designers do today to make it easier for designers of tomorrow to create for XR? * What problems do you see with present design workflows for XR or do you see on the horizon? Share a link to your post with user group **@imd** in Slack channel **#cmstudio**. **_Due: Mar 16_** ???+ example \"Workout [5]: Blog Posts\" Your task this week is to make sure you are caught up on all posts for \"looking outwards\" posts (5) and projects (2). Share a link to your post with user group **@imd** in Slack channel **#cmstudio**.","title":"Week 9: UI and UX of XR"},{"location":"APRD-5007/#week-10-going-virtual","text":"Mar 16 We will use the following Zoom meeting to have class each week. You can learn more about Zoom from OIT at https://oit.colorado.edu/services/conferencing-services/web-conferencing-zoom . Zoom Meeting: https://cuboulder.zoom.us/j/6140595823 Discussion Virtual class for rest of semester. What does this look like? Opportunities for us in VR or AR Tools that support new ways to work virtually / remotely / collaboratively Tools that enable capture, transmission, and representation Collaboration hubs framevr.io miro - It's like an infinite whiteboard moot - Slack extension for VR rooms discord Reality Capture display.land Representation sketchfab - VR and AR modes","title":"Week 10: Going Virtual"},{"location":"APRD-5007/#final-project-proposal","text":"Final Project Proposal Meet with each project group via Zoom Meeting to discuss proposals. Sign up for a meeting time here Due: Mar 30","title":"Final Project Proposal"},{"location":"APRD-5007/#spring-break","text":"Mar 23 Spring Break, No Class","title":"Spring Break"},{"location":"APRD-5007/#week-11-review-final-project-proposals","text":"Mar 30 Meet with each project group via Zoom Meeting to discuss proposals. Sign up for a meeting time here","title":"Week 11: Review Final Project Proposals"},{"location":"APRD-5007/#week-12-final-projects","text":"Apr 6 Meet via Zoom Meeting for virtual studio","title":"Week 12: Final Projects"},{"location":"APRD-5007/#week-13-final-projects","text":"Apr 13 Meet via Zoom Meeting for virtual studio","title":"Week 13: Final Projects"},{"location":"APRD-5007/#week-14-final-projects","text":"Apr 20 FCQ's Meet via Zoom Meeting for virtual studio","title":"Week 14: Final Projects"},{"location":"APRD-5007/#week-15-final-projects","text":"Apr 27 Prepare for \"Virtual\" Spring Show Apr 30th - Last day of Spring classes. May 4th - Final Project Documentation Due","title":"Week 15: Final Projects"},{"location":"APRD-5007/#final-project-documentation","text":"AR Service Dog Simulation by Gia Almuaili Our Ocean by Caro Beresford-Wood AR Illustration by Yeon Choi Stuttering VR Exposure Therapy by Steven Douglas AR Race Game by Min Kim Addressing Depression: Empathy Through VR by Megan Kwiatkowski The Illusion of Life 2.0 by Nick Lunt Data Visualization and the Corona Conversation by Derek Palmer AR Book Map by Tess Stevens AQUA Brand Animation by Yangmin Zhang","title":"Final Project Documentation"},{"location":"APRD-5017/","text":"Critical Making 3: Parametric Product Design Explores algorithmic modeling strategies for product development. It is a studio-based course that explores the product development process through algorithmic modeling strategies, computational design, and additive manufacturing. In this course students will learn from the ground up how to utilize McNeel Rhinoceros with Grasshopper--a visual programming environment for algorithmic modeling, to design parametric systems and how to translate digital objects into physical form through 3D printing. Students will be introduced to the emerging field of parametric product design by developing projects that explore a multitude of form-finding strategies in surface patterning and complex geometric modeling of everyday objects spanning a variety of scales and applications. Familiar examples of product categories ripe for design experimentation include common objects such as pens and speakers, household items such as furniture and lighting, and personal items such as clothing, razors, and jewelry. In addition, students will develop an understanding of how to evaluate and optimize their designs based on product constraints, use cases, materiality, form, and function of physical objects produced through iterative cycles of production. Information Day and Time: Monday, 9:30 am - 12:30 pm CMCI Studio (1301 Walnut St) Instructor: RJ Duran Email: rj.duran@colorado.edu Slack: @rjduran on cmcistudio.slack.com Office hours by appointment. Feel free to reach out to me via slack or email. Slack: Channel #cmstudio and user group @ppd will be used for all course communication and notifications. Be sure to use the appropriate user group when necessary. Course Themes Rhino & Grasshopper Computational Design Digital Fabrication Laser Cutting 3D Printing CNC Milling Algorithmic Modeling Mass Customization Pattern Formation Mathematics & Geometry Scripting / Programming in C#, Python Rapid Prototyping Product Design Resources This website is the primary resource for all Critical Making Studio courses. Some of the resources used across the different courses are divided up into sections found on the left sidebar. Course specific resources will be found within this course schedule page, also found near the top of the left sidebar. CMCI Studio CMCI Studio facilities include the large main room (West Studio) and adjacent smaller room (North Studio). Both rooms contain different functionalities for developing projects at varying scales and for varying audiences. Read through the Studio Handbook for learning about each room and accessing the various tools and capabilities we have on site. Idea Forge The Idea Forge is an on-campus design and fabrication facility open to all students located in the Fleming Building (near the Wolf Law Building at Broadway & Baseline Rd). In this course we will be making use of the tools and resources available to build projects and develop skills. Learn more at https://www.colorado.edu/ideaforge/ . CU Boulder Campus Map Hours Workshop Schedule PPD Learning Resources This course will make use of various kinds of media such as books, websites, technical documentation, and video tutorials. While some resources will be listed under the week we encounter them, most of the primary learning resources can be found listed in the Learning Resources section of the PPD Setup Guide . Course Repo You will be able to find the Rhino and Grasshopper examples we talk about in class here. Course Repo: CM3-PPD Workload This is a 3 credit hour course. You should expect to dedicate at least 2-3 hours per credit hour. This translates into a 6-9 hours per week. Consider 6 hours a minimum expectation for one studio course and plan accordingly with your other studio courses. Deliverables for the course consist of \" Looking Outwards \" Reports, Workouts , Projects , and a Final Project . These are to be submitted weekly as blog posts on the due date specified each week. In general, assignment parameters will be based on the topics of the week and due the following week by the start of class time. Refer to the Deliverables section for more detail. The course is organized into weekly meetings consisting of instructor led project-driven topics organized as workshops and studio work sessions. It is expected that all students are active participants in each session. This course will require considerable effort outside of class time. Plan work sessions with others as much as possible and be sure to take care of your mind and body so as not to get too stressed or overexert yourself. If you should need assistance managing stress or otherwise, you can get in touch with CAPS . Deliverables This is an experimental project based course, largely driven by student research and interests. Each week will follow a similar format when it comes to finding balance between theory and practice. It's expected that each student has varying skills and interests upon entering the course and are excited to expand on them and apply them towards their areas of interest. The course deliverables consist of \" Looking Outwards \" Reports to discover the emerging boundaries of parametric product design and report on them, Workouts to develop skills in 2D/3D design with Rhino and Grasshopper, digital fabrication, and product design, Projects to put research findings into practice and exercise creative faculties, and a Final Project to develop a product design system and family of physical products. Each deliverable is expected to vary based on the area of interest and parameters defined. The following outlines the general criteria for course deliverables throughout the semester. Looking Outwards What is a \"Looking Outwards\" Report? It's basically a blog post containing your research, thoughts, and ideas on a particular topic of interest. This means you should be looking at a variety of information sources such as blogs, emerging tech news, research papers, design/art/tech focused websites, tutorials, etc. covering the topics listed under Course Themes and reporting on what you find each week. These kinds of reports are due almost every week as noted in the schedule and count towards 10% of your final grade. This approach is inspired by Prof. Golan Levin's Looking Outwards Reports for the course Interactivity & Computation at CMU School of Art. Why are we doing these? There are a few reasons: Reason 1: I literally can\u2019t keep up with the changes taking place in the various fields related to parametric design and I need your help. Many hands make light work. You are the pioneers of this class and are tasked with discovering content and creating documentation that adds to the field of Parametric Product Design. Reason 2: We need to build a body of documentation that connect several disparate fields. Conducting research across several fields will uncover new and interesting opportunities for us. Throughout the semester I will document our collective findings under Looking Outwards (found in the left sidebar under CM 3 PPD). Workouts What is a \"Workout\"? A workout is some kind of weekly exercise that aims to practice and build skills. What form do these take? They can take the form of reading technical documentation, writing code, solving a design challenge, trying out new software, and working through video tutorials that challenge and enable practice of concepts discussed in class. These are not graded but are highly recommended because they will provide greater understanding of a specific topic through focused hands-on practice. You may write blog posts for the workouts you do to help document your progress and process but it's not required. Projects What is a Project? A project aims to solve a problem or accomplish a goal using tools and skills. What form do these take? They are largely based on the topics explored in class, through the workouts, and through your research. They allow you to dig into and expand on a topic that interests you within the field of Parametric Product Design. They can be thought of as mini-projects to build towards developing your final project or one-off experiments exploring a particular technique or software workflow you are interested in. Projects are due every few weeks as noted on the schedule and count towards 40% of your final grade. Final Project Read more about writing a project proposal and final project deliverables here . Grading & Evaluation Grades for the course follow the standard A through F letter grading system and will be determined by the following breakdown. Type Percentage of Grade Looking Outwards 10 % Workouts Not graded Projects 40 % Final Project 50 % Work is evaluated based on the following: Done vs Not Done. Done gets credit, Not Done does not get credit. Quality and Quantity of deliverables. This studio based course requires a healthy level of creative immersion and balance to be successful. Explore your creative process through making and always deliver to the best of your abilities. Achieve quality through quantity. Engagement with the subject matter. If something isn't interesting to you, make it interesting. Clarity of documentation. Make it easy for others to read and understand. Collaboration will also be a factor of evaluation if you choose to work on projects in teams of no more than 3-4 people. The division of duties on any project needs to be clearly defined and documented by all team members and will factor into individual evaluations. Week 1: Overview Jan 17 (Friday) Overview of Course Course Deliverables PPD Setup Guide Parametric Design (Fall 2019) ???+ note \"Looking Outwards [0]: The Parametric Design Landscape\" Begin to investigate the field of parametric design and what designers working parametrically are doing. Much of the work out there falls into the domain of architecture because they are the primary users of parametric design software. But, what if we begin to focus in on products that modern digital fabrication techniques such as laser cutting, 3d printing, and cnc milling can produce? What new forms are possible with both access to powerful design software in combination with the ability to physically make? 1. Identify 2-3 areas ripe for parametric design experimentation. * What kinds of products can you imagine benefiting from parametric design? 2. Identify 2-3 creatives (designers, architects, etc) that are making interesting forms, objects, installations, or artifacts. * What are they making? * Try to identify specifically what is interesting to you about their work and workflow. What's inspiring about the work? * What kinds of tools are they using? Instagram Hashtags to Follow * [#grasshopper3d](https://www.instagram.com/explore/tags/grasshopper3d/) * [#computationaldesign](https://www.instagram.com/explore/tags/computationaldesign/) * [#parametricdesign](https://www.instagram.com/explore/tags/parametricdesign/) Share a link to your post with user group **@ppd** in Slack channel **#cmstudio**. **_Due: Jan 27_** ???+ example \"Workout [0]: Getting Started\" 1. This week you need to download and install the required software listed in the [PPD Setup Guide](/guides/ppd-setup-guide/). You can use Rhino for 90 days with no restrictions. I suggest purchasing a license after the trial period from the CU Bookstore for $90. 2. Start reading through some of the listed resources for learning Rhino and Grasshopper. There are many great tutorials and channels on YouTube that cover different aspects of the environment and ways of working. I think you will quickly find that the quality and content varies quite a bit so it's good to have some foundational skills under your belt before jumping into lots of video tutorials. If you are brand new to Rhino you will want to go through some basic Rhino tutorials to get familiar with the environment. Getting Started with Rhino & Grasshopper * [Learning Rhino for Mac](https://www.linkedin.com/learning/learning-rhino-5-for-mac/) * [The Grasshopper Primer](http://grasshopperprimer.com/en/index.html) * [Grasshopper Getting Started by David Rutten](https://vimeopro.com/rhino/grasshopper-getting-started-by-david-rutten) * [A beginner\u2019s guide to visual scripting with Grasshopper by Paul Jeffries](https://blog.ramboll.com/rcd/tutorials/a-beginners-guide-to-visual-scripting-with-grasshopper.html) Week 2: No Class Jan 20 MLK Day, No Class Week 3: Gh Basics / Patterns Jan 27 Looking Outwards [0] - What did you research? Workout [0] - What did you make? Course Repo: CM3-PPD - You will be able to find the Rhino and Grasshopper examples we talk about in class here. Grasshopper Basics User Interface Grasshopper Definitions Program Flow Points, Planes & Vectors Object Types Math Lists What is a List? Basic List Actions Display, Custom Preview of Geometry Data Trees Tutorials: Data Trees Masterclass with David Rutten - 6 part series Workflow Everything you need to know about Display and View Menus in Grasshopper Grasshopper \"Good Practice\" by TUDelft Bifocals - Great plugin that displays the name of a component. Documentation Documenting a Definition with Screenshots Rhino Screenshots - ScreenCaptureToFile Extending Grasshopper Special Folders for Components and User Objects To install components: Drop .gha files (or folders) into File > Special Folders > Components Folder To install user objects: Drop .ghuser files (or folders) into File > Special Folders > User Objects Folder Relaunch Rhino and Grasshopper to load the installed components or user objects. GrasshopperDeveloperSettings - A command to specify custom folders for components. Making Patterns ( cm-design ) 2D Grids Deformations Image Sampler Graph Mapper Attractors Tools / Plugins Paneling Tools - Included in Rhino 6. Requires additional step to install for Grasshopper. Follow instructions. Paneling Tools Forum Weaverbird Parakeet - This will work on macOS but gives warning when loading Grasshopper. Ignore the warning. Tools for working with meshes mesh+ - Place into User Objects folder. Cocoon Additional Learning Resources These blogs are great archives of various facets of parametric design in education and practice. Think of them as inspiration and maps leading to further research topics. Legacy Grasshopper Forum Current Grasshopper Forum designcoding.net WeWantToLearn.net Co-de-iT Generative Design Computing Digital Fabrication for Designers Fabricademy Wiki Dataisnature Parametric House: Research Archive Zha Code Edu Designmorphine CuminCAD - A database of research from various Architecture and Design organizations and conferences. ???+ note \"Looking Outwards [1]: Patterns in Product Design\" How can patterns be applied to product design? Identify some examples of products that make use of 2D and/or 3D patterns. Analyze the patterns used in attempt to deconstruct them and identify key characteristics. Sometimes you can start a design exploration from a pattern of interest. Is the pattern 2D, 3D, or a combination? Is it made of [tesselations](https://en.wikipedia.org/wiki/Tessellation) or [tilings](https://en.wikipedia.org/wiki/Euclidean_tilings_by_convex_regular_polygons)? Is there a kind of [symmetry](http://math.cmu.edu/~bkell/21110-2010s/symmetry-tilings.html)? Are the patterns more organic and natural in appearance? How are the patterns produced - by hand, machine, process or combination? Other References & Examples * [Tessellation](http://mathworld.wolfram.com/Tessellation.html) * [Fractals, Chaos, and Self-Similarity by Paul Bourke](http://paulbourke.net/fractals/) * [Tilings and Patterns by Branko Grunbaum & G.C. Shephard](https://www.amazon.com/Tilings-Patterns-Second-Dover-Mathematics/dp/0486469816) - Foundational book on the topic of patterns. * [Visualizing Mathematics with 3D Printing by Henry Segerman](http://www.3dprintmath.com/) - Many examples of using 3D printing to \"see\" and understand mathematical concepts physically. * [WOVNS](https://www.wovns.com/) - Patterns applied to textiles. Mass customization at scale. * [Structurica GH Script Library](https://structurica.com/) / [Instagram](https://www.instagram.com/structurica/) - A new parametric design definition library Share a link to your post with user group **@ppd** in Slack channel **#cmstudio**. **_Due: Feb 3_** ???+ example \"Workout [1]: Exploring Patterns\" Draw inspiration from products and/or patterns you find interesting and create a [Grasshopper definition](http://grasshopperprimer.com/en/1-foundations/1-2/0_anatomy-of-a-grasshopper-definition.html) that contains your design explorations. Below are some tools you can start looking into that may help you make patterns. If you are stuck, look into the references above and below for some guidance. The best way to get better at building parametric definitions is by making small design studies and iterating with a set of components. 1. [2D Patterns in Grasshopper](http://mkmra2.blogspot.com/2016/10/2d-patterns-in-grasshopper.html) - A great starting point for learning how to make 2D patterns with the built in components. No plugins needed for these examples. * This set of examples includes use of the Attractors, the Image Sampler component, the Graph Mapper component, and the Custom Display component to generate geometry and style with color. 2. [Paneling Tools in Rhino]([Paneling Tools](https://www.food4rhino.com/app/panelingtools-rhino-and-grasshopper)) * Tutorial: [Rhino Paneling Tools by Parametric House](https://www.youtube.com/watch?v=jEsn12tqtkY) * Course: [Level 1 Paneling Tools Course](https://vimeo.com/showcase/3163942) - 7 part series * Course: [Paneling Tools Webinar Course](https://vimeopro.com/rhino/panelingtools-webinar-course) - 13 part series 3. [Paneling Tools in Grasshopper]([Paneling Tools](https://www.food4rhino.com/app/panelingtools-rhino-and-grasshopper)) * Tutorial: [Paneling Tools Grasshopper by Parametric House](https://www.youtube.com/watch?v=DLn2lRk-e7U) 4. [Cocoon](http://www.bespokegeometry.com/2015/07/22/cocoon/) + [Weaverbird](http://www.giuliopiacentino.com/weaverbird/) * Tutorial: [Weaverbird Tutorial by Parametric House](https://www.youtube.com/watch?v=oA-dCF2FLEI) 5. [Parakeet](https://www.food4rhino.com/app/parakeet) * Tutorial: [Parakeet Basics](https://www.youtube.com/watch?v=paQ2nC57new) Week 4: Pattern Algorithms Feb 3 Looking Outwards [1]: Patterns in Product Design - What did you research? Workout [1]: Exploring Patterns - What did you make? Discussion / studio session ???+ note \"Looking Outwards [2]: Patterns with Purpose\" Expand this week on how patterns are used in products you admire. Look closer at the pattern systems used in these products and try to extract the layers of logic they contain. Why is the patterning used? Is it form, function, both? What is it's purpose? Build off your research from last week or identify a few new items to deconstruct for this week. The references below are for inspiration and encouragement of the work that goes into designing really anything. They are good reminders that design, parametric or not, it takes lots of experimentation, focus, and trial and error to develop your style and skills. This is why making lots of things on the regular is so important. Your idea typically doesn't come together on the first try. Make. * [Eames: The Architect & The Painter](https://www.youtube.com/watch?v=2H5BNk2Cyt8) - Must watch documentary about the powerful design duo, Charles and Ray Eames. * [Rams (Documentary)](https://www.hustwit.com/rams) - Rams is a documentary portrait of Dieter Rams, one of the most influential designers alive, and a rumination on consumerism, sustainability, and the future of design. Share a link to your post with user group **@ppd** in Slack channel **#cmstudio**. **_Due: Feb 10_** ???+ example \"Workout [2]: Exploring Patterns Cont.\" This week you can go any number of directions. * Make a definition that explores a patterning technique with purpose. * Identify some existing products that have patterns and attempt to deconstruct and recreate the logic. * Continue exploring the resources from last week to improve your skills with Grasshopper to making patterns. References * [LaN: 3D Tiles](https://www.pinterest.com/livearchitect/3d-tiles/), [LaN: Folded](https://www.pinterest.com/livearchitect/folded/), [LaN: CNC Mill Interiors](https://www.pinterest.com/livearchitect/cnc-mill-interiors/), [LaN: Triangulation](https://www.pinterest.com/livearchitect/triangulation/), [LaN: 3D Space Shape](https://www.pinterest.com/livearchitect/3d-space-shape/) - A set of design inspiration boards * [Generative Algorithms using Grasshopper by Zubin Khabazi (2012)](https://issuu.com/pabloherrera/docs/generative_algorithms_f07be9052a219d) - Thanks Clayton! * [http://handlebar3d.com/grasshopper](Handlebar 3D Basic Grasshopper Tutorials) by Raymundo Burgueno - A few tutorials and examples of patterns used in automotive design. You can find even more workflows in his [YouTube Channel](https://www.youtube.com/channel/UCcpImaI2uFJ7e_-6KBnVT_g/videos). * [Generative Landscapes](https://blog.claytonk.com/2020/02/11/moire-musings/) - This site has several 2d and 3d pattern algorithms to build from. Thanks Clayton! Week 5: Digifab Workflows: Laser Cutting / Vinyl Cutting Feb 10 Looking Outwards [2]: Patterns with Purpose - What did you research? Workout [2]: Exploring Patterns Cont. - What did you make? Minor change. \"Assignments\" are now referred to as \"Projects\". Grasshopper Review 2D Workflows Laser Cuting Laser Cut Panel Tutorial - Example of how to take a design from Rhino/Gh into Illustrator for laser cutting. Vinyl Cutting Roland Vinyl Cutter Project 1: Parametric System 1 Objectives Design a parametric system for generating 2D/3D patterns suitable for laser cutting or vinyl cutting. Fabricate instances your design using a laser cutter and/or vinyl cutter. Project Parameters Per class discussion, you have the option to produce a paneling system of some kind based on the following parameters. Size: 4x4 in to 12x12 in Material: Cardboard, Wood, Acrylic, Mat Board, Paper, Card Stock, Vinyl (No Laser. Vinly Cutter Only) Ideas: Light Screens, Panel System, Tiles, Window Coverings, Shutters, Artwork Places to get Materials Acrylic: Plasticare (Denver), CO Plastics (Louisville), Home Depot Cardboard: Home Depot, Office Max, Denver Boxes, Recycle Bin / Dumpster Paper: HR Meininger Art Supply (Denver), Art Supply Stores, Hobby Lobby Vinyl: Amazon - This or something of a different size depending on how much cutting and transfering you are doing. Transfer Tape Black Matte Vinyl Deliverables A Grasshopper definition for your parametric system. Documentation of the process from design to fabrication. Physical models / prototypes Be prepared to share your project in class next week. Due: Feb 17 Week 6: Digifab Workflows: Intro to CNC Milling Feb 17 Discussion Project 1 Share Into to Bantam Mill Overview Bantam Mill Materials Working with SVG Files Saving SVG from AI File > Save As, svg SVG Profiles: SVG 1.1 Type: Convert to outline SVG Files Use SVG Files to Effortlessly Mill Without Learning CAD and CAM Machining SVGs Using the Bantam Tools Software Save in SVG Format - Adobe information about export options. Getting Started Download BantamTools - This is the control software you use to run toolpaths. Operating the Mill Basic Safety 3D Workflows Speeds and Feeds Projects Engraving Dog Tags Cleanup Use the black/red shop vacuum and small nozzles to remove all debris after use. Remove tools used and place into storage tube. Put all tools / supplies back into the black cabinet when done. ???+ example \"Workout [3]: Review Bantam Tools Documentation\" This week I would like you to read through all the Getting Started resources above for the mill. Practice bringing SVG files into BantamTools to visualize what they will look like when cut from a piece of stock material. Week 7: Digifab Workflows: More CNC Milling Feb 24 Workshop We will continue where we left off last week and run some more small projects. Projects Light-Up PCB Badge CMCI Studio Dog Tag CMCI Studio PCB Card Pattern Engrave in Acrylic Need to look at acrylic speeds and feeds and setup custom tool. Ref: Plastics - Speeds & Feeds Chart ???+ note \"Looking Outwards [3]: CNC Milled Products\" Identify a 2-3 examples of products that make use of CNC milling in the process of creating the product. Look closely at the product and the specific production processes involved. Discuss the following in your post. * How is CNC milling used? * Would the product design be possible without CNC milling? * What makes the product unique? * What materials are used in the product? * If you were to replicate the design, what do you think the workflow looks like from design to prototype? * Is the product parametric in any way? If not, could it be and how? References * [The Edge Podcast](https://www.bantamtools.com/blogs/theedge) * [Neal Feay](https://www.nealfeay.com/) * [Siemen Cuypers](http://www.siemencuypers.com/) * [Open Desk](https://www.opendesk.cc/) * [Dom Riccobene](https://www.instagram.com/dom.riccobene/) * [LaN: CNC Mill Interiors](https://www.pinterest.com/livearchitect/cnc-mill-interiors/) Share a link to your post with user group **@ppd** in Slack channel **#cmstudio**. **_Due: Mar 2_** ???+ example \"Workout [4]: Mill It!\" This week I would like you to work in groups of 2 or 3 to practice engraving / cutting on a piece of PCB or acrylic using the Bantam Mill. There are a few other materials in our current stock so feel free to explore those options in the weeks ahead. Refer to the [Materials](https://www.bantamtools.com/all-materials) section of the Bantam Tools website for more info. * Before running any files, be sure to read through the [Basic Safety](https://support.bantamtools.com/hc/en-us/articles/115000723693-Basic-Safety-Overview) page. It's very important to be focused and attentive at all times when working with the mill. * Read through the [Engraving Dog Tags](https://support.bantamtools.com/hc/en-us/articles/360038821814-Engraving-Dog-Tags) and [Light-Up PCB Badge](https://support.bantamtools.com/hc/en-us/articles/360037787874-Light-Up-PCB-Badge) tutorials. Make sure you understand the workflow shown in each tutorial before running the machine. * Run one or both of the [CMCI Studio Dog Tag](https://github.com/rjduran/CM3-PPD/tree/master/week_07/CMCI_Studio_Dog_Tag) or [CMCI Studio PCB Card](https://github.com/rjduran/CM3-PPD/tree/master/week_07/CMCI_Studio_PCB_Card) example files. * Create your own pattern curves or artwork from Grasshopper, Rhino, and/or AI to engrave and or cut. Begin to document your workflow for this process. Week 8: Digifab Workflows: 3D Printing Mar 2 Discussion Looking Outwards [3]: CNC Milled Products - What did you find? Workout [4]: Mill It! - What did you make? When to mill it? When to 3d print it? 3D Printing Design for 3D Printing - A new guide I put together that contains resources for design, printing, materials, troubleshooting, and post-processing or 3D printed parts. Ultimaker (FDM) Cura Formlabs (SLA) Preform Shapeways Materials Edu Discount ???+ note \"Looking Outwards [4]: 3D Printed Products\" Identify a 2-3 examples of products that make use of 3D printing in the process of creating the product. Look closely at the product and the specific production processes involved. Discuss the following in your post. * How is 3D printing used? * Would the product design be possible without 3D printing? * What makes the product unique? * What materials are used in the product? * If you were to replicate the design, what do you think the workflow looks like from design to prototype? * Is the product parametric in any way? If not, could it be and how? References * [Fitchwork](https://www.instagram.com/fitchwork/) * [Nervous System](https://n-e-r-v-o-u-s.com/) * [Shapeways Creator Tools](https://www.shapeways.com/creator) * [Formlabs Blog](https://formlabs.com/blog/) - They feature lots of interesting projects and case studies. Share a link to your post with user group **@ppd** in Slack channel **#cmstudio**. **_Due: Mar 9_** ???+ example \"Workout [5]: Print It!\" This week I would like you to 3D print one or more instances of a parametric pattern using the Form 2 3D Printer at the Idea Forge. This could be an extension to your pattern definition developed for Project 1 or another system you may be experimenting with. We will talk about the printing process in class and what you need to consider to print at IF. There will be a small material cost associated with printing at IF. They charge **$0.30/ mL** and require an STL file or Preform ready file. References * [Key design considerations for 3D Printing](https://www.3dhubs.com/knowledge-base/key-design-considerations-3d-printing/) * [How to design parts for SLA 3D Printing](https://www.3dhubs.com/knowledge-base/how-design-parts-sla-3d-printing/) Week 9: Parametric Surfaces Mar 9 Discussion Looking Outwards [4]: 3D Printed Products - What did you find? Workout [5]: Print It! - What did you make? IF Printing Status Grasshopper Session Workshop on patterned surfaces that could be CNC milled or 3d printed. Project 2: Parametric System 2 Objectives Design a parametric system for generating 2D/3D patterns suitable for cnc milling or 3d printing. Fabricate instances your design using a a 3d printing process or cnc milling process. Deliverables A Grasshopper definition for your parametric system. Documentation of the process from design to fabrication. Physical models / prototypes Be prepared to share your project in class next week. Due: Mar 16 Week 10: Going Virtual Mar 16 We will use the following Zoom meeting to have class each week. You can learn more about Zoom from OIT at https://oit.colorado.edu/services/conferencing-services/web-conferencing-zoom . Zoom Meeting: https://cuboulder.zoom.us/j/6140595823 Discussion Virtual class for rest of semester. What does this look like? Project 2 Share Final Project Concepts Representation - VR/AR, Rendering, Visualization Final Project Proposal Final Project Proposal Meet with each project group via Zoom Meeting to discuss proposals. Sign up for a meeting time here Due: Mar 30 Spring Break Mar 23 Spring Break, No Class Week 11: Review Final Project Proposals Mar 30 Meet with each project group via Zoom Meeting to discuss proposals. Sign up for a meeting time here Week 12: Final Projects Apr 6 Meet via Zoom Meeting for virtual studio Week 13: Final Projects Apr 13 Meet via Zoom Meeting for virtual studio Week 14: Final Projects Apr 20 FCQ's Meet via Zoom Meeting for virtual studio Week 15: Final Projects Apr 27 Prepare for \"Virtual\" Spring Show Apr 30th - Last day of Spring classes. May 4th - Final Project Documentation Due Final Project Documentation Old Meets New: Applications of Creative Technology by Yvonne Danyluck Easy Breezy(ish) by Vanessa Frye Fountain of Hygene: Redesigning the Hand Sanitizing Experience by Mark Grundberg Parametric Design + Projection Mapping by Clayton Kenny Vertical Hex Storage by Dave Laskowski House Able by Aitana Rothfeld Audio Visualization by Josh Sheetz","title":"Critical Making 3: Parametric Product Design"},{"location":"APRD-5017/#critical-making-3-parametric-product-design","text":"Explores algorithmic modeling strategies for product development. It is a studio-based course that explores the product development process through algorithmic modeling strategies, computational design, and additive manufacturing. In this course students will learn from the ground up how to utilize McNeel Rhinoceros with Grasshopper--a visual programming environment for algorithmic modeling, to design parametric systems and how to translate digital objects into physical form through 3D printing. Students will be introduced to the emerging field of parametric product design by developing projects that explore a multitude of form-finding strategies in surface patterning and complex geometric modeling of everyday objects spanning a variety of scales and applications. Familiar examples of product categories ripe for design experimentation include common objects such as pens and speakers, household items such as furniture and lighting, and personal items such as clothing, razors, and jewelry. In addition, students will develop an understanding of how to evaluate and optimize their designs based on product constraints, use cases, materiality, form, and function of physical objects produced through iterative cycles of production.","title":"Critical Making 3: Parametric Product Design"},{"location":"APRD-5017/#information","text":"Day and Time: Monday, 9:30 am - 12:30 pm CMCI Studio (1301 Walnut St) Instructor: RJ Duran Email: rj.duran@colorado.edu Slack: @rjduran on cmcistudio.slack.com Office hours by appointment. Feel free to reach out to me via slack or email. Slack: Channel #cmstudio and user group @ppd will be used for all course communication and notifications. Be sure to use the appropriate user group when necessary.","title":"Information"},{"location":"APRD-5017/#course-themes","text":"Rhino & Grasshopper Computational Design Digital Fabrication Laser Cutting 3D Printing CNC Milling Algorithmic Modeling Mass Customization Pattern Formation Mathematics & Geometry Scripting / Programming in C#, Python Rapid Prototyping Product Design","title":"Course Themes"},{"location":"APRD-5017/#resources","text":"This website is the primary resource for all Critical Making Studio courses. Some of the resources used across the different courses are divided up into sections found on the left sidebar. Course specific resources will be found within this course schedule page, also found near the top of the left sidebar.","title":"Resources"},{"location":"APRD-5017/#cmci-studio","text":"CMCI Studio facilities include the large main room (West Studio) and adjacent smaller room (North Studio). Both rooms contain different functionalities for developing projects at varying scales and for varying audiences. Read through the Studio Handbook for learning about each room and accessing the various tools and capabilities we have on site.","title":"CMCI Studio"},{"location":"APRD-5017/#idea-forge","text":"The Idea Forge is an on-campus design and fabrication facility open to all students located in the Fleming Building (near the Wolf Law Building at Broadway & Baseline Rd). In this course we will be making use of the tools and resources available to build projects and develop skills. Learn more at https://www.colorado.edu/ideaforge/ . CU Boulder Campus Map Hours Workshop Schedule","title":"Idea Forge"},{"location":"APRD-5017/#ppd-learning-resources","text":"This course will make use of various kinds of media such as books, websites, technical documentation, and video tutorials. While some resources will be listed under the week we encounter them, most of the primary learning resources can be found listed in the Learning Resources section of the PPD Setup Guide .","title":"PPD Learning Resources"},{"location":"APRD-5017/#course-repo","text":"You will be able to find the Rhino and Grasshopper examples we talk about in class here. Course Repo: CM3-PPD","title":"Course Repo"},{"location":"APRD-5017/#workload","text":"This is a 3 credit hour course. You should expect to dedicate at least 2-3 hours per credit hour. This translates into a 6-9 hours per week. Consider 6 hours a minimum expectation for one studio course and plan accordingly with your other studio courses. Deliverables for the course consist of \" Looking Outwards \" Reports, Workouts , Projects , and a Final Project . These are to be submitted weekly as blog posts on the due date specified each week. In general, assignment parameters will be based on the topics of the week and due the following week by the start of class time. Refer to the Deliverables section for more detail. The course is organized into weekly meetings consisting of instructor led project-driven topics organized as workshops and studio work sessions. It is expected that all students are active participants in each session. This course will require considerable effort outside of class time. Plan work sessions with others as much as possible and be sure to take care of your mind and body so as not to get too stressed or overexert yourself. If you should need assistance managing stress or otherwise, you can get in touch with CAPS .","title":"Workload"},{"location":"APRD-5017/#deliverables","text":"This is an experimental project based course, largely driven by student research and interests. Each week will follow a similar format when it comes to finding balance between theory and practice. It's expected that each student has varying skills and interests upon entering the course and are excited to expand on them and apply them towards their areas of interest. The course deliverables consist of \" Looking Outwards \" Reports to discover the emerging boundaries of parametric product design and report on them, Workouts to develop skills in 2D/3D design with Rhino and Grasshopper, digital fabrication, and product design, Projects to put research findings into practice and exercise creative faculties, and a Final Project to develop a product design system and family of physical products. Each deliverable is expected to vary based on the area of interest and parameters defined. The following outlines the general criteria for course deliverables throughout the semester.","title":"Deliverables"},{"location":"APRD-5017/#looking-outwards","text":"What is a \"Looking Outwards\" Report? It's basically a blog post containing your research, thoughts, and ideas on a particular topic of interest. This means you should be looking at a variety of information sources such as blogs, emerging tech news, research papers, design/art/tech focused websites, tutorials, etc. covering the topics listed under Course Themes and reporting on what you find each week. These kinds of reports are due almost every week as noted in the schedule and count towards 10% of your final grade. This approach is inspired by Prof. Golan Levin's Looking Outwards Reports for the course Interactivity & Computation at CMU School of Art. Why are we doing these? There are a few reasons: Reason 1: I literally can\u2019t keep up with the changes taking place in the various fields related to parametric design and I need your help. Many hands make light work. You are the pioneers of this class and are tasked with discovering content and creating documentation that adds to the field of Parametric Product Design. Reason 2: We need to build a body of documentation that connect several disparate fields. Conducting research across several fields will uncover new and interesting opportunities for us. Throughout the semester I will document our collective findings under Looking Outwards (found in the left sidebar under CM 3 PPD).","title":"Looking Outwards"},{"location":"APRD-5017/#workouts","text":"What is a \"Workout\"? A workout is some kind of weekly exercise that aims to practice and build skills. What form do these take? They can take the form of reading technical documentation, writing code, solving a design challenge, trying out new software, and working through video tutorials that challenge and enable practice of concepts discussed in class. These are not graded but are highly recommended because they will provide greater understanding of a specific topic through focused hands-on practice. You may write blog posts for the workouts you do to help document your progress and process but it's not required.","title":"Workouts"},{"location":"APRD-5017/#projects","text":"What is a Project? A project aims to solve a problem or accomplish a goal using tools and skills. What form do these take? They are largely based on the topics explored in class, through the workouts, and through your research. They allow you to dig into and expand on a topic that interests you within the field of Parametric Product Design. They can be thought of as mini-projects to build towards developing your final project or one-off experiments exploring a particular technique or software workflow you are interested in. Projects are due every few weeks as noted on the schedule and count towards 40% of your final grade.","title":"Projects"},{"location":"APRD-5017/#final-project","text":"Read more about writing a project proposal and final project deliverables here .","title":"Final Project"},{"location":"APRD-5017/#grading-evaluation","text":"Grades for the course follow the standard A through F letter grading system and will be determined by the following breakdown. Type Percentage of Grade Looking Outwards 10 % Workouts Not graded Projects 40 % Final Project 50 % Work is evaluated based on the following: Done vs Not Done. Done gets credit, Not Done does not get credit. Quality and Quantity of deliverables. This studio based course requires a healthy level of creative immersion and balance to be successful. Explore your creative process through making and always deliver to the best of your abilities. Achieve quality through quantity. Engagement with the subject matter. If something isn't interesting to you, make it interesting. Clarity of documentation. Make it easy for others to read and understand. Collaboration will also be a factor of evaluation if you choose to work on projects in teams of no more than 3-4 people. The division of duties on any project needs to be clearly defined and documented by all team members and will factor into individual evaluations.","title":"Grading &amp; Evaluation"},{"location":"APRD-5017/#week-1-overview","text":"Jan 17 (Friday) Overview of Course Course Deliverables PPD Setup Guide Parametric Design (Fall 2019) ???+ note \"Looking Outwards [0]: The Parametric Design Landscape\" Begin to investigate the field of parametric design and what designers working parametrically are doing. Much of the work out there falls into the domain of architecture because they are the primary users of parametric design software. But, what if we begin to focus in on products that modern digital fabrication techniques such as laser cutting, 3d printing, and cnc milling can produce? What new forms are possible with both access to powerful design software in combination with the ability to physically make? 1. Identify 2-3 areas ripe for parametric design experimentation. * What kinds of products can you imagine benefiting from parametric design? 2. Identify 2-3 creatives (designers, architects, etc) that are making interesting forms, objects, installations, or artifacts. * What are they making? * Try to identify specifically what is interesting to you about their work and workflow. What's inspiring about the work? * What kinds of tools are they using? Instagram Hashtags to Follow * [#grasshopper3d](https://www.instagram.com/explore/tags/grasshopper3d/) * [#computationaldesign](https://www.instagram.com/explore/tags/computationaldesign/) * [#parametricdesign](https://www.instagram.com/explore/tags/parametricdesign/) Share a link to your post with user group **@ppd** in Slack channel **#cmstudio**. **_Due: Jan 27_** ???+ example \"Workout [0]: Getting Started\" 1. This week you need to download and install the required software listed in the [PPD Setup Guide](/guides/ppd-setup-guide/). You can use Rhino for 90 days with no restrictions. I suggest purchasing a license after the trial period from the CU Bookstore for $90. 2. Start reading through some of the listed resources for learning Rhino and Grasshopper. There are many great tutorials and channels on YouTube that cover different aspects of the environment and ways of working. I think you will quickly find that the quality and content varies quite a bit so it's good to have some foundational skills under your belt before jumping into lots of video tutorials. If you are brand new to Rhino you will want to go through some basic Rhino tutorials to get familiar with the environment. Getting Started with Rhino & Grasshopper * [Learning Rhino for Mac](https://www.linkedin.com/learning/learning-rhino-5-for-mac/) * [The Grasshopper Primer](http://grasshopperprimer.com/en/index.html) * [Grasshopper Getting Started by David Rutten](https://vimeopro.com/rhino/grasshopper-getting-started-by-david-rutten) * [A beginner\u2019s guide to visual scripting with Grasshopper by Paul Jeffries](https://blog.ramboll.com/rcd/tutorials/a-beginners-guide-to-visual-scripting-with-grasshopper.html)","title":"Week 1: Overview"},{"location":"APRD-5017/#week-2-no-class","text":"Jan 20 MLK Day, No Class","title":"Week 2: No Class"},{"location":"APRD-5017/#week-3-gh-basics-patterns","text":"Jan 27 Looking Outwards [0] - What did you research? Workout [0] - What did you make? Course Repo: CM3-PPD - You will be able to find the Rhino and Grasshopper examples we talk about in class here. Grasshopper Basics User Interface Grasshopper Definitions Program Flow Points, Planes & Vectors Object Types Math Lists What is a List? Basic List Actions Display, Custom Preview of Geometry Data Trees Tutorials: Data Trees Masterclass with David Rutten - 6 part series Workflow Everything you need to know about Display and View Menus in Grasshopper Grasshopper \"Good Practice\" by TUDelft Bifocals - Great plugin that displays the name of a component. Documentation Documenting a Definition with Screenshots Rhino Screenshots - ScreenCaptureToFile Extending Grasshopper Special Folders for Components and User Objects To install components: Drop .gha files (or folders) into File > Special Folders > Components Folder To install user objects: Drop .ghuser files (or folders) into File > Special Folders > User Objects Folder Relaunch Rhino and Grasshopper to load the installed components or user objects. GrasshopperDeveloperSettings - A command to specify custom folders for components. Making Patterns ( cm-design ) 2D Grids Deformations Image Sampler Graph Mapper Attractors Tools / Plugins Paneling Tools - Included in Rhino 6. Requires additional step to install for Grasshopper. Follow instructions. Paneling Tools Forum Weaverbird Parakeet - This will work on macOS but gives warning when loading Grasshopper. Ignore the warning. Tools for working with meshes mesh+ - Place into User Objects folder. Cocoon Additional Learning Resources These blogs are great archives of various facets of parametric design in education and practice. Think of them as inspiration and maps leading to further research topics. Legacy Grasshopper Forum Current Grasshopper Forum designcoding.net WeWantToLearn.net Co-de-iT Generative Design Computing Digital Fabrication for Designers Fabricademy Wiki Dataisnature Parametric House: Research Archive Zha Code Edu Designmorphine CuminCAD - A database of research from various Architecture and Design organizations and conferences. ???+ note \"Looking Outwards [1]: Patterns in Product Design\" How can patterns be applied to product design? Identify some examples of products that make use of 2D and/or 3D patterns. Analyze the patterns used in attempt to deconstruct them and identify key characteristics. Sometimes you can start a design exploration from a pattern of interest. Is the pattern 2D, 3D, or a combination? Is it made of [tesselations](https://en.wikipedia.org/wiki/Tessellation) or [tilings](https://en.wikipedia.org/wiki/Euclidean_tilings_by_convex_regular_polygons)? Is there a kind of [symmetry](http://math.cmu.edu/~bkell/21110-2010s/symmetry-tilings.html)? Are the patterns more organic and natural in appearance? How are the patterns produced - by hand, machine, process or combination? Other References & Examples * [Tessellation](http://mathworld.wolfram.com/Tessellation.html) * [Fractals, Chaos, and Self-Similarity by Paul Bourke](http://paulbourke.net/fractals/) * [Tilings and Patterns by Branko Grunbaum & G.C. Shephard](https://www.amazon.com/Tilings-Patterns-Second-Dover-Mathematics/dp/0486469816) - Foundational book on the topic of patterns. * [Visualizing Mathematics with 3D Printing by Henry Segerman](http://www.3dprintmath.com/) - Many examples of using 3D printing to \"see\" and understand mathematical concepts physically. * [WOVNS](https://www.wovns.com/) - Patterns applied to textiles. Mass customization at scale. * [Structurica GH Script Library](https://structurica.com/) / [Instagram](https://www.instagram.com/structurica/) - A new parametric design definition library Share a link to your post with user group **@ppd** in Slack channel **#cmstudio**. **_Due: Feb 3_** ???+ example \"Workout [1]: Exploring Patterns\" Draw inspiration from products and/or patterns you find interesting and create a [Grasshopper definition](http://grasshopperprimer.com/en/1-foundations/1-2/0_anatomy-of-a-grasshopper-definition.html) that contains your design explorations. Below are some tools you can start looking into that may help you make patterns. If you are stuck, look into the references above and below for some guidance. The best way to get better at building parametric definitions is by making small design studies and iterating with a set of components. 1. [2D Patterns in Grasshopper](http://mkmra2.blogspot.com/2016/10/2d-patterns-in-grasshopper.html) - A great starting point for learning how to make 2D patterns with the built in components. No plugins needed for these examples. * This set of examples includes use of the Attractors, the Image Sampler component, the Graph Mapper component, and the Custom Display component to generate geometry and style with color. 2. [Paneling Tools in Rhino]([Paneling Tools](https://www.food4rhino.com/app/panelingtools-rhino-and-grasshopper)) * Tutorial: [Rhino Paneling Tools by Parametric House](https://www.youtube.com/watch?v=jEsn12tqtkY) * Course: [Level 1 Paneling Tools Course](https://vimeo.com/showcase/3163942) - 7 part series * Course: [Paneling Tools Webinar Course](https://vimeopro.com/rhino/panelingtools-webinar-course) - 13 part series 3. [Paneling Tools in Grasshopper]([Paneling Tools](https://www.food4rhino.com/app/panelingtools-rhino-and-grasshopper)) * Tutorial: [Paneling Tools Grasshopper by Parametric House](https://www.youtube.com/watch?v=DLn2lRk-e7U) 4. [Cocoon](http://www.bespokegeometry.com/2015/07/22/cocoon/) + [Weaverbird](http://www.giuliopiacentino.com/weaverbird/) * Tutorial: [Weaverbird Tutorial by Parametric House](https://www.youtube.com/watch?v=oA-dCF2FLEI) 5. [Parakeet](https://www.food4rhino.com/app/parakeet) * Tutorial: [Parakeet Basics](https://www.youtube.com/watch?v=paQ2nC57new)","title":"Week 3: Gh Basics / Patterns"},{"location":"APRD-5017/#week-4-pattern-algorithms","text":"Feb 3 Looking Outwards [1]: Patterns in Product Design - What did you research? Workout [1]: Exploring Patterns - What did you make? Discussion / studio session ???+ note \"Looking Outwards [2]: Patterns with Purpose\" Expand this week on how patterns are used in products you admire. Look closer at the pattern systems used in these products and try to extract the layers of logic they contain. Why is the patterning used? Is it form, function, both? What is it's purpose? Build off your research from last week or identify a few new items to deconstruct for this week. The references below are for inspiration and encouragement of the work that goes into designing really anything. They are good reminders that design, parametric or not, it takes lots of experimentation, focus, and trial and error to develop your style and skills. This is why making lots of things on the regular is so important. Your idea typically doesn't come together on the first try. Make. * [Eames: The Architect & The Painter](https://www.youtube.com/watch?v=2H5BNk2Cyt8) - Must watch documentary about the powerful design duo, Charles and Ray Eames. * [Rams (Documentary)](https://www.hustwit.com/rams) - Rams is a documentary portrait of Dieter Rams, one of the most influential designers alive, and a rumination on consumerism, sustainability, and the future of design. Share a link to your post with user group **@ppd** in Slack channel **#cmstudio**. **_Due: Feb 10_** ???+ example \"Workout [2]: Exploring Patterns Cont.\" This week you can go any number of directions. * Make a definition that explores a patterning technique with purpose. * Identify some existing products that have patterns and attempt to deconstruct and recreate the logic. * Continue exploring the resources from last week to improve your skills with Grasshopper to making patterns. References * [LaN: 3D Tiles](https://www.pinterest.com/livearchitect/3d-tiles/), [LaN: Folded](https://www.pinterest.com/livearchitect/folded/), [LaN: CNC Mill Interiors](https://www.pinterest.com/livearchitect/cnc-mill-interiors/), [LaN: Triangulation](https://www.pinterest.com/livearchitect/triangulation/), [LaN: 3D Space Shape](https://www.pinterest.com/livearchitect/3d-space-shape/) - A set of design inspiration boards * [Generative Algorithms using Grasshopper by Zubin Khabazi (2012)](https://issuu.com/pabloherrera/docs/generative_algorithms_f07be9052a219d) - Thanks Clayton! * [http://handlebar3d.com/grasshopper](Handlebar 3D Basic Grasshopper Tutorials) by Raymundo Burgueno - A few tutorials and examples of patterns used in automotive design. You can find even more workflows in his [YouTube Channel](https://www.youtube.com/channel/UCcpImaI2uFJ7e_-6KBnVT_g/videos). * [Generative Landscapes](https://blog.claytonk.com/2020/02/11/moire-musings/) - This site has several 2d and 3d pattern algorithms to build from. Thanks Clayton!","title":"Week 4: Pattern Algorithms"},{"location":"APRD-5017/#week-5-digifab-workflows-laser-cutting-vinyl-cutting","text":"Feb 10 Looking Outwards [2]: Patterns with Purpose - What did you research? Workout [2]: Exploring Patterns Cont. - What did you make? Minor change. \"Assignments\" are now referred to as \"Projects\". Grasshopper Review 2D Workflows Laser Cuting Laser Cut Panel Tutorial - Example of how to take a design from Rhino/Gh into Illustrator for laser cutting. Vinyl Cutting Roland Vinyl Cutter","title":"Week 5: Digifab Workflows: Laser Cutting / Vinyl Cutting"},{"location":"APRD-5017/#project-1-parametric-system-1","text":"Objectives Design a parametric system for generating 2D/3D patterns suitable for laser cutting or vinyl cutting. Fabricate instances your design using a laser cutter and/or vinyl cutter. Project Parameters Per class discussion, you have the option to produce a paneling system of some kind based on the following parameters. Size: 4x4 in to 12x12 in Material: Cardboard, Wood, Acrylic, Mat Board, Paper, Card Stock, Vinyl (No Laser. Vinly Cutter Only) Ideas: Light Screens, Panel System, Tiles, Window Coverings, Shutters, Artwork Places to get Materials Acrylic: Plasticare (Denver), CO Plastics (Louisville), Home Depot Cardboard: Home Depot, Office Max, Denver Boxes, Recycle Bin / Dumpster Paper: HR Meininger Art Supply (Denver), Art Supply Stores, Hobby Lobby Vinyl: Amazon - This or something of a different size depending on how much cutting and transfering you are doing. Transfer Tape Black Matte Vinyl Deliverables A Grasshopper definition for your parametric system. Documentation of the process from design to fabrication. Physical models / prototypes Be prepared to share your project in class next week. Due: Feb 17","title":"Project 1: Parametric System 1"},{"location":"APRD-5017/#week-6-digifab-workflows-intro-to-cnc-milling","text":"Feb 17 Discussion Project 1 Share Into to Bantam Mill Overview Bantam Mill Materials Working with SVG Files Saving SVG from AI File > Save As, svg SVG Profiles: SVG 1.1 Type: Convert to outline SVG Files Use SVG Files to Effortlessly Mill Without Learning CAD and CAM Machining SVGs Using the Bantam Tools Software Save in SVG Format - Adobe information about export options. Getting Started Download BantamTools - This is the control software you use to run toolpaths. Operating the Mill Basic Safety 3D Workflows Speeds and Feeds Projects Engraving Dog Tags Cleanup Use the black/red shop vacuum and small nozzles to remove all debris after use. Remove tools used and place into storage tube. Put all tools / supplies back into the black cabinet when done. ???+ example \"Workout [3]: Review Bantam Tools Documentation\" This week I would like you to read through all the Getting Started resources above for the mill. Practice bringing SVG files into BantamTools to visualize what they will look like when cut from a piece of stock material.","title":"Week 6: Digifab Workflows: Intro to CNC Milling"},{"location":"APRD-5017/#week-7-digifab-workflows-more-cnc-milling","text":"Feb 24 Workshop We will continue where we left off last week and run some more small projects. Projects Light-Up PCB Badge CMCI Studio Dog Tag CMCI Studio PCB Card Pattern Engrave in Acrylic Need to look at acrylic speeds and feeds and setup custom tool. Ref: Plastics - Speeds & Feeds Chart ???+ note \"Looking Outwards [3]: CNC Milled Products\" Identify a 2-3 examples of products that make use of CNC milling in the process of creating the product. Look closely at the product and the specific production processes involved. Discuss the following in your post. * How is CNC milling used? * Would the product design be possible without CNC milling? * What makes the product unique? * What materials are used in the product? * If you were to replicate the design, what do you think the workflow looks like from design to prototype? * Is the product parametric in any way? If not, could it be and how? References * [The Edge Podcast](https://www.bantamtools.com/blogs/theedge) * [Neal Feay](https://www.nealfeay.com/) * [Siemen Cuypers](http://www.siemencuypers.com/) * [Open Desk](https://www.opendesk.cc/) * [Dom Riccobene](https://www.instagram.com/dom.riccobene/) * [LaN: CNC Mill Interiors](https://www.pinterest.com/livearchitect/cnc-mill-interiors/) Share a link to your post with user group **@ppd** in Slack channel **#cmstudio**. **_Due: Mar 2_** ???+ example \"Workout [4]: Mill It!\" This week I would like you to work in groups of 2 or 3 to practice engraving / cutting on a piece of PCB or acrylic using the Bantam Mill. There are a few other materials in our current stock so feel free to explore those options in the weeks ahead. Refer to the [Materials](https://www.bantamtools.com/all-materials) section of the Bantam Tools website for more info. * Before running any files, be sure to read through the [Basic Safety](https://support.bantamtools.com/hc/en-us/articles/115000723693-Basic-Safety-Overview) page. It's very important to be focused and attentive at all times when working with the mill. * Read through the [Engraving Dog Tags](https://support.bantamtools.com/hc/en-us/articles/360038821814-Engraving-Dog-Tags) and [Light-Up PCB Badge](https://support.bantamtools.com/hc/en-us/articles/360037787874-Light-Up-PCB-Badge) tutorials. Make sure you understand the workflow shown in each tutorial before running the machine. * Run one or both of the [CMCI Studio Dog Tag](https://github.com/rjduran/CM3-PPD/tree/master/week_07/CMCI_Studio_Dog_Tag) or [CMCI Studio PCB Card](https://github.com/rjduran/CM3-PPD/tree/master/week_07/CMCI_Studio_PCB_Card) example files. * Create your own pattern curves or artwork from Grasshopper, Rhino, and/or AI to engrave and or cut. Begin to document your workflow for this process.","title":"Week 7: Digifab Workflows: More CNC Milling"},{"location":"APRD-5017/#week-8-digifab-workflows-3d-printing","text":"Mar 2 Discussion Looking Outwards [3]: CNC Milled Products - What did you find? Workout [4]: Mill It! - What did you make? When to mill it? When to 3d print it? 3D Printing Design for 3D Printing - A new guide I put together that contains resources for design, printing, materials, troubleshooting, and post-processing or 3D printed parts. Ultimaker (FDM) Cura Formlabs (SLA) Preform Shapeways Materials Edu Discount ???+ note \"Looking Outwards [4]: 3D Printed Products\" Identify a 2-3 examples of products that make use of 3D printing in the process of creating the product. Look closely at the product and the specific production processes involved. Discuss the following in your post. * How is 3D printing used? * Would the product design be possible without 3D printing? * What makes the product unique? * What materials are used in the product? * If you were to replicate the design, what do you think the workflow looks like from design to prototype? * Is the product parametric in any way? If not, could it be and how? References * [Fitchwork](https://www.instagram.com/fitchwork/) * [Nervous System](https://n-e-r-v-o-u-s.com/) * [Shapeways Creator Tools](https://www.shapeways.com/creator) * [Formlabs Blog](https://formlabs.com/blog/) - They feature lots of interesting projects and case studies. Share a link to your post with user group **@ppd** in Slack channel **#cmstudio**. **_Due: Mar 9_** ???+ example \"Workout [5]: Print It!\" This week I would like you to 3D print one or more instances of a parametric pattern using the Form 2 3D Printer at the Idea Forge. This could be an extension to your pattern definition developed for Project 1 or another system you may be experimenting with. We will talk about the printing process in class and what you need to consider to print at IF. There will be a small material cost associated with printing at IF. They charge **$0.30/ mL** and require an STL file or Preform ready file. References * [Key design considerations for 3D Printing](https://www.3dhubs.com/knowledge-base/key-design-considerations-3d-printing/) * [How to design parts for SLA 3D Printing](https://www.3dhubs.com/knowledge-base/how-design-parts-sla-3d-printing/)","title":"Week 8: Digifab Workflows: 3D Printing"},{"location":"APRD-5017/#week-9-parametric-surfaces","text":"Mar 9 Discussion Looking Outwards [4]: 3D Printed Products - What did you find? Workout [5]: Print It! - What did you make? IF Printing Status Grasshopper Session Workshop on patterned surfaces that could be CNC milled or 3d printed.","title":"Week 9: Parametric Surfaces"},{"location":"APRD-5017/#project-2-parametric-system-2","text":"Objectives Design a parametric system for generating 2D/3D patterns suitable for cnc milling or 3d printing. Fabricate instances your design using a a 3d printing process or cnc milling process. Deliverables A Grasshopper definition for your parametric system. Documentation of the process from design to fabrication. Physical models / prototypes Be prepared to share your project in class next week. Due: Mar 16","title":"Project 2: Parametric System 2"},{"location":"APRD-5017/#week-10-going-virtual","text":"Mar 16 We will use the following Zoom meeting to have class each week. You can learn more about Zoom from OIT at https://oit.colorado.edu/services/conferencing-services/web-conferencing-zoom . Zoom Meeting: https://cuboulder.zoom.us/j/6140595823 Discussion Virtual class for rest of semester. What does this look like? Project 2 Share Final Project Concepts Representation - VR/AR, Rendering, Visualization","title":"Week 10: Going Virtual"},{"location":"APRD-5017/#final-project-proposal","text":"Final Project Proposal Meet with each project group via Zoom Meeting to discuss proposals. Sign up for a meeting time here Due: Mar 30","title":"Final Project Proposal"},{"location":"APRD-5017/#spring-break","text":"Mar 23 Spring Break, No Class","title":"Spring Break"},{"location":"APRD-5017/#week-11-review-final-project-proposals","text":"Mar 30 Meet with each project group via Zoom Meeting to discuss proposals. Sign up for a meeting time here","title":"Week 11: Review Final Project Proposals"},{"location":"APRD-5017/#week-12-final-projects","text":"Apr 6 Meet via Zoom Meeting for virtual studio","title":"Week 12: Final Projects"},{"location":"APRD-5017/#week-13-final-projects","text":"Apr 13 Meet via Zoom Meeting for virtual studio","title":"Week 13: Final Projects"},{"location":"APRD-5017/#week-14-final-projects","text":"Apr 20 FCQ's Meet via Zoom Meeting for virtual studio","title":"Week 14: Final Projects"},{"location":"APRD-5017/#week-15-final-projects","text":"Apr 27 Prepare for \"Virtual\" Spring Show Apr 30th - Last day of Spring classes. May 4th - Final Project Documentation Due","title":"Week 15: Final Projects"},{"location":"APRD-5017/#final-project-documentation","text":"Old Meets New: Applications of Creative Technology by Yvonne Danyluck Easy Breezy(ish) by Vanessa Frye Fountain of Hygene: Redesigning the Hand Sanitizing Experience by Mark Grundberg Parametric Design + Projection Mapping by Clayton Kenny Vertical Hex Storage by Dave Laskowski House Able by Aitana Rothfeld Audio Visualization by Josh Sheetz","title":"Final Project Documentation"},{"location":"APRD-5019/","text":"CM4","title":"CM4"},{"location":"APRD-5019/#cm4","text":"","title":"CM4"},{"location":"books/","text":"Local Libraries CU Boulder Library Catalog (Chinook) Boulder Public Library Technical Publishers Awesome Book Authoring Packt Publishing , Free Tech Ebook of the Day O'Reilly Safari Apress The Pragmatic Bookshelf Critical Making The Art of Critical Making: Rhode Island School of Design on Creative Practice Code, Electronics, Computers Code: The Hidden Language of Computer Hardware and Software Encyclopedia of Electronic Components Volume 1: Resistors, Capacitors, Inductors, Switches, Encoders, Relays, Transistors Encyclopedia of Electronic Components Volume 2: LEDs, LCDs, Audio, Thyristors, Digital Logic, and Amplification Encyclopedia of Electronic Components Volume 3: Sensors for Location, Presence, Proximity, Orientation, Oscillation, Force, Load, Human Input, Liquid ... Light, Heat, Sound, and Electricity Creative Coding Processing: A Programming Handbook for Visual Designers and Artists Generative Design: Visualize, Program, and Create with Processing - ( Website , Code ) The Nature of Code: Simulating Natural Systems with Processing - ( Free Version ) The Computational Beauty of Nature: Computer Explorations of Fractals, Chaos, Complex Systems, and Adaptation Physical Computing Making Things Talk: Using Sensors, Networks, and Arduino to See, Hear, and Feel Your World Physical Computing: Sensing and Controlling the Physical World with Computers Learn Electronics with Arduino: An Illustrated Beginner's Guide to Physical Computing (Make: Technology on Your Time) Programming Interactivity: A Designer's Guide to Processing, Arduino, and openFrameworks Getting Started with Arduino: The Open Source Electronics Prototyping Platform Make: Wearable Electronics: Design, prototype, and wear your own interactive garments Interactive Design Art of Interactive Design: A Euphonious and Illuminating Guide to Building Successful Software Industrial Design The Industrial Design Reference & Specification Book: Everything Industrial Designers Need to Know The Design of Everyday Things: Revised and Expanded Edition Making It: Manufacturing Techniques for Product Design Stuff Matters: Exploring the Marvelous Materials That Shape Our Man-Made World The Industrial Design Reader Graphic Design Graphic Design: The New Basics: Second Edition, Revised and Expanded 3D Printing Printing Things: Visions and Essentials for 3D Printing Visualizing Mathematics with 3D Printing The 3D Printing Handbook: Technologies, design and applications Materials Stuff Matters: Exploring the Marvelous Materials That Shape Our Man-Made World Materials for Design Materials and Design, Third Edition: The Art and Science of Material Selection in Product Design Transmaterial: A Catalog of Materials That Redefine our Physical Environment Manufacturing Manufacturing Processes for Design Professionals Fundamentals of Modern Manufacturing: Materials, Processes, and Systems Media Arts The New Media Reader Form+Code in Design, Art, and Architecture","title":"Books"},{"location":"books/#local-libraries","text":"CU Boulder Library Catalog (Chinook) Boulder Public Library","title":"Local Libraries"},{"location":"books/#technical-publishers","text":"Awesome Book Authoring Packt Publishing , Free Tech Ebook of the Day O'Reilly Safari Apress The Pragmatic Bookshelf","title":"Technical Publishers"},{"location":"books/#critical-making","text":"The Art of Critical Making: Rhode Island School of Design on Creative Practice","title":"Critical Making"},{"location":"books/#code-electronics-computers","text":"Code: The Hidden Language of Computer Hardware and Software Encyclopedia of Electronic Components Volume 1: Resistors, Capacitors, Inductors, Switches, Encoders, Relays, Transistors Encyclopedia of Electronic Components Volume 2: LEDs, LCDs, Audio, Thyristors, Digital Logic, and Amplification Encyclopedia of Electronic Components Volume 3: Sensors for Location, Presence, Proximity, Orientation, Oscillation, Force, Load, Human Input, Liquid ... Light, Heat, Sound, and Electricity","title":"Code, Electronics, Computers"},{"location":"books/#creative-coding","text":"Processing: A Programming Handbook for Visual Designers and Artists Generative Design: Visualize, Program, and Create with Processing - ( Website , Code ) The Nature of Code: Simulating Natural Systems with Processing - ( Free Version ) The Computational Beauty of Nature: Computer Explorations of Fractals, Chaos, Complex Systems, and Adaptation","title":"Creative Coding"},{"location":"books/#physical-computing","text":"Making Things Talk: Using Sensors, Networks, and Arduino to See, Hear, and Feel Your World Physical Computing: Sensing and Controlling the Physical World with Computers Learn Electronics with Arduino: An Illustrated Beginner's Guide to Physical Computing (Make: Technology on Your Time) Programming Interactivity: A Designer's Guide to Processing, Arduino, and openFrameworks Getting Started with Arduino: The Open Source Electronics Prototyping Platform Make: Wearable Electronics: Design, prototype, and wear your own interactive garments","title":"Physical Computing"},{"location":"books/#interactive-design","text":"Art of Interactive Design: A Euphonious and Illuminating Guide to Building Successful Software","title":"Interactive Design"},{"location":"books/#industrial-design","text":"The Industrial Design Reference & Specification Book: Everything Industrial Designers Need to Know The Design of Everyday Things: Revised and Expanded Edition Making It: Manufacturing Techniques for Product Design Stuff Matters: Exploring the Marvelous Materials That Shape Our Man-Made World The Industrial Design Reader","title":"Industrial Design"},{"location":"books/#graphic-design","text":"Graphic Design: The New Basics: Second Edition, Revised and Expanded","title":"Graphic Design"},{"location":"books/#3d-printing","text":"Printing Things: Visions and Essentials for 3D Printing Visualizing Mathematics with 3D Printing The 3D Printing Handbook: Technologies, design and applications","title":"3D Printing"},{"location":"books/#materials","text":"Stuff Matters: Exploring the Marvelous Materials That Shape Our Man-Made World Materials for Design Materials and Design, Third Edition: The Art and Science of Material Selection in Product Design Transmaterial: A Catalog of Materials That Redefine our Physical Environment","title":"Materials"},{"location":"books/#manufacturing","text":"Manufacturing Processes for Design Professionals Fundamentals of Modern Manufacturing: Materials, Processes, and Systems","title":"Manufacturing"},{"location":"books/#media-arts","text":"The New Media Reader Form+Code in Design, Art, and Architecture","title":"Media Arts"},{"location":"cc/","text":"IDEs and Applications Processing OpenFrameworks Cinder Max/MSP/Jitter vvvv Structure Synth OpenSCAD Context Free Touch Designer Pure Data Web Based WebGL , Does my browser support WebGL? , WebGL Report three.js , Learning Three.js D3.js p5.js , p5.js web editor , A free-to-use classrooms system for p5.js CreateJS ChartJS WebVR Paper.js Planck.js GLSL Sandboxes Shadertoy GLSL Sandbox glslb.in Basics The Book of Shaders , TBoS Editor Pixel Shaders Shadershop stackgl - Open Source Software Ecosystem for WebGL. Shader School - Based on stackgl. Start here. WebGL Workshop - Based on stackgl. The sequel to shader-school: Learn the WebGL API Physics / Motion Physics Simulations UX In Motion","title":"Creative Coding"},{"location":"cc/#ides-and-applications","text":"Processing OpenFrameworks Cinder Max/MSP/Jitter vvvv Structure Synth OpenSCAD Context Free Touch Designer Pure Data","title":"IDEs and Applications"},{"location":"cc/#web-based","text":"WebGL , Does my browser support WebGL? , WebGL Report three.js , Learning Three.js D3.js p5.js , p5.js web editor , A free-to-use classrooms system for p5.js CreateJS ChartJS WebVR Paper.js Planck.js","title":"Web Based"},{"location":"cc/#glsl","text":"","title":"GLSL"},{"location":"cc/#sandboxes","text":"Shadertoy GLSL Sandbox glslb.in","title":"Sandboxes"},{"location":"cc/#basics","text":"The Book of Shaders , TBoS Editor Pixel Shaders Shadershop stackgl - Open Source Software Ecosystem for WebGL. Shader School - Based on stackgl. Start here. WebGL Workshop - Based on stackgl. The sequel to shader-school: Learn the WebGL API","title":"Basics"},{"location":"cc/#physics-motion","text":"Physics Simulations UX In Motion","title":"Physics / Motion"},{"location":"creative-industries/","text":"Studios / Agencies / Collectives Project One Studio / Instagram Vvoxstudio / Volvoxlabs / Instagram Moment Factory (Lab) Softlab / Instagram Respons_ve / Instagram Field.io / Field.io Research: Journery into VR / Instagram Symmetry Labs / Instagram Squidsoup / Instagram United Visual Artists / Instagram DIA / Instagram Universal Everything Shows / Festivals Ars Electronica / Instagram","title":"Creative Industries"},{"location":"creative-industries/#studios-agencies-collectives","text":"Project One Studio / Instagram Vvoxstudio / Volvoxlabs / Instagram Moment Factory (Lab) Softlab / Instagram Respons_ve / Instagram Field.io / Field.io Research: Journery into VR / Instagram Symmetry Labs / Instagram Squidsoup / Instagram United Visual Artists / Instagram DIA / Instagram Universal Everything","title":"Studios / Agencies / Collectives"},{"location":"creative-industries/#shows-festivals","text":"Ars Electronica / Instagram","title":"Shows / Festivals"},{"location":"pm/","text":"Documents Google Docs Etherpad LibreOffice Microsoft Office Firepad Evernote Mac Journal Papier - Browser based note taking Chrome application / extension. Screen Capture Screencast-o-matic , Download Link - Screen capture software for sharing projects, making tutorials, and more. Screenflick How to take a screenshot on your Mac 7 ways to take screenshots in Windows 10 Data Storage Dropbox Box OwnCloud Microsoft OneDrive Google Drive Large File Transfer WeTransfer Drop Send Blogs / Wikis / Content Management Systems (CMS) Tumblr Wordpress , Wordpress.org MediaWiki Cargo Collective Squarespace Wix The Grid Drupal Joomla Statamic Visual Asset Management InVision Boards Pixave (MacOS App) Pintrest Niice FTP Cyberduck FileZilla Transmit WinSCP SmartFTP FireFTP Version Control Git , Github , GitLab , GitWeb , Gitolite Bitbucket Subversion RCS Mercurial Bazaar CVS Synchronization rsync unison Cloud Computing (Hosting) Amazon EC2 Google Compute Engine Digital Ocean Linode Heroku Bluehost Domains Namecheap - My go to for domain registration. Godaddy 1&1 Gandi park.io - Domain Name Auction Project Management Apps Trello GanttProject Taiga OpenProj TaskJuggler OmniPlan GitLab Pintrest Tumblr Slack , Slack Archive , Slackin Inviter Photo Sharing Instagram Flickr Google Photos Mind Mapping MindNode Pro iThoughtsX Mindcad Incubator Coggle XMind Vue Forums Discourse Vanilla Remote Desktop TightVNC x11vnc noVNC TigerVNC RealVNC Free JollysFastVNC UltraVNC VPN Detailed VPN Comparison Chart - Thanks Ty","title":"Project Management"},{"location":"pm/#documents","text":"Google Docs Etherpad LibreOffice Microsoft Office Firepad Evernote Mac Journal Papier - Browser based note taking Chrome application / extension.","title":"Documents"},{"location":"pm/#screen-capture","text":"Screencast-o-matic , Download Link - Screen capture software for sharing projects, making tutorials, and more. Screenflick How to take a screenshot on your Mac 7 ways to take screenshots in Windows 10","title":"Screen Capture"},{"location":"pm/#data-storage","text":"Dropbox Box OwnCloud Microsoft OneDrive Google Drive","title":"Data Storage"},{"location":"pm/#large-file-transfer","text":"WeTransfer Drop Send","title":"Large File Transfer"},{"location":"pm/#blogs-wikis-content-management-systems-cms","text":"Tumblr Wordpress , Wordpress.org MediaWiki Cargo Collective Squarespace Wix The Grid Drupal Joomla Statamic","title":"Blogs / Wikis / Content Management Systems (CMS)"},{"location":"pm/#visual-asset-management","text":"InVision Boards Pixave (MacOS App) Pintrest Niice","title":"Visual Asset Management"},{"location":"pm/#ftp","text":"Cyberduck FileZilla Transmit WinSCP SmartFTP FireFTP","title":"FTP"},{"location":"pm/#version-control","text":"Git , Github , GitLab , GitWeb , Gitolite Bitbucket Subversion RCS Mercurial Bazaar CVS","title":"Version Control"},{"location":"pm/#synchronization","text":"rsync unison","title":"Synchronization"},{"location":"pm/#cloud-computing-hosting","text":"Amazon EC2 Google Compute Engine Digital Ocean Linode Heroku Bluehost","title":"Cloud Computing (Hosting)"},{"location":"pm/#domains","text":"Namecheap - My go to for domain registration. Godaddy 1&1 Gandi park.io - Domain Name Auction","title":"Domains"},{"location":"pm/#project-management-apps","text":"Trello GanttProject Taiga OpenProj TaskJuggler OmniPlan GitLab Pintrest Tumblr Slack , Slack Archive , Slackin Inviter","title":"Project Management Apps"},{"location":"pm/#photo-sharing","text":"Instagram Flickr Google Photos","title":"Photo Sharing"},{"location":"pm/#mind-mapping","text":"MindNode Pro iThoughtsX Mindcad Incubator Coggle XMind Vue","title":"Mind Mapping"},{"location":"pm/#forums","text":"Discourse Vanilla","title":"Forums"},{"location":"pm/#remote-desktop","text":"TightVNC x11vnc noVNC TigerVNC RealVNC Free JollysFastVNC UltraVNC","title":"Remote Desktop"},{"location":"pm/#vpn","text":"Detailed VPN Comparison Chart - Thanks Ty","title":"VPN"},{"location":"repos/","text":"Code Repos Critical Making Sandbox The cm-sandbox repo is a starting point for web projects using HTML, CSS, and JS running on a localhost server. To use: Navigate to your project directory: cd /Users/username/code Clone repo: git clone https://github.com/rjduran/cm-sandbox.git my-project-name This will clone the cm-sandbox repo into a new project folder named my-project-name . Now you have a starting point for a new web project running with live-server . If you plan to make any commits to a repo on Github with this new project folder you will need to create a repo on Github with the same project name and assign the remote to your repo. Assign a new remote to your new project repo. Assuming I have a new project folder called my-project-name and a new repo on Github with the same name, follow the steps below and replace the remote URL with your new repo URL. cd my-project-name git remote -v You will see something like this returned: origin https://github.com/rjduran/cm-sandbox.git (fetch) origin https://github.com/rjduran/cm-sandbox.git (push) Copy the url to your new Github repo and use with the git remote command then push the changes to your repo. Check what the remote is set to by using the git remote command as above. It should be updated with your new project URL. Prior to pushing the changes you can make any edits to the files in the repo and add them and commit them. git remote set-url origin https://github.com/rjduran/my-project-name.git git remote -v git push -u origin master You can read more about changing remotes between HTTPS and SSH and vice versa here . How to Build a Sandbox Create a local development workspace (aka sandbox ) to prototype with HTML, CSS, and JS. By the end of this you should have something that looks like my cm-sandbox repo. What is the purpose of this? To become familiar with the file types, languages, and how they work together. At a fundamental level this approach to experimentation establishes good development practices and efficient workflows. It also supports hands-on learning, which is the only way to improve as a programmer. As a programmer you want to be in control of your code, tools, workflow, and system. ( Don't let the computer control you. ). Pro Tip: Setup a working directory for all programming projects (For Example, /Users/username/code ). This directory then becomes your goto location for anything having to do with code, programming, cloning repos from github, experimenting with new tools and software, and more. This is precisely how I organize my system. Download and install Node.js and live-server . Verify node and npm are installed via Terminal: node -v && npm -v . You should see two version numbers matching what you installed. Install live-server globally: npm install -g live-server If you have done all this correctly you should be able to type live-server in your terminal and start a server at the default address http://127.0.0.1:8080 from your current folder. Create a Github account and make a repository for your web project (as demonstrated in class). You can name the repo anything you want. For example, \"cm-sandbox\". Clone a copy of this repository to your machine via Terminal. git clone <repo-url> . Setup your machine to make use of a local development folder and local development server (See tip above and Step 1). Create 3 files in your web project repository folder (ie. the project \"folder\" or \"repo\" you created and then cloned from Github in step 3). index.html - ( quick boilerplate template , copy and paste code from here) style.css script.js Launch your local development server ( live-server ) via Terminal and code editor of choice (ex. VSCode) and make some changes to the files in your web project. Remember the purpose of a local development environment is to \"simulate\" how the code will perform when uploaded to another web server. Open a browser and goto the url shown. It will be http://localhost:8080 or something similar. Create a basic html page using validated markup (Hint: Using a tool like FreeFormatter , check that your code works as expected.) Add some css selectors to your style.css file. Add some basic Javascript functionality to your script.js file. Commit the file changes to your Github repo. You should see the changes in the Github repo summary.","title":"Code Repos"},{"location":"repos/#code-repos","text":"","title":"Code Repos"},{"location":"repos/#critical-making-sandbox","text":"The cm-sandbox repo is a starting point for web projects using HTML, CSS, and JS running on a localhost server. To use: Navigate to your project directory: cd /Users/username/code Clone repo: git clone https://github.com/rjduran/cm-sandbox.git my-project-name This will clone the cm-sandbox repo into a new project folder named my-project-name . Now you have a starting point for a new web project running with live-server . If you plan to make any commits to a repo on Github with this new project folder you will need to create a repo on Github with the same project name and assign the remote to your repo. Assign a new remote to your new project repo. Assuming I have a new project folder called my-project-name and a new repo on Github with the same name, follow the steps below and replace the remote URL with your new repo URL. cd my-project-name git remote -v You will see something like this returned: origin https://github.com/rjduran/cm-sandbox.git (fetch) origin https://github.com/rjduran/cm-sandbox.git (push) Copy the url to your new Github repo and use with the git remote command then push the changes to your repo. Check what the remote is set to by using the git remote command as above. It should be updated with your new project URL. Prior to pushing the changes you can make any edits to the files in the repo and add them and commit them. git remote set-url origin https://github.com/rjduran/my-project-name.git git remote -v git push -u origin master You can read more about changing remotes between HTTPS and SSH and vice versa here .","title":"Critical Making Sandbox"},{"location":"repos/#how-to-build-a-sandbox","text":"Create a local development workspace (aka sandbox ) to prototype with HTML, CSS, and JS. By the end of this you should have something that looks like my cm-sandbox repo. What is the purpose of this? To become familiar with the file types, languages, and how they work together. At a fundamental level this approach to experimentation establishes good development practices and efficient workflows. It also supports hands-on learning, which is the only way to improve as a programmer. As a programmer you want to be in control of your code, tools, workflow, and system. ( Don't let the computer control you. ). Pro Tip: Setup a working directory for all programming projects (For Example, /Users/username/code ). This directory then becomes your goto location for anything having to do with code, programming, cloning repos from github, experimenting with new tools and software, and more. This is precisely how I organize my system. Download and install Node.js and live-server . Verify node and npm are installed via Terminal: node -v && npm -v . You should see two version numbers matching what you installed. Install live-server globally: npm install -g live-server If you have done all this correctly you should be able to type live-server in your terminal and start a server at the default address http://127.0.0.1:8080 from your current folder. Create a Github account and make a repository for your web project (as demonstrated in class). You can name the repo anything you want. For example, \"cm-sandbox\". Clone a copy of this repository to your machine via Terminal. git clone <repo-url> . Setup your machine to make use of a local development folder and local development server (See tip above and Step 1). Create 3 files in your web project repository folder (ie. the project \"folder\" or \"repo\" you created and then cloned from Github in step 3). index.html - ( quick boilerplate template , copy and paste code from here) style.css script.js Launch your local development server ( live-server ) via Terminal and code editor of choice (ex. VSCode) and make some changes to the files in your web project. Remember the purpose of a local development environment is to \"simulate\" how the code will perform when uploaded to another web server. Open a browser and goto the url shown. It will be http://localhost:8080 or something similar. Create a basic html page using validated markup (Hint: Using a tool like FreeFormatter , check that your code works as expected.) Add some css selectors to your style.css file. Add some basic Javascript functionality to your script.js file. Commit the file changes to your Github repo. You should see the changes in the Github repo summary.","title":"How to Build a Sandbox"},{"location":"students/","text":"","title":"Students"},{"location":"des/","text":"2D, 2.5D Design Adobe Creative Cloud Raster photography scanning (flatbed, etc) GIMP Photoshop MyPaint Krita Vector Inkscape , FLOSS Manuals , Release Notes LibreOffice Draw Illustrator Scribus LibreCAD QCAD FreeCAD Layout OmniGraffle 3D Design Sketchup Tinkercad Shapesmith Flood Editor Matter Machine Rhino , Grasshopper , Kangaroo RhinoCAM Fusion 360 Fusion 360 Adoption Portal Fusion 360 Students Download - Free for students. Make an Autodesk account and install. Learn Fusion 360 in 60 Mins Fusion 360 Design Academy Fusion 360 Adoption Portal Blender Maya Mudbox Cinema4D - Free Student Licensing , Grey Scale Gorilla ZBrush AutoCAD Solidworks Onshape Alias 3DS Max PTC NX AC3D OpenSCAD Catia Matrix Gold - Jewelery Design Software Clayoo - Rhino Plugin for Organic Modeling (SUBD, Emboss, Sculpt) Game Engines Unity Unreal Simulation Elmer COMSOL Solidworks: Simulation ANSYS Nastran Audio & Video Audacity Kdenlive , OpenShot , Lightworks , Final Cut Pro X Adobe Premiere , After Effects ffmpeg , avconv , mencoder mplayer , smplayer VLC HTML5 , formats Screencast-O-Matic Reaper Ableton Live Audio Mulch VCV Rack - Open Source Virtual Eurorack DAW Reality Capture Structure Sensor 3D Scanner Autodesk Remake Mesh Tools Meshlab Autodesk Meshmixer Autodesk Netfabb Visual Programming / Node Based Editors Cycling74 Max Notch PraxisLIVE","title":"Tools"},{"location":"des/#2d-25d-design","text":"Adobe Creative Cloud","title":"2D, 2.5D Design"},{"location":"des/#raster","text":"photography scanning (flatbed, etc) GIMP Photoshop MyPaint Krita","title":"Raster"},{"location":"des/#vector","text":"Inkscape , FLOSS Manuals , Release Notes LibreOffice Draw Illustrator Scribus LibreCAD QCAD FreeCAD Layout OmniGraffle","title":"Vector"},{"location":"des/#3d-design","text":"Sketchup Tinkercad Shapesmith Flood Editor Matter Machine Rhino , Grasshopper , Kangaroo RhinoCAM Fusion 360 Fusion 360 Adoption Portal Fusion 360 Students Download - Free for students. Make an Autodesk account and install. Learn Fusion 360 in 60 Mins Fusion 360 Design Academy Fusion 360 Adoption Portal Blender Maya Mudbox Cinema4D - Free Student Licensing , Grey Scale Gorilla ZBrush AutoCAD Solidworks Onshape Alias 3DS Max PTC NX AC3D OpenSCAD Catia Matrix Gold - Jewelery Design Software Clayoo - Rhino Plugin for Organic Modeling (SUBD, Emboss, Sculpt)","title":"3D Design"},{"location":"des/#game-engines","text":"Unity Unreal","title":"Game Engines"},{"location":"des/#simulation","text":"Elmer COMSOL Solidworks: Simulation ANSYS Nastran","title":"Simulation"},{"location":"des/#audio-video","text":"Audacity Kdenlive , OpenShot , Lightworks , Final Cut Pro X Adobe Premiere , After Effects ffmpeg , avconv , mencoder mplayer , smplayer VLC HTML5 , formats Screencast-O-Matic Reaper Ableton Live Audio Mulch VCV Rack - Open Source Virtual Eurorack DAW","title":"Audio &amp; Video"},{"location":"des/#reality-capture","text":"Structure Sensor 3D Scanner Autodesk Remake","title":"Reality Capture"},{"location":"des/#mesh-tools","text":"Meshlab Autodesk Meshmixer Autodesk Netfabb","title":"Mesh Tools"},{"location":"des/#visual-programming-node-based-editors","text":"Cycling74 Max Notch PraxisLIVE","title":"Visual Programming / Node Based Editors"},{"location":"des/devices/","text":"Device Dimensions Apple Mobile Devices","title":"Devices"},{"location":"des/devices/#device-dimensions","text":"Apple Mobile Devices","title":"Device Dimensions"},{"location":"des/generative/","text":"","title":"Generative"},{"location":"des/geometry/","text":"Geometry Various tools and resources used to design and construct digital and physical geometric models. Polyhedra Paper Folding Paper Models of Polyhedra - Thanks Sarah ! Polyhedron Models by Magnus J. Wenninger Software Stella4D ($) Rhinopolyhedra - Plugin for Rhino with over 630 different polyhedral shapes. Mathematica / Student Licensing CaRMetal - Slightly old program that should still work on macOS (Mojave).","title":"Geometry"},{"location":"des/geometry/#geometry","text":"Various tools and resources used to design and construct digital and physical geometric models.","title":"Geometry"},{"location":"des/geometry/#polyhedra-paper-folding","text":"Paper Models of Polyhedra - Thanks Sarah ! Polyhedron Models by Magnus J. Wenninger","title":"Polyhedra Paper Folding"},{"location":"des/geometry/#software","text":"Stella4D ($) Rhinopolyhedra - Plugin for Rhino with over 630 different polyhedral shapes. Mathematica / Student Licensing CaRMetal - Slightly old program that should still work on macOS (Mojave).","title":"Software"},{"location":"des/histories/","text":"","title":"Histories"},{"location":"des/industrial/","text":"","title":"Industrial"},{"location":"des/learning-c4d/","text":"Learning Cinema4D This section contains resources for learning how to use Maxon Cinema 4D. Note this is a living document and is constantly being updated. Some things may come and go over time. Beginner Cinema4D for Students - You can get a free 18 month license as students to start learning this toolset if you are interested in motion design. Many people use this along with Maya, Blender, Mudbox, ZBrush, to model objects, characters, and more assets to put into VR/AR experiences. Greyscalegorilla - The best C4D learning resource out there. Cinema4D + Unity Cinema4D to Unity Workflow Videos by New Tech Tutorials Cimena4D to Unity: Exporting Geometry","title":"Learning Cinema4D"},{"location":"des/learning-c4d/#learning-cinema4d","text":"This section contains resources for learning how to use Maxon Cinema 4D. Note this is a living document and is constantly being updated. Some things may come and go over time.","title":"Learning Cinema4D"},{"location":"des/learning-c4d/#beginner","text":"Cinema4D for Students - You can get a free 18 month license as students to start learning this toolset if you are interested in motion design. Many people use this along with Maya, Blender, Mudbox, ZBrush, to model objects, characters, and more assets to put into VR/AR experiences. Greyscalegorilla - The best C4D learning resource out there. Cinema4D + Unity Cinema4D to Unity Workflow Videos by New Tech Tutorials Cimena4D to Unity: Exporting Geometry","title":"Beginner"},{"location":"des/learning-f360/","text":"Learning Fusion 360 This section contains resources for learning how to use Autodesk Fusion 360. Note this is a living document and is constantly being updated. Some things may come and go over time. Beginner Fusion 360 Students Download - Free for students. Make an Autodesk account and install. Courses Pluralsignt: Fusion 360: Core Skills The Interface Workspaces, Tools, Navigation, Movement, Projects Model Hierarchy (Browser) Timeline (Model History) How to Use the Timeline Master the Timeline, Browser, & Preferences Making Sketches Defining Constraints A Guide to Fusion 360 Sketch Constraints - A great set of videos for each constraint type. A List of Constraint Types Dimensioning a Sketch Fully Defining a Sketch Pro Tip: Anything \"Blue\" is not dimensioned which means it can be moved around. Anything \"Black\" is dimensioned which mean is has a size. Once the whole sketch is Black it is \"Fully Dimensioned.\" This means it's \"locked\" into place. From 2D Sketch to 3D Model Extruding Sketches (Create > Extrude) Sketches vs Bodies vs Components vs Assemblies Quick Tip: Bodies vs Components About bodies and components What is the difference between a Sketch, Body & Component? Understanding Assemblies Pro Tip: Press Shift + N to turn on color cycling. This will give a color to each component. Exporting 3D Models 3D Meshes ( STL , OBJ) Mesh Refinement (Higher Quality = More Triangles) Example: Viewing Meshes in Meshlab Making Mechanical Drawings (2D) File > New Drawing From Design How to Create a Drawing From Your Design (Video) Defining a Parametric Model User Parameters (\"Sigma\" Icon) Change Parameters Dialog Box Equations and Parameters in Dimensions Importing 3D Models Importing a Mesh (STL) - How to convert a mesh to a parametric model. Intermediate Working with Meshes Coming soon Joints and Assemblies NYCNC: Fusion Friday #3: Joints Explained! Advanced Scripting API Coming soon","title":"Learning Fusion 360"},{"location":"des/learning-f360/#learning-fusion-360","text":"This section contains resources for learning how to use Autodesk Fusion 360. Note this is a living document and is constantly being updated. Some things may come and go over time.","title":"Learning Fusion 360"},{"location":"des/learning-f360/#beginner","text":"Fusion 360 Students Download - Free for students. Make an Autodesk account and install.","title":"Beginner"},{"location":"des/learning-f360/#courses","text":"Pluralsignt: Fusion 360: Core Skills","title":"Courses"},{"location":"des/learning-f360/#the-interface","text":"Workspaces, Tools, Navigation, Movement, Projects Model Hierarchy (Browser) Timeline (Model History) How to Use the Timeline Master the Timeline, Browser, & Preferences","title":"The Interface"},{"location":"des/learning-f360/#making-sketches","text":"Defining Constraints A Guide to Fusion 360 Sketch Constraints - A great set of videos for each constraint type. A List of Constraint Types Dimensioning a Sketch Fully Defining a Sketch Pro Tip: Anything \"Blue\" is not dimensioned which means it can be moved around. Anything \"Black\" is dimensioned which mean is has a size. Once the whole sketch is Black it is \"Fully Dimensioned.\" This means it's \"locked\" into place.","title":"Making Sketches"},{"location":"des/learning-f360/#from-2d-sketch-to-3d-model","text":"Extruding Sketches (Create > Extrude) Sketches vs Bodies vs Components vs Assemblies Quick Tip: Bodies vs Components About bodies and components What is the difference between a Sketch, Body & Component? Understanding Assemblies Pro Tip: Press Shift + N to turn on color cycling. This will give a color to each component.","title":"From 2D Sketch to 3D Model"},{"location":"des/learning-f360/#exporting-3d-models","text":"3D Meshes ( STL , OBJ) Mesh Refinement (Higher Quality = More Triangles) Example: Viewing Meshes in Meshlab","title":"Exporting 3D Models"},{"location":"des/learning-f360/#making-mechanical-drawings-2d","text":"File > New Drawing From Design How to Create a Drawing From Your Design (Video)","title":"Making Mechanical Drawings (2D)"},{"location":"des/learning-f360/#defining-a-parametric-model","text":"User Parameters (\"Sigma\" Icon) Change Parameters Dialog Box Equations and Parameters in Dimensions","title":"Defining a Parametric Model"},{"location":"des/learning-f360/#importing-3d-models","text":"Importing a Mesh (STL) - How to convert a mesh to a parametric model.","title":"Importing 3D Models"},{"location":"des/learning-f360/#intermediate","text":"","title":"Intermediate"},{"location":"des/learning-f360/#working-with-meshes","text":"Coming soon","title":"Working with Meshes"},{"location":"des/learning-f360/#joints-and-assemblies","text":"NYCNC: Fusion Friday #3: Joints Explained!","title":"Joints and Assemblies"},{"location":"des/learning-f360/#advanced","text":"","title":"Advanced"},{"location":"des/learning-f360/#scripting-api","text":"Coming soon","title":"Scripting API"},{"location":"des/learning-rhino/","text":"Learning Rhino This section contains resources for learning how to use McNeel Rhinoceros 3D. Note this is a living document and is constantly being updated. Some things may come and go over time. Beginner Rhino Download for macOS - Free for 90 days. Edu License available for ~$90 @ CU Bookstore. Rhinoceros will be in your Applications folder after install.","title":"Learning Rhino"},{"location":"des/learning-rhino/#learning-rhino","text":"This section contains resources for learning how to use McNeel Rhinoceros 3D. Note this is a living document and is constantly being updated. Some things may come and go over time.","title":"Learning Rhino"},{"location":"des/learning-rhino/#beginner","text":"Rhino Download for macOS - Free for 90 days. Edu License available for ~$90 @ CU Bookstore. Rhinoceros will be in your Applications folder after install.","title":"Beginner"},{"location":"des/learning-touchdesigner/","text":"Learning TouchDesigner This section contains resources for learning how to use TouchDesigner . Note this is a living document and is constantly being updated. Some things may come and go over time. Beginner Learning TouchDesigner on Lynda.com - You can watch anything on Lynda.com for free via OIT . Matthew Ragan Tutorials Intro to TouchDesigner by Ben Voigt - A great entry point to the world of touch designer. It's long (4 hrs) but worth the watch. TouchDesigner Wiki - The big list of tutorials and ways to learn the tool. cm-xr repo - A repo I setup for XR related code. There is an implementation of UnitySpout which makes use of KlakSpout to interface TouchDesigner with Unity. This is a Windows 10 only based workflow. Presentations Jessica Palmer - Python and TouchDesigner for Interactive Experiments - A designer turned python programmer and touch design expert. Inspiring talk. Make mind bending, interactive 3D projects with TouchDesigner and Python - Quick talk showing some possibilities with the tool.","title":"Learning TouchDesigner"},{"location":"des/learning-touchdesigner/#learning-touchdesigner","text":"This section contains resources for learning how to use TouchDesigner . Note this is a living document and is constantly being updated. Some things may come and go over time.","title":"Learning TouchDesigner"},{"location":"des/learning-touchdesigner/#beginner","text":"Learning TouchDesigner on Lynda.com - You can watch anything on Lynda.com for free via OIT . Matthew Ragan Tutorials Intro to TouchDesigner by Ben Voigt - A great entry point to the world of touch designer. It's long (4 hrs) but worth the watch. TouchDesigner Wiki - The big list of tutorials and ways to learn the tool. cm-xr repo - A repo I setup for XR related code. There is an implementation of UnitySpout which makes use of KlakSpout to interface TouchDesigner with Unity. This is a Windows 10 only based workflow. Presentations Jessica Palmer - Python and TouchDesigner for Interactive Experiments - A designer turned python programmer and touch design expert. Inspiring talk. Make mind bending, interactive 3D projects with TouchDesigner and Python - Quick talk showing some possibilities with the tool.","title":"Beginner"},{"location":"des/parametric/","text":"Parametric Design Parametric design is a process based on algorithmic thinking that enables the expression of parameters and rules that, together, define, encode and clarify the relationship between design intent and design response. ( Source: Wikipedia ), Google Search Histories Parametric Design: a Brief History Parametric Design: What's Gotten Lost Amid the Algorithms Examples Parametric Design Examples Organizations: Co-de-iT , Zha Code Edu , Designmorphine Projects: Opendesk , Formlabs Digital Factory Pens , New Balance 3D Printed Shoe , Nervous System Kinematics Dress","title":"Parametric"},{"location":"des/parametric/#parametric-design","text":"Parametric design is a process based on algorithmic thinking that enables the expression of parameters and rules that, together, define, encode and clarify the relationship between design intent and design response. ( Source: Wikipedia ), Google Search","title":"Parametric Design"},{"location":"des/parametric/#histories","text":"Parametric Design: a Brief History Parametric Design: What's Gotten Lost Amid the Algorithms","title":"Histories"},{"location":"des/parametric/#examples","text":"Parametric Design Examples Organizations: Co-de-iT , Zha Code Edu , Designmorphine Projects: Opendesk , Formlabs Digital Factory Pens , New Balance 3D Printed Shoe , Nervous System Kinematics Dress","title":"Examples"},{"location":"des/systems/","text":"Design Systems Design Systems Handbook Learn Design Code - Great resource for tools and topics at the intersection of design and code. Flat File CMS Type and Grids Wordpress Themes Colorlib Free Themes - The internet is full of themes. Just google \"best wordpress themes of 2017\" or something more specific to the kind of site you want to build. You will eventually land on something that works. Athemes HTML Themes Bootstrap , Bootswatch , Start Bootstrap Theme Forest Templated Admin Panel Themes Bootstrap Admin Themes 20 Free & Premium Bootstrap Admin Dashboard Templates Top 22 Free Responsive HTML5 Admin & Dashboard Templates 2017 10 Beautifully Designed Free Bootstrap Dashboard Admin Templates Metronic 20 Free Bootstrap Admin Dashboard Templates Start Bootstrap Admin & Dashboard Themes - Simple admin dashboards. Dummy Text (Ipsum) lorem ipsum lorizzle Daftipsum Wikipsum - Ipsum that makes sense! Sort of. HTML-Ipsum Typography & Fonts The Elements of Typographic Style Applied to the Web The Missing Guide to Font Formats: TTF, OTF, WOFF, EOT & SVG Color Coolors - Color generator tool color-hex Colourlovers FlatUI Colors Material Design Color Collection Palette Generator UI Gradients Grid Systems The Grid System - The ultimate resource in grid systems. Grids in Graphic Design","title":"Design Systems"},{"location":"des/systems/#design-systems","text":"Design Systems Handbook Learn Design Code - Great resource for tools and topics at the intersection of design and code.","title":"Design Systems"},{"location":"des/systems/#flat-file-cms","text":"Type and Grids","title":"Flat File CMS"},{"location":"des/systems/#wordpress-themes","text":"Colorlib Free Themes - The internet is full of themes. Just google \"best wordpress themes of 2017\" or something more specific to the kind of site you want to build. You will eventually land on something that works. Athemes","title":"Wordpress Themes"},{"location":"des/systems/#html-themes","text":"Bootstrap , Bootswatch , Start Bootstrap Theme Forest Templated","title":"HTML Themes"},{"location":"des/systems/#admin-panel-themes","text":"Bootstrap Admin Themes 20 Free & Premium Bootstrap Admin Dashboard Templates Top 22 Free Responsive HTML5 Admin & Dashboard Templates 2017 10 Beautifully Designed Free Bootstrap Dashboard Admin Templates Metronic 20 Free Bootstrap Admin Dashboard Templates Start Bootstrap Admin & Dashboard Themes - Simple admin dashboards.","title":"Admin Panel Themes"},{"location":"des/systems/#dummy-text-ipsum","text":"lorem ipsum lorizzle Daftipsum Wikipsum - Ipsum that makes sense! Sort of. HTML-Ipsum","title":"Dummy Text (Ipsum)"},{"location":"des/systems/#typography-fonts","text":"The Elements of Typographic Style Applied to the Web The Missing Guide to Font Formats: TTF, OTF, WOFF, EOT & SVG","title":"Typography &amp; Fonts"},{"location":"des/systems/#color","text":"Coolors - Color generator tool color-hex Colourlovers FlatUI Colors Material Design Color Collection Palette Generator UI Gradients","title":"Color"},{"location":"des/systems/#grid-systems","text":"The Grid System - The ultimate resource in grid systems. Grids in Graphic Design","title":"Grid Systems"},{"location":"des/ux-tools/","text":"UX Tools UXTools.co UI/UX Design Sketch Adobe XD / Getting Started Atomic Omnigraffle Wireframing Wires (UX Kit for AdobeXD) Snap Rapid Wireframing Kit Voice UX BotMock Botsociety","title":"UX Tools"},{"location":"des/ux-tools/#ux-tools","text":"UXTools.co","title":"UX Tools"},{"location":"des/ux-tools/#uiux-design","text":"Sketch Adobe XD / Getting Started Atomic Omnigraffle","title":"UI/UX Design"},{"location":"des/ux-tools/#wireframing","text":"Wires (UX Kit for AdobeXD) Snap Rapid Wireframing Kit","title":"Wireframing"},{"location":"des/ux-tools/#voice-ux","text":"BotMock Botsociety","title":"Voice UX"},{"location":"des/web-design/","text":"Web Design Design Tools Tools that bridge the design to development gap. Webflow Sketch Platforma 2 for sketch Framer X Adobe XD Invision App Awesome Design Tools: Design to Code Tools Fonts Font Pairings","title":"Web Design"},{"location":"des/web-design/#web-design","text":"","title":"Web Design"},{"location":"des/web-design/#design-tools","text":"Tools that bridge the design to development gap. Webflow Sketch Platforma 2 for sketch Framer X Adobe XD Invision App Awesome Design Tools: Design to Code Tools","title":"Design Tools"},{"location":"des/web-design/#fonts","text":"Font Pairings","title":"Fonts"},{"location":"dev/","text":"Text Editors / IDEs Atom - ( Atom Flight Manual , Packages , My Setup ) Text Wrangler vi , vim , emacs JEdit Eclipse Visual Studio Express XCode Sublime Text Brackets Jetbrains Geany Netbeans IDE TextEdit (MacOS) Notepad (Win) Visual Studio Code Systems Apple MacOS Windows 10 Ubuntu Unix , Unix Tutorial for Beginners , Unix History VirtualBox Browsers Chrome , Chrome Dev Tools Firefox , Firebug Safari Terminals MacOS Terminal , MacOS/Linux/Unix Command Line Cheat Sheet iTerm 2 Powershell (Win) Localhost These are common LAMP stack based environments for local web development. localhost Setting up a local web server on a Mac XAMPP How do I install XAMPP for Mac OS X? MAMP Bitnami Website Copiers HTTRACK Static Site Generators / Documentation StaticGen - Top Open-Source Static Site Generators mkdocs , Material Theme Gitbook Pandoc Metalsmith Jekyll Hugo Web Languages I HyperText Markup Language (HTML) HTML (Mozilla) Google Web Fundamentals HTML Tutorial HTMLDog - HTML Beginner Tutorial HTMLDog - HTML Intermediate Tutorial HTML Validator Dive into HTML5 Cascading Style Sheets (CSS) CSS (Mozilla) CSS Intro CSS Tutorial CSS-Tricks CSS Basics HTMLDog - CSS Beginner Tutorial HTMLDog - CSS Intermediate Tutorial JavaScript (JS) JavaScript (Mozilla) Mozilla Guide Javascript.com W3C Javascript Tutorial Eloquent Javascript (Book) W3C JSON Tutorial Web Languages II Markdown Markdown Markdown Docs Markdown Cheatsheet Canvas , 31 Days of Canvas tutorials WebGL , Does my browser support WebGL? , WebGL Report Web Protocols Hypertext Transfer Protocol (HTTP) File Transfer Protocol (FTP) Secure Shell (SSH) Programming Languages Python , Anaconda Ruby , RVM Java , C/C++ .NET Swift Coding Standards Tools that can help you make your own style guides Airbnb Javascript Style Guide Isobar Front-end Code Standards Google Style Guides - All languages Google Web Development Mozilla Developer Guide - Coding Style Frameworks and Libraries jQuery jQuery Mobile node.js , npm , nvm . ( Beginner Tutorial , Felix's Node.js Beginners Guide ) React Awesome React Components React Native , Use React Native , Nuclide (Atom Package) Express - For Node.js MongoDB Angular Mobile Angular UI Vue Omniscient Riot Backbone.js Aurelia Ember Meteor Rails - Uses Ruby language Masonry.js Moment.js - Parse, validate, manipulate, and display dates and times Search Engines Javascripting TodoMVC General-Purpose Task Runners Gulp - Automated task runner Getting started with gulp - Good overview of the tool. An Introduction to Gulp.js - This is a nice little primer explaining how it works and how it is different from Grunt. Gulp Recipes Grunt - JavaScript Task Runner. Older than Gulp. npm - Part of Node.js Dependency Management Bower - Package Manager Yarn - Package Manager for JS Yarn: A new package manager for JavaScript Module Bundlers Browserify Intro to browserify budo Webpack - Asset bundler Webpack or Browserify & Gulp: Which Is Better? Beginner\u2019s guide to Webpack RequireJS Linting Github Collection of Clean Code Linters ESLint JSHint - JS error checking JSLint Test Frameworks Mocha Jasmine QUnit Compilers and Extensions CoffeeScript - Simplified Javascript LiveScript TypeScript Babel - Javascript compiler. Commonly used for JSX. Getting started with Babel Getting Started With ES6 and Babel SASS - CSS Extension LESS - CSS Pre-Processor CSS Preprocessors \u2013 Sass vs LESS Web App Framework / Workflow Yeoman Lineman Sandboxes Examples of Sandbox-like / Code Sharing Environments Codepen - HTML, CSS, JS JSFiddle - HTML, CSS, JS Scratchpad (HTML/JS) JS2Coffee - JS, Coffeescript CodeSandbox - React, Angular, Vue, Preact, Svelte JSBin - JS Pastebin Javascript Sandbox - JS Kixx Demos CSS Desk - CSS Mobile App Prototyping Adobe PhoneGap Ionic Framework Template Engines Mustache Handlebars Underscore Pug - Formerly Jade Embedded JS (EJS) Transparency - For jQuery Dust doT - For Node.js Template 7 Documentation Generation mkdocs , Material Theme Docusaurus Gitbook Pandoc ESDoc Transcription documentation.js YUIDoc JSDoc Various Web Tools Spritecow - For working with sprites Create CSS3 - CSS generator Travis CI Electron - Desktop App Build Systems Modernizr - JS that tells you what HTML, CSS, and JS features a brower as. API Development Sandbox Postman - API Development okta RunKit APIs (Application Programming Interfaces) Working with data from APIs such as Instagram, Slack, etc What is an API? Postman - A great tool for working with APIs HTTP: The Protocol Every Web Developer Must Know RESTful Web Services RESTful What is RESTful programming? RESTful Web Services: A Tutorial Ports List of Common Ports List of TCP and UDP port numbers Development News Tutorialzine Glitch Techstacks Stackshare - Tech Stacks - The open source tools and SaaS behind the world's best startups. ie AirBnb, FB, Uber, etc The Book of Secret Knowledge - A collection of awesome lists, manuals, blogs, hacks, one-liners, cli/web tools and more. Especially for System and Network Administrators, DevOps, Pentesters or Security Researchers. Front-End Case Studies - A great collection of case studies about front-end development tools and practices across industry. Front-End Developer Handbook 2019 - A deep dive into front-end dev tools and workflows.","title":"Tools"},{"location":"dev/#text-editors-ides","text":"Atom - ( Atom Flight Manual , Packages , My Setup ) Text Wrangler vi , vim , emacs JEdit Eclipse Visual Studio Express XCode Sublime Text Brackets Jetbrains Geany Netbeans IDE TextEdit (MacOS) Notepad (Win) Visual Studio Code","title":"Text Editors / IDEs"},{"location":"dev/#systems","text":"Apple MacOS Windows 10 Ubuntu Unix , Unix Tutorial for Beginners , Unix History VirtualBox","title":"Systems"},{"location":"dev/#browsers","text":"Chrome , Chrome Dev Tools Firefox , Firebug Safari","title":"Browsers"},{"location":"dev/#terminals","text":"MacOS Terminal , MacOS/Linux/Unix Command Line Cheat Sheet iTerm 2 Powershell (Win)","title":"Terminals"},{"location":"dev/#localhost","text":"These are common LAMP stack based environments for local web development. localhost Setting up a local web server on a Mac XAMPP How do I install XAMPP for Mac OS X? MAMP Bitnami","title":"Localhost"},{"location":"dev/#website-copiers","text":"HTTRACK","title":"Website Copiers"},{"location":"dev/#static-site-generators-documentation","text":"StaticGen - Top Open-Source Static Site Generators mkdocs , Material Theme Gitbook Pandoc Metalsmith Jekyll Hugo","title":"Static Site Generators / Documentation"},{"location":"dev/#web-languages-i","text":"","title":"Web Languages I"},{"location":"dev/#hypertext-markup-language-html","text":"HTML (Mozilla) Google Web Fundamentals HTML Tutorial HTMLDog - HTML Beginner Tutorial HTMLDog - HTML Intermediate Tutorial HTML Validator Dive into HTML5","title":"HyperText Markup Language (HTML)"},{"location":"dev/#cascading-style-sheets-css","text":"CSS (Mozilla) CSS Intro CSS Tutorial CSS-Tricks CSS Basics HTMLDog - CSS Beginner Tutorial HTMLDog - CSS Intermediate Tutorial","title":"Cascading Style Sheets (CSS)"},{"location":"dev/#javascript-js","text":"JavaScript (Mozilla) Mozilla Guide Javascript.com W3C Javascript Tutorial Eloquent Javascript (Book) W3C JSON Tutorial","title":"JavaScript (JS)"},{"location":"dev/#web-languages-ii","text":"Markdown Markdown Markdown Docs Markdown Cheatsheet Canvas , 31 Days of Canvas tutorials WebGL , Does my browser support WebGL? , WebGL Report","title":"Web Languages II"},{"location":"dev/#web-protocols","text":"Hypertext Transfer Protocol (HTTP) File Transfer Protocol (FTP) Secure Shell (SSH)","title":"Web Protocols"},{"location":"dev/#programming-languages","text":"Python , Anaconda Ruby , RVM Java , C/C++ .NET Swift","title":"Programming Languages"},{"location":"dev/#coding-standards","text":"Tools that can help you make your own style guides Airbnb Javascript Style Guide Isobar Front-end Code Standards Google Style Guides - All languages Google Web Development Mozilla Developer Guide - Coding Style","title":"Coding Standards"},{"location":"dev/#frameworks-and-libraries","text":"jQuery jQuery Mobile node.js , npm , nvm . ( Beginner Tutorial , Felix's Node.js Beginners Guide ) React Awesome React Components React Native , Use React Native , Nuclide (Atom Package) Express - For Node.js MongoDB Angular Mobile Angular UI Vue Omniscient Riot Backbone.js Aurelia Ember Meteor Rails - Uses Ruby language Masonry.js Moment.js - Parse, validate, manipulate, and display dates and times","title":"Frameworks and Libraries"},{"location":"dev/#search-engines","text":"Javascripting TodoMVC","title":"Search Engines"},{"location":"dev/#general-purpose-task-runners","text":"Gulp - Automated task runner Getting started with gulp - Good overview of the tool. An Introduction to Gulp.js - This is a nice little primer explaining how it works and how it is different from Grunt. Gulp Recipes Grunt - JavaScript Task Runner. Older than Gulp. npm - Part of Node.js","title":"General-Purpose Task Runners"},{"location":"dev/#dependency-management","text":"Bower - Package Manager Yarn - Package Manager for JS Yarn: A new package manager for JavaScript","title":"Dependency Management"},{"location":"dev/#module-bundlers","text":"Browserify Intro to browserify budo Webpack - Asset bundler Webpack or Browserify & Gulp: Which Is Better? Beginner\u2019s guide to Webpack RequireJS","title":"Module Bundlers"},{"location":"dev/#linting","text":"Github Collection of Clean Code Linters ESLint JSHint - JS error checking JSLint","title":"Linting"},{"location":"dev/#test-frameworks","text":"Mocha Jasmine QUnit","title":"Test Frameworks"},{"location":"dev/#compilers-and-extensions","text":"CoffeeScript - Simplified Javascript LiveScript TypeScript Babel - Javascript compiler. Commonly used for JSX. Getting started with Babel Getting Started With ES6 and Babel SASS - CSS Extension LESS - CSS Pre-Processor CSS Preprocessors \u2013 Sass vs LESS","title":"Compilers and Extensions"},{"location":"dev/#web-app-framework-workflow","text":"Yeoman Lineman","title":"Web App Framework / Workflow"},{"location":"dev/#sandboxes","text":"Examples of Sandbox-like / Code Sharing Environments Codepen - HTML, CSS, JS JSFiddle - HTML, CSS, JS Scratchpad (HTML/JS) JS2Coffee - JS, Coffeescript CodeSandbox - React, Angular, Vue, Preact, Svelte JSBin - JS Pastebin Javascript Sandbox - JS Kixx Demos CSS Desk - CSS","title":"Sandboxes"},{"location":"dev/#mobile-app-prototyping","text":"Adobe PhoneGap Ionic Framework","title":"Mobile App Prototyping"},{"location":"dev/#template-engines","text":"Mustache Handlebars Underscore Pug - Formerly Jade Embedded JS (EJS) Transparency - For jQuery Dust doT - For Node.js Template 7","title":"Template Engines"},{"location":"dev/#documentation-generation","text":"mkdocs , Material Theme Docusaurus Gitbook Pandoc ESDoc Transcription documentation.js YUIDoc JSDoc","title":"Documentation Generation"},{"location":"dev/#various-web-tools","text":"Spritecow - For working with sprites Create CSS3 - CSS generator Travis CI Electron - Desktop App Build Systems Modernizr - JS that tells you what HTML, CSS, and JS features a brower as.","title":"Various Web Tools"},{"location":"dev/#api-development","text":"Sandbox Postman - API Development okta RunKit APIs (Application Programming Interfaces) Working with data from APIs such as Instagram, Slack, etc What is an API? Postman - A great tool for working with APIs HTTP: The Protocol Every Web Developer Must Know RESTful Web Services RESTful What is RESTful programming? RESTful Web Services: A Tutorial","title":"API Development"},{"location":"dev/#ports","text":"List of Common Ports List of TCP and UDP port numbers","title":"Ports"},{"location":"dev/#development-news","text":"Tutorialzine Glitch","title":"Development News"},{"location":"dev/#techstacks","text":"Stackshare - Tech Stacks - The open source tools and SaaS behind the world's best startups. ie AirBnb, FB, Uber, etc The Book of Secret Knowledge - A collection of awesome lists, manuals, blogs, hacks, one-liners, cli/web tools and more. Especially for System and Network Administrators, DevOps, Pentesters or Security Researchers. Front-End Case Studies - A great collection of case studies about front-end development tools and practices across industry. Front-End Developer Handbook 2019 - A deep dive into front-end dev tools and workflows.","title":"Techstacks"},{"location":"dev/histories/","text":"History of the Electronics, Computers, and the Internet Awesome Computer History - A Github based Awesome list Computer History Museum Exhibition Digital Logic The Web As We May Think by Vannevar Bush (1945) / Brainpickings Summary The Mother of all Demos, presented by Douglas Engelbart (1968) / Wikipedia Computer History Museum: Internet History 1962 to 1992 Brief History of the Internet A Brief Guide to the History of the Internet w/ Timeline The Idea Factory: Bell Labs and the Great Age of American Innovation by Jon Gertner The Innovators: How a Group of Hackers, Geniuses, and Geeks Created the Digital Revolution by Walter Isaacson Command Line Heroes (Podcast) - Great podcast covering all sorts of historical moments in computing technology. History of Web Languages A History of HTML A Brief History of CSS until 2016 A Brief History of JavaScript How browsers work: Behind the scenes of modern web browsers History of Operating Systems History of Linux History of MacOS History of Windows History of Programming and Code What is Code? History of Computer Programming (Graphic) History of Programming Languages History of Computer Languages - The Classical Decade, 1950s Casey Reas on Coding: You need to be Able to Read and Write History of Scripting The Rise of Scripting Languages by John Ousterhout (March 1998)","title":"Histories"},{"location":"dev/histories/#history-of-the-electronics-computers-and-the-internet","text":"Awesome Computer History - A Github based Awesome list Computer History Museum Exhibition Digital Logic The Web As We May Think by Vannevar Bush (1945) / Brainpickings Summary The Mother of all Demos, presented by Douglas Engelbart (1968) / Wikipedia Computer History Museum: Internet History 1962 to 1992 Brief History of the Internet A Brief Guide to the History of the Internet w/ Timeline The Idea Factory: Bell Labs and the Great Age of American Innovation by Jon Gertner The Innovators: How a Group of Hackers, Geniuses, and Geeks Created the Digital Revolution by Walter Isaacson Command Line Heroes (Podcast) - Great podcast covering all sorts of historical moments in computing technology.","title":"History of the Electronics, Computers, and the Internet"},{"location":"dev/histories/#history-of-web-languages","text":"A History of HTML A Brief History of CSS until 2016 A Brief History of JavaScript How browsers work: Behind the scenes of modern web browsers","title":"History of Web Languages"},{"location":"dev/histories/#history-of-operating-systems","text":"History of Linux History of MacOS History of Windows","title":"History of Operating Systems"},{"location":"dev/histories/#history-of-programming-and-code","text":"What is Code? History of Computer Programming (Graphic) History of Programming Languages History of Computer Languages - The Classical Decade, 1950s Casey Reas on Coding: You need to be Able to Read and Write","title":"History of Programming and Code"},{"location":"dev/histories/#history-of-scripting","text":"The Rise of Scripting Languages by John Ousterhout (March 1998)","title":"History of Scripting"},{"location":"dev/js-libs/","text":"Javascript Libraries Pop Motion 11 JavaScript Animation Libraries For 2018","title":"Javascript Libraries"},{"location":"dev/js-libs/#javascript-libraries","text":"Pop Motion 11 JavaScript Animation Libraries For 2018","title":"Javascript Libraries"},{"location":"dev/learning-git/","text":"This section contains resources for learning how to use the Git version control system. Note this is a living document and is constantly being updated. Some things may come and go over time. Beginner Git & GitHub Github Tutorial (10 mins) - Non command line (Terminal) tutorial. Git - The Simple Guide - Command line based tutorial. Connecting to Github with SSH Git & Github Tutorial on Udacity - Command line based tutorial. Start a new git repository git/github guide a minimal tutorial The most important git commands Git Immersion - Advanced Tutorial. Work through this once you get the hang of working on the command line. Command Line Cheat Sheet by git-tower - This one is great! Version Control Workflow Cheat Sheet for Git (git0tower) Markdown Mastering Markdown Markdown Docs Markdown Cheatsheet How to write a great README for your GitHub project - These are only examples. Not all projects need every detail in the readme as described. The contents of a readme really depend on the type of project and audience. In general, its good to enable someone else to download and run your code if you are sharing it to Github. Awesome README - A massive list of README examples and resources.","title":"Learning Git"},{"location":"dev/learning-git/#beginner","text":"","title":"Beginner"},{"location":"dev/learning-git/#git-github","text":"Github Tutorial (10 mins) - Non command line (Terminal) tutorial. Git - The Simple Guide - Command line based tutorial. Connecting to Github with SSH Git & Github Tutorial on Udacity - Command line based tutorial. Start a new git repository git/github guide a minimal tutorial The most important git commands Git Immersion - Advanced Tutorial. Work through this once you get the hang of working on the command line. Command Line Cheat Sheet by git-tower - This one is great! Version Control Workflow Cheat Sheet for Git (git0tower)","title":"Git &amp; GitHub"},{"location":"dev/learning-git/#markdown","text":"Mastering Markdown Markdown Docs Markdown Cheatsheet How to write a great README for your GitHub project - These are only examples. Not all projects need every detail in the readme as described. The contents of a readme really depend on the type of project and audience. In general, its good to enable someone else to download and run your code if you are sharing it to Github. Awesome README - A massive list of README examples and resources.","title":"Markdown"},{"location":"dev/learning-html-css/","text":"This section contains resources for learning HTML & CSS. The two languages are so interrelated it only makes sense to learn them in parallel. Note this is a living document and is constantly being updated. Some things may come and go over time. Beginner A beginning HTML and CSS programmer is someone that is new to both languages and possibly programming. This set of resources spans learning what each language is, how they work together, and the basics of more front-end design oriented topics such as fluid design, responsive design, and mobile design. HTML There is no shortcut to learning HTML or CSS. The best teacher is practice and application. Make things, break things, and analyze why certain HTML tags or CSS selectors work (or don't). Make use of a live server type environment to speed up your development workflow. Language HTML (Mozilla) Google Web Fundamentals Document Meta Data The HTML Element HEAD - A list of everything that could go in the head of your document Tutorials HTML Tutorial HTMLDog - HTML Beginner Tutorial HTMLDog - HTML Intermediate Tutorial Tools HTML Validator CSS Language CSS (Mozilla) CSS Intro CSS-Tricks CSS Basics Tutorials CSS Tutorial HTMLDog - CSS Beginner Tutorial HTMLDog - CSS Intermediate Tutorial Tools CSS Validator Intermediate An intermediate HTML and CSS programmer is someone that is familiar with both languages and can build simple pages and functional websites based off mockups or wireframes. CSS Units W3 CSS Units CSS values and units Web Style Sheets CSS tips & tricks Your Ultimate Guide to CSS Units \u2013 All You Need to Know CSS Units Best Practices The quick guide to CSS length units Resets & Boilerplates CSS Normalize & Resets Reboot, Resets, and Reasoning Normalize.css Treehouse Quick Tips: Applying Normalize.css Browser Reset CSS About normalize.css CSS Tools: Reset What is the difference between Normalize.css and Reset CSS? Boilerplates HTML5 Boilerplate Positioning & Layout Box Model Introduction to the CSS basic box model Box model recap CSS Box Model Sandbox Positioning CSS Positioning in Ten Steps CSS Positioning 101 Layouts, Grids, Flexbox A Complete Guide to Grid Interactive Grid Cheat Sheet A Complete Guide to Flexbox Interactive Flex Cheat Sheet CSS Grid\u200a\u2014\u200aa simple layout design tutorial - Great intro to CSS Grid. Part of another great resource: The CSS Visual Dictionary . This gives great visual examples of CSS in use. The Author ( JavaScript Teacher ) of these works has tons of other useful articles on Medium. Media Queries Using media queries Responsive web design Media Queries for Standard Devices Media Queries Demystified: CSS Min-Width and Max-Width Tools CSS Media Queries - Great tool for inspecting which media queries apply to your current device Simple CSS Media Queries - Tool for generating media queries for devices Test Responsive and Device Specific Viewports in Google Chrome Preprocessors SASS (SCSS) LESS - Less (aka Leaner Style Sheets) is a dynamic preprocessor style sheet language that can be compiled into Cascading Style Sheets and run on the client side or server side. Intro to CSS Preprocessors Organization Methods to Organize CSS Advanced An advanced HTML and CSS programmer is someone that is an expert with both languages and can architect nearly any possible website for any possible platform. CSS CSS Specificity Hierarchy What is CSS specificity hierarchy W3: Calculating a selector's specificity CSS Specificity Calculator - Really useful! CSS Ninja CSS Best Practices \u2013 14 Steps to Become a CSS Ninja Pt1 CSS Best Practices \u2013 14 Steps to Become a CSS Ninja Pt2 CSS Methologies BEM \u2013 meaning block, element, modifier \u2013 is a front-end naming methodology thought up by the guys at Yandex. It is a smart way of naming your CSS classes to give them more transparency and meaning to other developers. MindBEMding \u2013 getting your head \u2019round BEM syntax BEMIT: Taking the BEM Naming Convention a Step Further Other Handbooks, Guides, Interview Questions Front-End Interview Handbook Back-End Developer Interview Questions Tech Interview Handbook Code Guide by @mdo - A guide by the author of Bootstrap. Front-End Frameworks Foundation Shoelace - Like bootstrap but smaller","title":"Learning HTML & CSS"},{"location":"dev/learning-html-css/#beginner","text":"A beginning HTML and CSS programmer is someone that is new to both languages and possibly programming. This set of resources spans learning what each language is, how they work together, and the basics of more front-end design oriented topics such as fluid design, responsive design, and mobile design.","title":"Beginner"},{"location":"dev/learning-html-css/#html","text":"There is no shortcut to learning HTML or CSS. The best teacher is practice and application. Make things, break things, and analyze why certain HTML tags or CSS selectors work (or don't). Make use of a live server type environment to speed up your development workflow.","title":"HTML"},{"location":"dev/learning-html-css/#language","text":"HTML (Mozilla) Google Web Fundamentals","title":"Language"},{"location":"dev/learning-html-css/#document-meta-data","text":"The HTML Element HEAD - A list of everything that could go in the head of your document","title":"Document Meta Data"},{"location":"dev/learning-html-css/#tutorials","text":"HTML Tutorial HTMLDog - HTML Beginner Tutorial HTMLDog - HTML Intermediate Tutorial","title":"Tutorials"},{"location":"dev/learning-html-css/#tools","text":"HTML Validator","title":"Tools"},{"location":"dev/learning-html-css/#css","text":"","title":"CSS"},{"location":"dev/learning-html-css/#language_1","text":"CSS (Mozilla) CSS Intro CSS-Tricks CSS Basics","title":"Language"},{"location":"dev/learning-html-css/#tutorials_1","text":"CSS Tutorial HTMLDog - CSS Beginner Tutorial HTMLDog - CSS Intermediate Tutorial","title":"Tutorials"},{"location":"dev/learning-html-css/#tools_1","text":"CSS Validator","title":"Tools"},{"location":"dev/learning-html-css/#intermediate","text":"An intermediate HTML and CSS programmer is someone that is familiar with both languages and can build simple pages and functional websites based off mockups or wireframes.","title":"Intermediate"},{"location":"dev/learning-html-css/#css-units","text":"W3 CSS Units CSS values and units Web Style Sheets CSS tips & tricks Your Ultimate Guide to CSS Units \u2013 All You Need to Know CSS Units Best Practices The quick guide to CSS length units","title":"CSS Units"},{"location":"dev/learning-html-css/#resets-boilerplates","text":"","title":"Resets &amp; Boilerplates"},{"location":"dev/learning-html-css/#css-normalize-resets","text":"Reboot, Resets, and Reasoning Normalize.css Treehouse Quick Tips: Applying Normalize.css Browser Reset CSS About normalize.css CSS Tools: Reset What is the difference between Normalize.css and Reset CSS?","title":"CSS Normalize &amp; Resets"},{"location":"dev/learning-html-css/#boilerplates","text":"HTML5 Boilerplate","title":"Boilerplates"},{"location":"dev/learning-html-css/#positioning-layout","text":"","title":"Positioning &amp; Layout"},{"location":"dev/learning-html-css/#box-model","text":"Introduction to the CSS basic box model Box model recap CSS Box Model Sandbox","title":"Box Model"},{"location":"dev/learning-html-css/#positioning","text":"CSS Positioning in Ten Steps CSS Positioning 101","title":"Positioning"},{"location":"dev/learning-html-css/#layouts-grids-flexbox","text":"A Complete Guide to Grid Interactive Grid Cheat Sheet A Complete Guide to Flexbox Interactive Flex Cheat Sheet CSS Grid\u200a\u2014\u200aa simple layout design tutorial - Great intro to CSS Grid. Part of another great resource: The CSS Visual Dictionary . This gives great visual examples of CSS in use. The Author ( JavaScript Teacher ) of these works has tons of other useful articles on Medium.","title":"Layouts, Grids, Flexbox"},{"location":"dev/learning-html-css/#media-queries","text":"Using media queries Responsive web design Media Queries for Standard Devices Media Queries Demystified: CSS Min-Width and Max-Width","title":"Media Queries"},{"location":"dev/learning-html-css/#tools_2","text":"CSS Media Queries - Great tool for inspecting which media queries apply to your current device Simple CSS Media Queries - Tool for generating media queries for devices Test Responsive and Device Specific Viewports in Google Chrome","title":"Tools"},{"location":"dev/learning-html-css/#preprocessors","text":"SASS (SCSS) LESS - Less (aka Leaner Style Sheets) is a dynamic preprocessor style sheet language that can be compiled into Cascading Style Sheets and run on the client side or server side. Intro to CSS Preprocessors","title":"Preprocessors"},{"location":"dev/learning-html-css/#organization","text":"Methods to Organize CSS","title":"Organization"},{"location":"dev/learning-html-css/#advanced","text":"An advanced HTML and CSS programmer is someone that is an expert with both languages and can architect nearly any possible website for any possible platform.","title":"Advanced"},{"location":"dev/learning-html-css/#css_1","text":"","title":"CSS"},{"location":"dev/learning-html-css/#css-specificity-hierarchy","text":"What is CSS specificity hierarchy W3: Calculating a selector's specificity CSS Specificity Calculator - Really useful!","title":"CSS Specificity Hierarchy"},{"location":"dev/learning-html-css/#css-ninja","text":"CSS Best Practices \u2013 14 Steps to Become a CSS Ninja Pt1 CSS Best Practices \u2013 14 Steps to Become a CSS Ninja Pt2","title":"CSS Ninja"},{"location":"dev/learning-html-css/#css-methologies","text":"BEM \u2013 meaning block, element, modifier \u2013 is a front-end naming methodology thought up by the guys at Yandex. It is a smart way of naming your CSS classes to give them more transparency and meaning to other developers. MindBEMding \u2013 getting your head \u2019round BEM syntax BEMIT: Taking the BEM Naming Convention a Step Further","title":"CSS Methologies"},{"location":"dev/learning-html-css/#other","text":"","title":"Other"},{"location":"dev/learning-html-css/#handbooks-guides-interview-questions","text":"Front-End Interview Handbook Back-End Developer Interview Questions Tech Interview Handbook Code Guide by @mdo - A guide by the author of Bootstrap.","title":"Handbooks, Guides, Interview Questions"},{"location":"dev/learning-html-css/#front-end-frameworks","text":"Foundation Shoelace - Like bootstrap but smaller","title":"Front-End Frameworks"},{"location":"dev/learning-js/","text":"This section contains resources for learning how to program in Javascript. Note this is a living document and is constantly being updated. Some things may come and go over time. Beginner A beginning Javascript programmer is someone that is new to the Javascript language and possibly programming. This set of resources spans learning what Javascript is and how it works in the browser to fundamental concepts of computer programming, computer science, and software engineering. Its best to have a good handle on the basics of HTML and CSS before learning Javascript. Pro tip: If you don't have a sandbox environment to work out of you can get started quickly with any of these Javascript Sandboxes . Or you can build one . Getting Started What is Javascript? - A great overview of the language and how it works with HTML and CSS. What is Javascript? (Video) ECMAScript aka JavaScript Programming in General Kahn Academy - Computer Programming Language Javascript (Mozilla) W3 Javascript Tutorial How Javascript Works Code Academy - Intro to JavaScript ($) Google Developers Training Javascript Basics: What is Javascript, really? JavaScript building blocks Language Summaries / Cheatsheets Javascript.com by Pluralsignt - A great quick reference of parts of the language. Javascript Basics (P5.js Wiki Reference) - This is a quick-ish overview of the language and how to use it. DOM Introduction to the DOM What is the DOM? (Video) The HTML DOM DOM Interfaces Core Interfaces in the DOM Document Object Properties and Methods JavaScript DOM Tutorial Series (Video Playlist) - by The Net Ninja JavaScript DOM Tutorial #1 - Introduction Javascript DOM Tutorial #2 - Get Element By ID JavaScript DOM Tutorial #3 - Get Elements By Class or Tag JavaScript DOM Tutorial #4 - The Query Selector JavaScript DOM Tutorial #5 - Changing Text & HTML Content Eloquent Javascript: CH 14 - The Document Object Model Event Handlers Global Event Handlers Books JavaScript: The Definitive Guide by David Flanagan Professional JavaScript for Web Developers by Nicholas C. Zaka Eloquent Javascript Object-Oriented JavaScript by Stoyan Stefanov and Kumar Chetan Sharma You Don't Know JS - A Github based book series on JavaScript. The Complete JavaScript Handbook Exploring JS: JS books for programmers - A great collection of the latest and greatest books on the language. JSbooks - Huge collection of free books at all skill levels. JQuery W3 jQuery Tutorial Tutorials Get Started with Debugging JavaScript in Chrome DevTools Vanilla Javascript by Traversy Media Build A Filterable List With Vanilla JavaScript Javascripting (Nodeschool) - Learn JS / Terminal by playing with a node app. You need to know how to use npm and the terminal to run this. freeCodeCamp - Basic Javascript - 10 hrs of tutorials JavaScript Tutorial by Sololearn Javascript.com by Pluralsignt - Check out these short courses for learning specific topics using JS. The Modern JavaScript Tutorial - A great tutorial series that's easy for any beginner to follow. This is a great to place to start if you are new. Articles Learn to Code: 13 Tips that Could Save You Years of Effort 10 Priceless Resources for JavaScript Learners A Study Plan To Cure JavaScript Fatigue - Thx Karen ! JS Collections Micro JS - A website with tons of JS libraries. Some big some small. Intermediate An intermediate Javascript programmer understands parts of Javascript language of syntax (form) and semantics (meaning) and is interested in learning more about design patterns, best practices, libraries, frameworks, and alternative workflows. Language JS the Right Way JavaScript Design Patterns - Free Udacity Course Regular Expressions Regular Expressions (Mozilla) W3 Regex Reference Tutorials RegexOne Tutorials You Should Learn Regular Expressions Regex Sandboxes Regex 101 Regex Pal Tester Regulex Regexper Books JavaScript Patterns by Stoyan Stefanov JavaScript Enlightenment: From Library User to JavaScript Developer by Cody Lindley Data Structures and Algorithms Data Structures and Algorithms with JavaScript by Michael McMillan Introduction to Algorithms by Thomas H. Cormen et al Coding Math (Youtube Channel) Package Management What are the best front-end package managers? - February 2018 Guide to JavaScript frontend package managers - November 2015 JS UIs ULI dat.gui guigui Tutorials Understanding JavaScript Bind() Arrow Functions Advanced An advanced Javascript programmer understands how to utilize Javascript to solve technical and creative challenges by using existing tools and designing custom solutions. Language Backbone.js Fundamentals JavaScript Garden How to Learn ES6 (ECMAScript 6) ECMAScript Design Patterns Learning JavaScript Design Patterns Pro JavaScript Design Patterns: The Essentials of Object-Oriented JavaScript Programming by Dustin Diaz and Ross Harmes Design Patterns: Elements of Reusable Object-Oriented Software by Erich Gamma et al Writing Modular JavaScript With AMD, CommonJS & ES Harmony Working with Modules RequireJS RequireJS's relationship to CommonJS Module Best Practices - Writing JS Modules in Node/CommonJS Application Development Electron Muon - Similar to Electron but uses Chromium Code Poems A Functional Poem\u200a\u2014\u200aCode that makes sense","title":"Learning Javascript"},{"location":"dev/learning-js/#beginner","text":"A beginning Javascript programmer is someone that is new to the Javascript language and possibly programming. This set of resources spans learning what Javascript is and how it works in the browser to fundamental concepts of computer programming, computer science, and software engineering. Its best to have a good handle on the basics of HTML and CSS before learning Javascript. Pro tip: If you don't have a sandbox environment to work out of you can get started quickly with any of these Javascript Sandboxes . Or you can build one .","title":"Beginner"},{"location":"dev/learning-js/#getting-started","text":"What is Javascript? - A great overview of the language and how it works with HTML and CSS. What is Javascript? (Video) ECMAScript aka JavaScript","title":"Getting Started"},{"location":"dev/learning-js/#programming-in-general","text":"Kahn Academy - Computer Programming","title":"Programming in General"},{"location":"dev/learning-js/#language","text":"Javascript (Mozilla) W3 Javascript Tutorial How Javascript Works Code Academy - Intro to JavaScript ($) Google Developers Training Javascript Basics: What is Javascript, really? JavaScript building blocks","title":"Language"},{"location":"dev/learning-js/#language-summaries-cheatsheets","text":"Javascript.com by Pluralsignt - A great quick reference of parts of the language. Javascript Basics (P5.js Wiki Reference) - This is a quick-ish overview of the language and how to use it.","title":"Language Summaries / Cheatsheets"},{"location":"dev/learning-js/#dom","text":"Introduction to the DOM What is the DOM? (Video) The HTML DOM DOM Interfaces Core Interfaces in the DOM Document Object Properties and Methods JavaScript DOM Tutorial Series (Video Playlist) - by The Net Ninja JavaScript DOM Tutorial #1 - Introduction Javascript DOM Tutorial #2 - Get Element By ID JavaScript DOM Tutorial #3 - Get Elements By Class or Tag JavaScript DOM Tutorial #4 - The Query Selector JavaScript DOM Tutorial #5 - Changing Text & HTML Content Eloquent Javascript: CH 14 - The Document Object Model","title":"DOM"},{"location":"dev/learning-js/#event-handlers","text":"Global Event Handlers","title":"Event Handlers"},{"location":"dev/learning-js/#books","text":"JavaScript: The Definitive Guide by David Flanagan Professional JavaScript for Web Developers by Nicholas C. Zaka Eloquent Javascript Object-Oriented JavaScript by Stoyan Stefanov and Kumar Chetan Sharma You Don't Know JS - A Github based book series on JavaScript. The Complete JavaScript Handbook Exploring JS: JS books for programmers - A great collection of the latest and greatest books on the language. JSbooks - Huge collection of free books at all skill levels.","title":"Books"},{"location":"dev/learning-js/#jquery","text":"W3 jQuery Tutorial","title":"JQuery"},{"location":"dev/learning-js/#tutorials","text":"Get Started with Debugging JavaScript in Chrome DevTools Vanilla Javascript by Traversy Media Build A Filterable List With Vanilla JavaScript Javascripting (Nodeschool) - Learn JS / Terminal by playing with a node app. You need to know how to use npm and the terminal to run this. freeCodeCamp - Basic Javascript - 10 hrs of tutorials JavaScript Tutorial by Sololearn Javascript.com by Pluralsignt - Check out these short courses for learning specific topics using JS. The Modern JavaScript Tutorial - A great tutorial series that's easy for any beginner to follow. This is a great to place to start if you are new.","title":"Tutorials"},{"location":"dev/learning-js/#articles","text":"Learn to Code: 13 Tips that Could Save You Years of Effort 10 Priceless Resources for JavaScript Learners A Study Plan To Cure JavaScript Fatigue - Thx Karen !","title":"Articles"},{"location":"dev/learning-js/#js-collections","text":"Micro JS - A website with tons of JS libraries. Some big some small.","title":"JS Collections"},{"location":"dev/learning-js/#intermediate","text":"An intermediate Javascript programmer understands parts of Javascript language of syntax (form) and semantics (meaning) and is interested in learning more about design patterns, best practices, libraries, frameworks, and alternative workflows.","title":"Intermediate"},{"location":"dev/learning-js/#language_1","text":"JS the Right Way JavaScript Design Patterns - Free Udacity Course","title":"Language"},{"location":"dev/learning-js/#regular-expressions","text":"Regular Expressions (Mozilla) W3 Regex Reference","title":"Regular Expressions"},{"location":"dev/learning-js/#tutorials_1","text":"RegexOne Tutorials You Should Learn Regular Expressions","title":"Tutorials"},{"location":"dev/learning-js/#regex-sandboxes","text":"Regex 101 Regex Pal Tester Regulex Regexper","title":"Regex Sandboxes"},{"location":"dev/learning-js/#books_1","text":"JavaScript Patterns by Stoyan Stefanov JavaScript Enlightenment: From Library User to JavaScript Developer by Cody Lindley","title":"Books"},{"location":"dev/learning-js/#data-structures-and-algorithms","text":"Data Structures and Algorithms with JavaScript by Michael McMillan Introduction to Algorithms by Thomas H. Cormen et al Coding Math (Youtube Channel)","title":"Data Structures and Algorithms"},{"location":"dev/learning-js/#package-management","text":"What are the best front-end package managers? - February 2018 Guide to JavaScript frontend package managers - November 2015","title":"Package Management"},{"location":"dev/learning-js/#js-uis","text":"ULI dat.gui guigui","title":"JS UIs"},{"location":"dev/learning-js/#tutorials_2","text":"Understanding JavaScript Bind() Arrow Functions","title":"Tutorials"},{"location":"dev/learning-js/#advanced","text":"An advanced Javascript programmer understands how to utilize Javascript to solve technical and creative challenges by using existing tools and designing custom solutions.","title":"Advanced"},{"location":"dev/learning-js/#language_2","text":"Backbone.js Fundamentals JavaScript Garden How to Learn ES6 (ECMAScript 6) ECMAScript","title":"Language"},{"location":"dev/learning-js/#design-patterns","text":"Learning JavaScript Design Patterns Pro JavaScript Design Patterns: The Essentials of Object-Oriented JavaScript Programming by Dustin Diaz and Ross Harmes Design Patterns: Elements of Reusable Object-Oriented Software by Erich Gamma et al Writing Modular JavaScript With AMD, CommonJS & ES Harmony","title":"Design Patterns"},{"location":"dev/learning-js/#working-with-modules","text":"RequireJS RequireJS's relationship to CommonJS Module Best Practices - Writing JS Modules in Node/CommonJS","title":"Working with Modules"},{"location":"dev/learning-js/#application-development","text":"Electron Muon - Similar to Electron but uses Chromium","title":"Application Development"},{"location":"dev/learning-js/#code-poems","text":"A Functional Poem\u200a\u2014\u200aCode that makes sense","title":"Code Poems"},{"location":"dev/learning-node/","text":"This section contains resources for learning how to work with Node.js. Note this is a living document and is constantly being updated. Some things may come and go over time. Beginner Node.js NPM - Node Package Manager (Installed with Node.js) NVM - A tool for managing multiple versions of Node.js (MacOS Only) nvm-windows - Similar to NVM but for Windows Installing Node and NPM Downloading and installing Node.js and npm (As of Fall 2019) Resolving EACCES permissions errors when installing packages globally - This can happen when running a command such as npm install -g live-server . Documentation Node.js Documentation - Your primary reference for the Node.js API Node Modules Node.js URL Module: URL Strings and URL Objects - This has a great diagram showing the URL structure and how to parse it using the Node.js API. This matters for routing a request to the correct destination in your Node server (app). Books The Node Beginner Book Professional Node.js: Building Javascript Based Scalable Software by Pedro Teixera Tutorials Node.js Tutorials Node.js Tutorial in VS Code Nodeschool Workshopper List - These are cool. Short terminal-based interactive tutorials on various topics. Node.js Tutorial - Tutorialspoint tutorials that cover the Node API CSE 398 Node.js Tutorial - Great introductory tutorial using Node API to build up to why it makes sense to eventually use Express (Step 13). Node.js for Beginners npm Tutorials npm Tutorial for Beginners - 2:30 mins npm crash course 1 - 24 mins npm crash course 2 - 42 mins Intermediate Node Frameworks Express Frameworks built on Express KeystoneJS - Node.js CMS & web app platform Templating Pug.js ejs Tutorials MVC How to Build and Structure a Node.js MVC Application - A great tutorial for building a notes board app. This doesn't use Express to build the app, it uses another framework called Hapi.js. Either framework most definitely simplifies the implementation of an app like this. Express Tutorials Express Tutorial - By tutorialspoint Websocket Tutorials Websockets Tutorial - By tutorialspoint Passport.js Tutorials Passport.js - Simple, unobtrusive authentication for Node.js Learn how to handle authentication with Node using Passport.js Easy Node Authentication: Setup and Local Local Authentication Using Passport in Node.js Application Deployment In order to deploy an application on a server out in the world you need to use a host that supports Node.js and how it runs. Node.js apps require a system that allows a Javascript runtime (process) to run all the time using a process management tool like PM2 . This means a \"shared host\" like Bluehost or another service that offers budget shared hosting typically doesn't support running apps like this. Below are some tutorials from hosts that offer these kinds of servers. Another important thing to mention is when you work with hosts like Digital Ocean or Heroku, you typically have to setup and configure the \"server instance\", which means you become the administrator responsible for installing and configuring the operating system (Ubuntu or another form of Linux or Windows) to be a web server. These hosts are providing whats called a \"Virtual Private Server\" aka a VPS with a dedicated IP address which you can think of like a small piece of a much larger server called the \"cloud\". Deploying on Digital Ocean Digital Ocean Tutorial: How To Set Up a Node.js Application for Production on Ubuntu 16.04 Deploying on Heroku Getting Started on Heroku with Node.js - Follow this to go from having no Node app to deploying a Node app. Deploying Node.js Apps on Heroku - This includes all the steps you need to follow to deploy an existing application. Advanced Tutorials Building Command Line Applications Creating Your First Node.js Command-line Application Commander.js Creating Modules (aka npm Packages) Creating Public & Private Node Modules How to Create Node.js Modules Build a Static Site Generator Modules Requiring modules in Node.js: Everything you need to know nodemon Awesome Lists awesome-nodejs","title":"Learning Node.js"},{"location":"dev/learning-node/#beginner","text":"Node.js NPM - Node Package Manager (Installed with Node.js) NVM - A tool for managing multiple versions of Node.js (MacOS Only) nvm-windows - Similar to NVM but for Windows","title":"Beginner"},{"location":"dev/learning-node/#installing-node-and-npm","text":"Downloading and installing Node.js and npm (As of Fall 2019) Resolving EACCES permissions errors when installing packages globally - This can happen when running a command such as npm install -g live-server .","title":"Installing Node and NPM"},{"location":"dev/learning-node/#documentation","text":"Node.js Documentation - Your primary reference for the Node.js API Node Modules Node.js URL Module: URL Strings and URL Objects - This has a great diagram showing the URL structure and how to parse it using the Node.js API. This matters for routing a request to the correct destination in your Node server (app).","title":"Documentation"},{"location":"dev/learning-node/#books","text":"The Node Beginner Book Professional Node.js: Building Javascript Based Scalable Software by Pedro Teixera","title":"Books"},{"location":"dev/learning-node/#tutorials","text":"","title":"Tutorials"},{"location":"dev/learning-node/#nodejs-tutorials","text":"Node.js Tutorial in VS Code Nodeschool Workshopper List - These are cool. Short terminal-based interactive tutorials on various topics. Node.js Tutorial - Tutorialspoint tutorials that cover the Node API CSE 398 Node.js Tutorial - Great introductory tutorial using Node API to build up to why it makes sense to eventually use Express (Step 13). Node.js for Beginners","title":"Node.js Tutorials"},{"location":"dev/learning-node/#npm-tutorials","text":"npm Tutorial for Beginners - 2:30 mins npm crash course 1 - 24 mins npm crash course 2 - 42 mins","title":"npm Tutorials"},{"location":"dev/learning-node/#intermediate","text":"Node Frameworks Express Frameworks built on Express KeystoneJS - Node.js CMS & web app platform","title":"Intermediate"},{"location":"dev/learning-node/#templating","text":"Pug.js ejs","title":"Templating"},{"location":"dev/learning-node/#tutorials_1","text":"","title":"Tutorials"},{"location":"dev/learning-node/#mvc","text":"How to Build and Structure a Node.js MVC Application - A great tutorial for building a notes board app. This doesn't use Express to build the app, it uses another framework called Hapi.js. Either framework most definitely simplifies the implementation of an app like this.","title":"MVC"},{"location":"dev/learning-node/#express-tutorials","text":"Express Tutorial - By tutorialspoint","title":"Express Tutorials"},{"location":"dev/learning-node/#websocket-tutorials","text":"Websockets Tutorial - By tutorialspoint","title":"Websocket Tutorials"},{"location":"dev/learning-node/#passportjs-tutorials","text":"Passport.js - Simple, unobtrusive authentication for Node.js Learn how to handle authentication with Node using Passport.js Easy Node Authentication: Setup and Local Local Authentication Using Passport in Node.js","title":"Passport.js Tutorials"},{"location":"dev/learning-node/#application-deployment","text":"In order to deploy an application on a server out in the world you need to use a host that supports Node.js and how it runs. Node.js apps require a system that allows a Javascript runtime (process) to run all the time using a process management tool like PM2 . This means a \"shared host\" like Bluehost or another service that offers budget shared hosting typically doesn't support running apps like this. Below are some tutorials from hosts that offer these kinds of servers. Another important thing to mention is when you work with hosts like Digital Ocean or Heroku, you typically have to setup and configure the \"server instance\", which means you become the administrator responsible for installing and configuring the operating system (Ubuntu or another form of Linux or Windows) to be a web server. These hosts are providing whats called a \"Virtual Private Server\" aka a VPS with a dedicated IP address which you can think of like a small piece of a much larger server called the \"cloud\". Deploying on Digital Ocean Digital Ocean Tutorial: How To Set Up a Node.js Application for Production on Ubuntu 16.04 Deploying on Heroku Getting Started on Heroku with Node.js - Follow this to go from having no Node app to deploying a Node app. Deploying Node.js Apps on Heroku - This includes all the steps you need to follow to deploy an existing application.","title":"Application Deployment"},{"location":"dev/learning-node/#advanced","text":"","title":"Advanced"},{"location":"dev/learning-node/#tutorials_2","text":"","title":"Tutorials"},{"location":"dev/learning-node/#building-command-line-applications","text":"Creating Your First Node.js Command-line Application Commander.js","title":"Building Command Line Applications"},{"location":"dev/learning-node/#creating-modules-aka-npm-packages","text":"Creating Public & Private Node Modules How to Create Node.js Modules","title":"Creating Modules (aka npm Packages)"},{"location":"dev/learning-node/#build-a-static-site-generator","text":"","title":"Build a Static Site Generator"},{"location":"dev/learning-node/#modules","text":"Requiring modules in Node.js: Everything you need to know nodemon","title":"Modules"},{"location":"dev/learning-node/#awesome-lists","text":"awesome-nodejs","title":"Awesome Lists"},{"location":"dev/learning-p5js/","text":"This section contains resources for learning how to use Javascript framework p5.js . Note this is a living document and is constantly being updated. Some things may come and go over time. Beginner p5.js p5.js web editor A free-to-use classrooms system for p5.js Javascript Basics (P5.js Wiki Reference) Tutorials TBD Courses Introduction to Programming for the Visual Arts with p5.js (Kadenze) Projects TBD","title":"Learning p5.js"},{"location":"dev/learning-p5js/#beginner","text":"p5.js p5.js web editor A free-to-use classrooms system for p5.js Javascript Basics (P5.js Wiki Reference)","title":"Beginner"},{"location":"dev/learning-p5js/#tutorials","text":"TBD","title":"Tutorials"},{"location":"dev/learning-p5js/#courses","text":"Introduction to Programming for the Visual Arts with p5.js (Kadenze)","title":"Courses"},{"location":"dev/learning-p5js/#projects","text":"TBD","title":"Projects"},{"location":"dev/learning-react/","text":"React https://reactjs.org/ React Native http://facebook.github.io/react-native/","title":"Learning react"},{"location":"dev/learning-terminal/","text":"This section contains resources for learning how to use the MacOS Terminal and related Linux Terminals. Note this is a living document and is constantly being updated. Some things may come and go over time. Beginner To see hidden files on your system (Open Terminal and type): To show all files: defaults write com.apple.finder AppleShowAllFiles YES To hide all files: defaults write com.apple.finder AppleShowAllFiles NO Tips: You can drag and drop a folder from the Finder into the Terminal and see the path. This makes it easy to navigate (via cd ) to a folder without typing the whole path in. You want to be aware of file paths and using spaces in file names and directories. Its much easier to always use no spaces. See: Spaces in file and directory names for more info. Command Line Getting to Know the Command Line Codeacademy: Learn the Command Line The Art of the Command Line - Master the command line, in one page. A 64K+ starred repo on github. Worth the time and bookmark. Quick Cheat Sheet Ctrl + U : Clear the current line Ctrl + A ---> Ctrl + K : Move to start of line and clear line Ctrl + C : Cancel the current command Ctrl + Y : Recall the deleted line Ctrl + A : Move to the beginning of the line UNIX / Linux / Terminal Cheat Sheets Command Line Cheat Sheet by git-tower - This one is great! MacOS/Linux/Unix Command Line Cheat Sheet List of Command Line Commands An A-Z Index of the Apple macOS command line (OS X) Basic UNIX Commands UNIX / Linux Cheat Sheet Bash Shell What is the bash shell? bash guide for beginners bash startup files (aka \"dotfiles\" - .bash_profile, .profile, etc) An introduction to Dotfiles: how to take control of your development environment How to make your Dotfile management a painless affair Getting Started with BASH Customizations RJ's Bash Profile Nathaniel Landau's Bash Profile Awesome macOS Command Line - Huge list of macOS actions via command line. 30 Mac Terminal Commands to Access Hidden Features Bash Scripting What is a Bash Script? bash scripting cheatsheet Logical, arithmetical and comparison operators pure bash bible - A collection of pure bash alternatives to external processes. Nathaniel Landau's Bash Scripting Utilities Aliases An Introduction to Useful Bash Aliases and Functions Bash Tweaks (UI, Color, etc) Tutorial: Customize Your Terminal OG Style \u2014 No Libraries or Plugins! FLOZz' MISC \u00bb bash:tip_colors_and_formatting How to Customize the Command Prompt Files Text Editing with vi (vim) VI: What is VI? Ryans tutorials vi tutorial Cheat Sheets Ryans tutorials vi cheat sheet Lagmonster vi cheat sheet Lagmonster advanced vi cheat sheet Permissions chmod Calculator Encoding ASCII / Unicode Table chardet character encoding detector How to auto detect text file encoding? Workflow Enhancements Display directory structure as tree Mac-CLI Intermediate Terminal Emulators MacOS / Linux iTerm2 Hyper Windows cmder ConEmu PowerShell Terminal Multiplexers screen Linux screen Tutorial How to Kill Screen tmux Getting Started A Gentle Introduction to tmux A Tmux Primer A Quick and Easy Guide to tmux The Tao of tmux - Go deep with this ebook. tmux shortcuts & cheatsheet Customizing Tmux Oh My Tmux! My pretty + versatile tmux configuration that just works (imho the best tmux configuration) Making tmux Pretty and Usable - A Guide to Customizing your tmux.conf Tmux Configuration The Definitive Guide to Customizing the Tmux Status Line","title":"Learning Terminal"},{"location":"dev/learning-terminal/#beginner","text":"To see hidden files on your system (Open Terminal and type): To show all files: defaults write com.apple.finder AppleShowAllFiles YES To hide all files: defaults write com.apple.finder AppleShowAllFiles NO Tips: You can drag and drop a folder from the Finder into the Terminal and see the path. This makes it easy to navigate (via cd ) to a folder without typing the whole path in. You want to be aware of file paths and using spaces in file names and directories. Its much easier to always use no spaces. See: Spaces in file and directory names for more info.","title":"Beginner"},{"location":"dev/learning-terminal/#command-line","text":"Getting to Know the Command Line Codeacademy: Learn the Command Line The Art of the Command Line - Master the command line, in one page. A 64K+ starred repo on github. Worth the time and bookmark.","title":"Command Line"},{"location":"dev/learning-terminal/#quick-cheat-sheet","text":"Ctrl + U : Clear the current line Ctrl + A ---> Ctrl + K : Move to start of line and clear line Ctrl + C : Cancel the current command Ctrl + Y : Recall the deleted line Ctrl + A : Move to the beginning of the line","title":"Quick Cheat Sheet"},{"location":"dev/learning-terminal/#unix-linux-terminal-cheat-sheets","text":"Command Line Cheat Sheet by git-tower - This one is great! MacOS/Linux/Unix Command Line Cheat Sheet List of Command Line Commands An A-Z Index of the Apple macOS command line (OS X) Basic UNIX Commands UNIX / Linux Cheat Sheet","title":"UNIX / Linux / Terminal Cheat Sheets"},{"location":"dev/learning-terminal/#bash-shell","text":"What is the bash shell? bash guide for beginners bash startup files (aka \"dotfiles\" - .bash_profile, .profile, etc) An introduction to Dotfiles: how to take control of your development environment How to make your Dotfile management a painless affair Getting Started with BASH","title":"Bash Shell"},{"location":"dev/learning-terminal/#customizations","text":"RJ's Bash Profile Nathaniel Landau's Bash Profile Awesome macOS Command Line - Huge list of macOS actions via command line. 30 Mac Terminal Commands to Access Hidden Features","title":"Customizations"},{"location":"dev/learning-terminal/#bash-scripting","text":"What is a Bash Script? bash scripting cheatsheet Logical, arithmetical and comparison operators pure bash bible - A collection of pure bash alternatives to external processes. Nathaniel Landau's Bash Scripting Utilities","title":"Bash Scripting"},{"location":"dev/learning-terminal/#aliases","text":"An Introduction to Useful Bash Aliases and Functions","title":"Aliases"},{"location":"dev/learning-terminal/#bash-tweaks-ui-color-etc","text":"Tutorial: Customize Your Terminal OG Style \u2014 No Libraries or Plugins! FLOZz' MISC \u00bb bash:tip_colors_and_formatting How to Customize the Command Prompt","title":"Bash Tweaks (UI, Color, etc)"},{"location":"dev/learning-terminal/#files","text":"","title":"Files"},{"location":"dev/learning-terminal/#text-editing-with-vi-vim","text":"VI: What is VI? Ryans tutorials vi tutorial","title":"Text Editing with vi (vim)"},{"location":"dev/learning-terminal/#cheat-sheets","text":"Ryans tutorials vi cheat sheet Lagmonster vi cheat sheet Lagmonster advanced vi cheat sheet","title":"Cheat Sheets"},{"location":"dev/learning-terminal/#permissions","text":"chmod Calculator","title":"Permissions"},{"location":"dev/learning-terminal/#encoding","text":"ASCII / Unicode Table chardet character encoding detector How to auto detect text file encoding?","title":"Encoding"},{"location":"dev/learning-terminal/#workflow-enhancements","text":"Display directory structure as tree Mac-CLI","title":"Workflow Enhancements"},{"location":"dev/learning-terminal/#intermediate","text":"","title":"Intermediate"},{"location":"dev/learning-terminal/#terminal-emulators","text":"","title":"Terminal Emulators"},{"location":"dev/learning-terminal/#macos-linux","text":"iTerm2 Hyper","title":"MacOS / Linux"},{"location":"dev/learning-terminal/#windows","text":"cmder ConEmu PowerShell","title":"Windows"},{"location":"dev/learning-terminal/#terminal-multiplexers","text":"","title":"Terminal Multiplexers"},{"location":"dev/learning-terminal/#screen","text":"Linux screen Tutorial How to Kill Screen","title":"screen"},{"location":"dev/learning-terminal/#tmux","text":"Getting Started A Gentle Introduction to tmux A Tmux Primer A Quick and Easy Guide to tmux The Tao of tmux - Go deep with this ebook. tmux shortcuts & cheatsheet Customizing Tmux Oh My Tmux! My pretty + versatile tmux configuration that just works (imho the best tmux configuration) Making tmux Pretty and Usable - A Guide to Customizing your tmux.conf Tmux Configuration The Definitive Guide to Customizing the Tmux Status Line","title":"tmux"},{"location":"dev/learning-threejs/","text":"This section contains resources for learning how to use Javascript framework three.js . Note this is a living document and is constantly being updated. Some things may come and go over time. Beginner three.js WebGL , Does my browser support WebGL? , WebGL Report Tutorials Learning Three.js Workflow: Animation from Blender to three.js Projects TBD","title":"Learning three.js"},{"location":"dev/learning-threejs/#beginner","text":"three.js WebGL , Does my browser support WebGL? , WebGL Report","title":"Beginner"},{"location":"dev/learning-threejs/#tutorials","text":"Learning Three.js Workflow: Animation from Blender to three.js","title":"Tutorials"},{"location":"dev/learning-threejs/#projects","text":"TBD","title":"Projects"},{"location":"dev/learning-webvr/","text":"This section contains resources for learning how to work with WebVR. Note this is a living document and is constantly being updated. Some things may come and go over time. Beginner WebVR Rocks - WebVR is a JavaScript API for creating immersive 3D, Virtual Reality experiences in your browser.This site shows browser compatibility with different VR hardware. WebVR Info - Another site with examples and information about WebVR. WebVR W3 Spec - This will eventually become WebXR GLTF Frameworks A-Frame WebVR Resources - A-Frame Extras, etc Projects Google WebVR Experiments http://ottifox.com/ Hologram Repositories Sketchfab - 3D model repository Utilities WebVR Assets - Unity to WebVR (Mozilla) UnityAFrameExporter - Not maintained UnitySceneWebExporter - Not maintained 360 Panorama Tools Street View Panorama Street View Download 360","title":"Learning WebVR"},{"location":"dev/learning-webvr/#beginner","text":"WebVR Rocks - WebVR is a JavaScript API for creating immersive 3D, Virtual Reality experiences in your browser.This site shows browser compatibility with different VR hardware. WebVR Info - Another site with examples and information about WebVR. WebVR W3 Spec - This will eventually become WebXR GLTF","title":"Beginner"},{"location":"dev/learning-webvr/#frameworks","text":"A-Frame WebVR Resources - A-Frame Extras, etc","title":"Frameworks"},{"location":"dev/learning-webvr/#projects","text":"Google WebVR Experiments http://ottifox.com/ Hologram","title":"Projects"},{"location":"dev/learning-webvr/#repositories","text":"Sketchfab - 3D model repository","title":"Repositories"},{"location":"dev/learning-webvr/#utilities","text":"WebVR Assets - Unity to WebVR (Mozilla) UnityAFrameExporter - Not maintained UnitySceneWebExporter - Not maintained","title":"Utilities"},{"location":"dev/learning-webvr/#360-panorama-tools","text":"Street View Panorama Street View Download 360","title":"360 Panorama Tools"},{"location":"fab/","text":"Materials, Parts, Suppliers, Fabricators IQS Directory - The ultimate material / parts / suppliers / fab list. McMaster-Carr - TONS OF PARTS! Mesh Tools Meshlab Meshmixer Netfabb 3D File Viewing Sketchfab 3D File Sharing Thingiverse Pinshape Additive(+) 3D Printing Ultimaker 3D Printer , Cura (Slicer) Subtractive(-) CNC Milling Bantam Desktop CNC Mill - Formerly Othermill Bantam Software - Formerly Otherplan","title":"Tools"},{"location":"fab/#materials-parts-suppliers-fabricators","text":"IQS Directory - The ultimate material / parts / suppliers / fab list. McMaster-Carr - TONS OF PARTS!","title":"Materials, Parts, Suppliers, Fabricators"},{"location":"fab/#mesh-tools","text":"Meshlab Meshmixer Netfabb","title":"Mesh Tools"},{"location":"fab/#3d-file-viewing","text":"Sketchfab","title":"3D File Viewing"},{"location":"fab/#3d-file-sharing","text":"Thingiverse Pinshape","title":"3D File Sharing"},{"location":"fab/#additive","text":"","title":"Additive(+)"},{"location":"fab/#3d-printing","text":"Ultimaker 3D Printer , Cura (Slicer)","title":"3D Printing"},{"location":"fab/#subtractive-","text":"","title":"Subtractive(-)"},{"location":"fab/#cnc-milling","text":"Bantam Desktop CNC Mill - Formerly Othermill Bantam Software - Formerly Otherplan","title":"CNC Milling"},{"location":"fab/bantam-cnc-mill/","text":"Bantam CNC Mill Start Here Bantam Mill Support Must Read Getting Started Projects Basic Project Workflow Setting Up Your Material Inserting and Locating a Tool Materials Safety Read Next Speeds and Feeds Fixturing Double Sided Tape - Works great with flat, thin material like circuit boards, thin metal, or plastic pieces. Hot Glue - A bead of hot glue around the edges of larger or rougher materials \u2014 like wood, plastic, and machining wax \u2014 works great. T-Slots - These little slots in the bed can be used to hold material to the bed. For Advanced use. File Types PCB - brd, gtl, gbr, cmp GCODE - nc, gcode, tap SVG Bantam Plan Files - btm Support Documentation File Support G-Code Reference","title":"Bantam CNC Mill"},{"location":"fab/bantam-cnc-mill/#bantam-cnc-mill","text":"","title":"Bantam CNC Mill"},{"location":"fab/bantam-cnc-mill/#start-here","text":"Bantam Mill Support","title":"Start Here"},{"location":"fab/bantam-cnc-mill/#must-read","text":"Getting Started Projects Basic Project Workflow Setting Up Your Material Inserting and Locating a Tool Materials Safety","title":"Must Read"},{"location":"fab/bantam-cnc-mill/#read-next","text":"Speeds and Feeds","title":"Read Next"},{"location":"fab/bantam-cnc-mill/#fixturing","text":"Double Sided Tape - Works great with flat, thin material like circuit boards, thin metal, or plastic pieces. Hot Glue - A bead of hot glue around the edges of larger or rougher materials \u2014 like wood, plastic, and machining wax \u2014 works great. T-Slots - These little slots in the bed can be used to hold material to the bed. For Advanced use.","title":"Fixturing"},{"location":"fab/bantam-cnc-mill/#file-types","text":"PCB - brd, gtl, gbr, cmp GCODE - nc, gcode, tap SVG Bantam Plan Files - btm","title":"File Types"},{"location":"fab/bantam-cnc-mill/#support-documentation","text":"File Support G-Code Reference","title":"Support Documentation"},{"location":"fab/parts/","text":"The ultimate material / parts / suppliers / fab list. http://molded-urethane.com http://air-filters.org http://blowmoldedplastic.com http://customcarryingcases.net http://conveyor-systems.biz http://floor-gratings.com http://foamfabricating.net http://heating-elements.com http://libertygodwin.com http://hawkrents.com http://linear-bearings.net http://load-cells.org http://o-rings.org http://liquidchillers.com http://rollformedparts.com http://rotationallymoldedplastics.com http://paper-tubes.net http://steelservicecenters.com http://sewing-contractors.com http://screw-conveyors.com http://tubefabricatingservices.com http://ball-screws.net http://hingemanufacturers.org http://filteringsystems.com http://rubber-rolls.com http://aluminum-extrusions.net http://ball-valves.net http://bondedtometalrubber.com http://centrifugalpumps.biz http://cnc-machining.biz http://dipmoldedplastics.com http://fractionalhorsepowermotors.com http://hydraulicseals.net http://leak-detectors.net http://liquid-filters.net http://linearslides.net http://plastic-tubing.biz http://plasticfabricator.com http://strengthofnature.com http://steel-plastic-fibre-drums.com http://electronicconnectors.net http://hydraulic-pumps.org http://greatlakeseng.com http://laser-cutting-services.com http://scalemanufacturers.com http://thepieriswedding.com http://strainsense.com http://songlobal.com","title":"Parts"},{"location":"fab/ultimaker-3d-printer/","text":"3D Printing Ultimaker 3","title":"Ultimaker 3D Printer"},{"location":"fab/ultimaker-3d-printer/#3d-printing","text":"Ultimaker 3","title":"3D Printing"},{"location":"fab/vinyl-cutter/","text":"Roland Vinyl Cutter Getting Started Install the Illustrator plugin from Adobe Exchange (You only need to do this once) After installing it will show up under Window > Extensions > Roland CutStudio in Illustrator. Download the Users Manual Choose English > CAMM-1 > GS-24 Read through \"Simple! Basic Cutting\" section of the manual to see how to setup and use. Process Make a 2D design file in Illustrator Define your Artboard size to be the dimensions available within the left and right margins of the rollers. The width will be shown on the vinyl cutter display once you load material. Configure print settings in Window > Extensions > Roland CutStudio Select GX-24 Load material into machine Outline text/shapes Print/Cut!","title":"Roland Vinyl Cutter"},{"location":"fab/vinyl-cutter/#roland-vinyl-cutter","text":"","title":"Roland Vinyl Cutter"},{"location":"fab/vinyl-cutter/#getting-started","text":"Install the Illustrator plugin from Adobe Exchange (You only need to do this once) After installing it will show up under Window > Extensions > Roland CutStudio in Illustrator. Download the Users Manual Choose English > CAMM-1 > GS-24 Read through \"Simple! Basic Cutting\" section of the manual to see how to setup and use. Process Make a 2D design file in Illustrator Define your Artboard size to be the dimensions available within the left and right margins of the rollers. The width will be shown on the vinyl cutter display once you load material. Configure print settings in Window > Extensions > Roland CutStudio Select GX-24 Load material into machine Outline text/shapes Print/Cut!","title":"Getting Started"},{"location":"guides/design-for-3d-printing/","text":"Design for 3D Printing This guide provides a variety of resources for designing for additive manufacturing or 3d printing. Design Process Manufacturing Methods The different types of 3D printing Additive Manufacturing Technologies (Image) Source: 3D Hubs Additive Manufacturing Technologies: An Overview 3D Models Thingiverse Instuctables Thingi10K: A Dataset of 10,000 3D-Printing Models , Website Design Guides The Complete Engineering Guide: 3D Printing by 3D Hubs - This is an outstanding primer on 3D printing. Key design considerations for 3D Printing i.materialise Design Guide Shapeways: Modeling & Design Tips 3D Printing Tutorials How to Design Snap Fit Components How to Choose the Best Fasteners for 3D Printed Parts Adding Screw Threads Formlabs Tutorials - Great design references for SLA printing. Enclosure design for 3D Printing: A step-by-step guide Ultimaker Design guidelines Printing Process Materials What is the best type of plastic for my 3D printing application? Gizmodorks Troubleshooting Simplify3D: Print Quality Troubleshooting Guide Repairing 3D Files With Meshmixer and Netfabb Post Processing Ultimate Guide to Finishing 3D Printed Parts Post processing for FDM printed parts Post processing for SPA printed parts How to spray paint 3d models XTC-3D Epoxy 3D Printing Services Shapeways Sculpteo i.materialise 3D Hubs Fictiv Ponoko Voodoo Manufacturing","title":"Design for 3D Printing"},{"location":"guides/design-for-3d-printing/#design-for-3d-printing","text":"This guide provides a variety of resources for designing for additive manufacturing or 3d printing.","title":"Design for 3D Printing"},{"location":"guides/design-for-3d-printing/#design-process","text":"","title":"Design Process"},{"location":"guides/design-for-3d-printing/#manufacturing-methods","text":"The different types of 3D printing Additive Manufacturing Technologies (Image) Source: 3D Hubs Additive Manufacturing Technologies: An Overview","title":"Manufacturing Methods"},{"location":"guides/design-for-3d-printing/#3d-models","text":"Thingiverse Instuctables Thingi10K: A Dataset of 10,000 3D-Printing Models , Website","title":"3D Models"},{"location":"guides/design-for-3d-printing/#design-guides","text":"The Complete Engineering Guide: 3D Printing by 3D Hubs - This is an outstanding primer on 3D printing. Key design considerations for 3D Printing i.materialise Design Guide Shapeways: Modeling & Design Tips 3D Printing Tutorials How to Design Snap Fit Components How to Choose the Best Fasteners for 3D Printed Parts Adding Screw Threads Formlabs Tutorials - Great design references for SLA printing. Enclosure design for 3D Printing: A step-by-step guide Ultimaker Design guidelines","title":"Design Guides"},{"location":"guides/design-for-3d-printing/#printing-process","text":"","title":"Printing Process"},{"location":"guides/design-for-3d-printing/#materials","text":"What is the best type of plastic for my 3D printing application? Gizmodorks","title":"Materials"},{"location":"guides/design-for-3d-printing/#troubleshooting","text":"Simplify3D: Print Quality Troubleshooting Guide Repairing 3D Files With Meshmixer and Netfabb","title":"Troubleshooting"},{"location":"guides/design-for-3d-printing/#post-processing","text":"Ultimate Guide to Finishing 3D Printed Parts Post processing for FDM printed parts Post processing for SPA printed parts How to spray paint 3d models XTC-3D Epoxy","title":"Post Processing"},{"location":"guides/design-for-3d-printing/#3d-printing-services","text":"Shapeways Sculpteo i.materialise 3D Hubs Fictiv Ponoko Voodoo Manufacturing","title":"3D Printing Services"},{"location":"guides/design-for-cnc-milling/","text":"Design for CNC Milling This guide provides a variety of resources for designing for subtractive manufacturing methods such as CNC milling and CNC routing. Background History of CNC Machining, Part 1: The People, Stories, and Inventions That Made Today\u2019s Tech Possible History of CNC Machining, Part 2: The Evolution from NC to CNC History of CNC Machining, Part 3: From the Factory Floor to the Desktop The Edge Podcast by Bantam Tools Design Process Design Guides The Complete Engineering Guide: CNC Machining by 3D Hubs How to Design For CNC Milling by Adam Bender 3D Manufacturing Services 3D Hubs Fictiv","title":"Design for CNC Milling"},{"location":"guides/design-for-cnc-milling/#design-for-cnc-milling","text":"This guide provides a variety of resources for designing for subtractive manufacturing methods such as CNC milling and CNC routing.","title":"Design for CNC Milling"},{"location":"guides/design-for-cnc-milling/#background","text":"History of CNC Machining, Part 1: The People, Stories, and Inventions That Made Today\u2019s Tech Possible History of CNC Machining, Part 2: The Evolution from NC to CNC History of CNC Machining, Part 3: From the Factory Floor to the Desktop The Edge Podcast by Bantam Tools","title":"Background"},{"location":"guides/design-for-cnc-milling/#design-process","text":"","title":"Design Process"},{"location":"guides/design-for-cnc-milling/#design-guides","text":"The Complete Engineering Guide: CNC Machining by 3D Hubs How to Design For CNC Milling by Adam Bender","title":"Design Guides"},{"location":"guides/design-for-cnc-milling/#3d-manufacturing-services","text":"3D Hubs Fictiv","title":"3D Manufacturing Services"},{"location":"guides/final-projects/","text":"Final Projects Final Project Proposal Submit a proposal for a final project you intend to develop for the course. Use the development of this proposal as an opportunity to ask questions about any subject matter you learned about in class and are interested in becoming more skilled with and/or knowledgeable in. Your proposal should be formatted as a blog post on your critical making blog with all supporting media contained within the post. Deliverable: A new or updated proposal posted to your blog. It should include the following: Project Title Project Members ~ 2-3 max Who is working on the project? What will each person contribute to the group? Project Summary ~ 1 page max What is it? What's it's purpose? What problem(s) are you solving? What will it do? How will it work? What challenges do you anticipate? In what ways does it or will it relate to your other work in Entrepreneurial Design, Design Leadership, and/or UX? Key components of your project What resources, skills, and technologies are needed to realize it? What kind of fidelity do you want to achieve? What \"materials\" do you need to use? Wood, Metal, Plastics, 3d models, CAD, 3d Printing, Electronics, Arduino, Sensors/Devices, Processing, CNC Milling, Mobile Devices, VR Equipment, etc What research have you done and/or still need to do? Milestones you have hit thus far and what you plan to do in order to realize it in the next 3-4 weeks. If you need to order parts and supplies, what do you need? What questions do you have? Where do you feel you are lacking in skill and need assistance? Final Project The final project produced will be presented in the final week of class. Documentation is to be submitted the form of a blog post with all supporting media necessary to explain the project development and outcomes. The general criteria outlined above applies to this final post. I highly suggest preparing a presentation of some kind (slides, video, experience, demonstration, exhibition). Be sure to include links to past blog posts and any resources used in the process. What problem did you set out to solve? What is your project all about? How did you accomplish your goals? What resources did you make use of? What challenges did you encounter and how did you overcome them? What worked? What didn't? If this is a part of a larger long-term project, what milestones did you hit? What's next for this project? (Future Work) What are your major takeaways? What did you learn / discover?","title":"Final Projects"},{"location":"guides/final-projects/#final-projects","text":"","title":"Final Projects"},{"location":"guides/final-projects/#final-project-proposal","text":"Submit a proposal for a final project you intend to develop for the course. Use the development of this proposal as an opportunity to ask questions about any subject matter you learned about in class and are interested in becoming more skilled with and/or knowledgeable in. Your proposal should be formatted as a blog post on your critical making blog with all supporting media contained within the post. Deliverable: A new or updated proposal posted to your blog. It should include the following: Project Title Project Members ~ 2-3 max Who is working on the project? What will each person contribute to the group? Project Summary ~ 1 page max What is it? What's it's purpose? What problem(s) are you solving? What will it do? How will it work? What challenges do you anticipate? In what ways does it or will it relate to your other work in Entrepreneurial Design, Design Leadership, and/or UX? Key components of your project What resources, skills, and technologies are needed to realize it? What kind of fidelity do you want to achieve? What \"materials\" do you need to use? Wood, Metal, Plastics, 3d models, CAD, 3d Printing, Electronics, Arduino, Sensors/Devices, Processing, CNC Milling, Mobile Devices, VR Equipment, etc What research have you done and/or still need to do? Milestones you have hit thus far and what you plan to do in order to realize it in the next 3-4 weeks. If you need to order parts and supplies, what do you need? What questions do you have? Where do you feel you are lacking in skill and need assistance?","title":"Final Project Proposal"},{"location":"guides/final-projects/#final-project","text":"The final project produced will be presented in the final week of class. Documentation is to be submitted the form of a blog post with all supporting media necessary to explain the project development and outcomes. The general criteria outlined above applies to this final post. I highly suggest preparing a presentation of some kind (slides, video, experience, demonstration, exhibition). Be sure to include links to past blog posts and any resources used in the process. What problem did you set out to solve? What is your project all about? How did you accomplish your goals? What resources did you make use of? What challenges did you encounter and how did you overcome them? What worked? What didn't? If this is a part of a larger long-term project, what milestones did you hit? What's next for this project? (Future Work) What are your major takeaways? What did you learn / discover?","title":"Final Project"},{"location":"guides/imd-setup-guide/","text":"Immersive Media Design Setup Guide This guide covers setting up your computer for Immersive Media Design. In this course you are free to use any kind of computer and operating system you wish as along as it can run the software listed. The course will make use of both Windows 10 and macOS based systems as both are commonly used for VR and AR development workflows. Hardware A recent Apple Macbook (2013 and newer) with macOS Mojave (10.14) or Catalina (10.15) or a Windows 10 based system. At least 30 - 50 GB extra hard drive space to install software and work. At least 1 TB external / portable hard drive to move files around and between computers as needed. (Optional) A recent mobile device supporting AR Kit 3 (devices with A12+ chip running iOS 13) or ARCore (devices running Android 7.0) for mobile AR development. Learn more about AR supporting devices: ARKit Devices and ARCore Devices . Software IMD will make use of various types of design and engineering software. Some tools are essential and required to complete a task such as getting a VR or AR experience working while other tools are based on personal preference and workflow. It is assumed that most students are using macOS, therefore the course will focus mostly there. Access to the following software is recommended. Required Software Adobe Creative Cloud Unity 2019.2 ( Installed with Unity Hub ) - Download Unity Hub and install Unity 2019.2. Xcode 11 (macOS only) - Developer account required to access Apple dev resources. You can download from App Store as well. Visual Studio Community 2019 for Mac or Visual Studio 2019 Community for Windows Visual Studio Code (aka VSCode) Cinema4D for Students - Create account and follow instructions to obtain 6 month educational license. Adobe Aero (iOS App) - Free from the App Store. Additional Software Steam SteamVR Processing Blender Touch Designer Adobe Mixamo Adobe Fuse Adobe Dimension Autodesk Maya Autodesk Mudbox ZBrush Substance Suite Autodesk Fusion 360 McNeel Rhinoceros Meshlab Meshmixer Structure Sensor (iOS App) Lens Studio by Snapchat Spark AR Studio by Facebook/Instagram Magica Voxel - 8-bit voxel art editor Learning Resources Unity learn.unity.com Unity Manual Unity Editor Tutorial Fundamentals by Dilmer Valecillos - A great playlist of tutorials for learning about different parts of the Unity environment. AR Foundation AR Foundation AR Foundation Overview , Video AR Foundation Samples Learn Unity's AR Foundation - Great overview video of AR Foundation. Cinema 4D Getting Started with Cinema 4D A great example based introduction to working in C4D. Each video in the series is between 10-30 mins and there are 20 videos. Greyscale Gorilla: Introduction to Cinema 4D Email address signup to gain access to assets and tutorials. The version shown is R14 which is a little outdated but still useful for learning the basics. Videos are between 10 mins and 30 mins long. The first video is about 1 hr long and covers the whole process of modeling, lighting, texturing, animating, and rendering a scene. Introduction to Cinema 4D Part of the LinkedIn Learning Course Introduction to 3D Covers the basics of working in C4D Apple Apple Developer: XCode - Login Required Human Interface Guidelines: Augmented Reality Google ARCore Docs ARCore Design Guidelines Google Augmented Reality Design Guidelines (GARDG) C# (C Sharp) Visual Studio Tutorials | C# C# Documentation Learn C# W3Schools C# Tutorial (C Sharp) The C# Players Guide Book (pdf)","title":"IMD Setup Guide"},{"location":"guides/imd-setup-guide/#immersive-media-design-setup-guide","text":"This guide covers setting up your computer for Immersive Media Design. In this course you are free to use any kind of computer and operating system you wish as along as it can run the software listed. The course will make use of both Windows 10 and macOS based systems as both are commonly used for VR and AR development workflows.","title":"Immersive Media Design Setup Guide"},{"location":"guides/imd-setup-guide/#hardware","text":"A recent Apple Macbook (2013 and newer) with macOS Mojave (10.14) or Catalina (10.15) or a Windows 10 based system. At least 30 - 50 GB extra hard drive space to install software and work. At least 1 TB external / portable hard drive to move files around and between computers as needed. (Optional) A recent mobile device supporting AR Kit 3 (devices with A12+ chip running iOS 13) or ARCore (devices running Android 7.0) for mobile AR development. Learn more about AR supporting devices: ARKit Devices and ARCore Devices .","title":"Hardware"},{"location":"guides/imd-setup-guide/#software","text":"IMD will make use of various types of design and engineering software. Some tools are essential and required to complete a task such as getting a VR or AR experience working while other tools are based on personal preference and workflow. It is assumed that most students are using macOS, therefore the course will focus mostly there. Access to the following software is recommended.","title":"Software"},{"location":"guides/imd-setup-guide/#required-software","text":"Adobe Creative Cloud Unity 2019.2 ( Installed with Unity Hub ) - Download Unity Hub and install Unity 2019.2. Xcode 11 (macOS only) - Developer account required to access Apple dev resources. You can download from App Store as well. Visual Studio Community 2019 for Mac or Visual Studio 2019 Community for Windows Visual Studio Code (aka VSCode) Cinema4D for Students - Create account and follow instructions to obtain 6 month educational license. Adobe Aero (iOS App) - Free from the App Store.","title":"Required Software"},{"location":"guides/imd-setup-guide/#additional-software","text":"Steam SteamVR Processing Blender Touch Designer Adobe Mixamo Adobe Fuse Adobe Dimension Autodesk Maya Autodesk Mudbox ZBrush Substance Suite Autodesk Fusion 360 McNeel Rhinoceros Meshlab Meshmixer Structure Sensor (iOS App) Lens Studio by Snapchat Spark AR Studio by Facebook/Instagram Magica Voxel - 8-bit voxel art editor","title":"Additional Software"},{"location":"guides/imd-setup-guide/#learning-resources","text":"","title":"Learning Resources"},{"location":"guides/imd-setup-guide/#unity","text":"learn.unity.com Unity Manual Unity Editor Tutorial Fundamentals by Dilmer Valecillos - A great playlist of tutorials for learning about different parts of the Unity environment.","title":"Unity"},{"location":"guides/imd-setup-guide/#ar-foundation","text":"AR Foundation AR Foundation Overview , Video AR Foundation Samples Learn Unity's AR Foundation - Great overview video of AR Foundation.","title":"AR Foundation"},{"location":"guides/imd-setup-guide/#cinema-4d","text":"Getting Started with Cinema 4D A great example based introduction to working in C4D. Each video in the series is between 10-30 mins and there are 20 videos. Greyscale Gorilla: Introduction to Cinema 4D Email address signup to gain access to assets and tutorials. The version shown is R14 which is a little outdated but still useful for learning the basics. Videos are between 10 mins and 30 mins long. The first video is about 1 hr long and covers the whole process of modeling, lighting, texturing, animating, and rendering a scene. Introduction to Cinema 4D Part of the LinkedIn Learning Course Introduction to 3D Covers the basics of working in C4D","title":"Cinema 4D"},{"location":"guides/imd-setup-guide/#apple","text":"Apple Developer: XCode - Login Required Human Interface Guidelines: Augmented Reality","title":"Apple"},{"location":"guides/imd-setup-guide/#google","text":"ARCore Docs ARCore Design Guidelines Google Augmented Reality Design Guidelines (GARDG)","title":"Google"},{"location":"guides/imd-setup-guide/#c-c-sharp","text":"Visual Studio Tutorials | C# C# Documentation Learn C# W3Schools C# Tutorial (C Sharp) The C# Players Guide Book (pdf)","title":"C# (C Sharp)"},{"location":"guides/making-animated-gifs/","text":"Making Animated Gifs This guide demonstrates a few ways to make animated GIFs from generated content or by extracting frames from existing content. What is a GIF? At a basic level, a GIF is an animated image made up of a series of images or frames of a video. It's typically very small in size, which means the quality is far less than standard or high definition video and often appears a bit grainy if highly compressed. They are useful for sharing bite-size bundles of visual content. For instance, say you are trying to share a visual concept or UI design as a series of short animations. The most compact and way to do this is to generate GIFs vs using a high-res movie file. Many times, the same meaning can be conveyed in short simple bits of content. Tools for Capturing Images and Video macOS Screenshot Utilities CMD + Shift + 3 = Capture all screens CMD + Shift + 4, Define capture area CMD + Shift + 4 > SPACEBAR to select window CMD + Shift + 5 = All capture options including video capture Tools for Making Gifs Software Gif Brewery 3 - macOS LICEcap - macOS / Win Web Based Convert to GIF - This tool will convert almost any file format to a gif. ezgif - Simple GIF maker Giphy - Generates and hosts gifs for the web GIFMaker.me Other Tools Instasave - Simple tool for saving images and videos from Instagram posts and stories.","title":"Making Animated Gifs"},{"location":"guides/making-animated-gifs/#making-animated-gifs","text":"This guide demonstrates a few ways to make animated GIFs from generated content or by extracting frames from existing content. What is a GIF? At a basic level, a GIF is an animated image made up of a series of images or frames of a video. It's typically very small in size, which means the quality is far less than standard or high definition video and often appears a bit grainy if highly compressed. They are useful for sharing bite-size bundles of visual content. For instance, say you are trying to share a visual concept or UI design as a series of short animations. The most compact and way to do this is to generate GIFs vs using a high-res movie file. Many times, the same meaning can be conveyed in short simple bits of content.","title":"Making Animated Gifs"},{"location":"guides/making-animated-gifs/#tools-for-capturing-images-and-video","text":"macOS Screenshot Utilities CMD + Shift + 3 = Capture all screens CMD + Shift + 4, Define capture area CMD + Shift + 4 > SPACEBAR to select window CMD + Shift + 5 = All capture options including video capture","title":"Tools for Capturing Images and Video"},{"location":"guides/making-animated-gifs/#tools-for-making-gifs","text":"Software Gif Brewery 3 - macOS LICEcap - macOS / Win Web Based Convert to GIF - This tool will convert almost any file format to a gif. ezgif - Simple GIF maker Giphy - Generates and hosts gifs for the web GIFMaker.me","title":"Tools for Making Gifs"},{"location":"guides/making-animated-gifs/#other-tools","text":"Instasave - Simple tool for saving images and videos from Instagram posts and stories.","title":"Other Tools"},{"location":"guides/mobile-screen-capture/","text":"Mobile Screen Capture This guide demonstrates how to capture images and record video from your iOS mobile device. Taking Screenshots By pressing the Home button and Power button you can quickly capture a screenshot on any iOS device. The image shows up in your Photos app. Record Video on Device Add screen record button to Control Center (Shown when you swipe up). Settings > Control Center > Customize Controls Include Screen Recording in the list Press record and wait for the 3 sec countdown to begin Interact with device and press stop when done The video will be saved as an MP4 in your Photos. You can Edit (trim) video before or after transfering to your computer. Transfer your video via USB, iCloud, Dropbox, etc to a computer as needed. Record Video While Tethered to Computer Connect mobile device running iOS to computer via USB Lightning Cable. Launch QuickTime Player Choose File > New Movie Recording Click the small arrow next to the record button and choose Camera and Microphone to be your device. You may need to unlock your device before the screen shows up. If your camera or microphone doesn't show up, you may need to goto Security & Privacy in System Preferences and enable Microphone access for QuickTime Player as shown here . Press red/grey record button to begin video capture. Adjust volume as needed. Note some applications, such as Music, don't send audio. Save MOV file. You can convert any kind of video file to gif as shown below using a tool shown in Making Animated Gifs . This workflow is useful for documenting and sharing mobile based projects and experiments.","title":"Mobile Screen Capture"},{"location":"guides/mobile-screen-capture/#mobile-screen-capture","text":"This guide demonstrates how to capture images and record video from your iOS mobile device.","title":"Mobile Screen Capture"},{"location":"guides/mobile-screen-capture/#taking-screenshots","text":"By pressing the Home button and Power button you can quickly capture a screenshot on any iOS device. The image shows up in your Photos app.","title":"Taking Screenshots"},{"location":"guides/mobile-screen-capture/#record-video-on-device","text":"Add screen record button to Control Center (Shown when you swipe up). Settings > Control Center > Customize Controls Include Screen Recording in the list Press record and wait for the 3 sec countdown to begin Interact with device and press stop when done The video will be saved as an MP4 in your Photos. You can Edit (trim) video before or after transfering to your computer. Transfer your video via USB, iCloud, Dropbox, etc to a computer as needed.","title":"Record Video on Device"},{"location":"guides/mobile-screen-capture/#record-video-while-tethered-to-computer","text":"Connect mobile device running iOS to computer via USB Lightning Cable. Launch QuickTime Player Choose File > New Movie Recording Click the small arrow next to the record button and choose Camera and Microphone to be your device. You may need to unlock your device before the screen shows up. If your camera or microphone doesn't show up, you may need to goto Security & Privacy in System Preferences and enable Microphone access for QuickTime Player as shown here . Press red/grey record button to begin video capture. Adjust volume as needed. Note some applications, such as Music, don't send audio. Save MOV file. You can convert any kind of video file to gif as shown below using a tool shown in Making Animated Gifs . This workflow is useful for documenting and sharing mobile based projects and experiments.","title":"Record Video While Tethered to Computer"},{"location":"guides/ppd-setup-guide/","text":"Parametric Product Design Setup Guide This guide covers setting up your computer for this class. In this course you are free to use any kind of computer and operating system you wish as along as it can run the software listed. The course will be taught using the macOS based version of Rhino and Grasshopper. Currently, Rhino and Grasshopper for Windows is still an industry standard tool and many plugins only work on Windows. I don't anticipate needing many specialized plugins that are not yet macOS compatible but there are always exceptions. Hardware A recent Apple Macbook (2013 and newer) with macOS Mojave (10.14) or Catalina (10.15) or a Windows 10 based system. At least 30 - 50 GB extra hard drive space to install software and work. At least 1 TB external / portable hard drive or USB drives to move files around and between computers as needed. Software This class will mainly use Rhino and Grasshopper but may end up using other types of design and engineering software. Some tools are essential and required to complete a task while other tools are based on personal preference and workflow. Access to the following software is recommended. Required Software McNeel Rhinoceros 6 - Educational licenses available at CU Bookstore. Adobe Creative Cloud Formlabs Preform - Formlabs slicer Markforged - eiger.io is the cloud based slicer/print controller for Markforged machines. Bantam Tools - Controller for Bantam Desktop CNC Machine Ultimaker Cura - Ultimaker slicer Autodesk Fusion 360 - Useful for both CAD and CAM workflows. Additional Software Night Owl - Nice free utility to manage which apps are in light or dark mode. f.lux - A utility that gives you control of your screen temp. Visual Studio Community 2019 for Mac or Visual Studio 2019 Community for Windows Visual Studio Code (aka VSCode) Unity 2019.2 ( Installed with Unity Hub ) Xcode 11 (macOS only) Processing Blender Adobe Dimension Autodesk Maya Autodesk Mudbox ZBrush Substance Suite Meshlab Meshmixer Voxelizer Learning Resources Rhino Rhino for Mac - Good list of topics to better understand similarities and differences between Mac and Windows Rhino versions. Rhino for Mac Forum Rhino for Mac Users Guide Learning Rhino for Mac - Linkedin Learning Course on Rhino 5 for Mac Rhino 6 Command Quick Reference Rhino 6 for Windows commands not in Rhino 6 for Mac Grasshopper Grasshopper Components Reference The Grasshopper Primer - It's a little dated and doesn't cover Rhino / Grasshopper for Mac. The concepts all still apply though. AAD Algorithms-Aided Design: Parametric Strategies using Grasshopper by Arturo Tedeschi - A good book from 2014 that covers how to use algorithms for designing parametric systems. Visual Programming in Rhino3D with Grasshopper by Luis E. Fraguada - This is a great intro and overview of Grasshopper. About 1/2 of the content is similar to what you get from the Grasshopper Primer. Essential Algorithms and Data Structures - A brand new free book from McNeel that introduces Computational Design in Grasshopper. Parametric House - A website with many tutorials covering a variety of topics in parametric design. Most of these tutorials are technique or case study oriented and typically work with a set of built in or library based components. Explode Breps @ UVA - A collection of definitions spanning various techniques used in architectural design. Nature of Code for Python in Grasshopper - A list of tutorials showing implementations of Nature of Code algorithms in Grasshopper with Python. Parametric Design Elements of Parametric Design - A foundational book covering the parametric design field and applications. Math & Geometry Essential Mathematics for Computational Design Computers & Code Code: The Hidden Language of Computer Hardware and Software Creative Coding Learning Processing Processing: A Programming Handbook for Visual Designers and Artists The Nature of Code: Simulating Natural Systems with Processing Generative Gestaltung The Coding Train Programming It's not critical to understand C# or Python to use Grasshopper. It does however offer advantages for designing new functionality through built-in code based scripting components (GHPython Script, C# Script) and through developing custom components (plugins). C# (C Sharp) Visual Studio Tutorials | C# C# Documentation Learn C# W3Schools C# Tutorial (C Sharp) The C# Players Guide Book (pdf)","title":"PPD Setup Guide"},{"location":"guides/ppd-setup-guide/#parametric-product-design-setup-guide","text":"This guide covers setting up your computer for this class. In this course you are free to use any kind of computer and operating system you wish as along as it can run the software listed. The course will be taught using the macOS based version of Rhino and Grasshopper. Currently, Rhino and Grasshopper for Windows is still an industry standard tool and many plugins only work on Windows. I don't anticipate needing many specialized plugins that are not yet macOS compatible but there are always exceptions.","title":"Parametric Product Design Setup Guide"},{"location":"guides/ppd-setup-guide/#hardware","text":"A recent Apple Macbook (2013 and newer) with macOS Mojave (10.14) or Catalina (10.15) or a Windows 10 based system. At least 30 - 50 GB extra hard drive space to install software and work. At least 1 TB external / portable hard drive or USB drives to move files around and between computers as needed.","title":"Hardware"},{"location":"guides/ppd-setup-guide/#software","text":"This class will mainly use Rhino and Grasshopper but may end up using other types of design and engineering software. Some tools are essential and required to complete a task while other tools are based on personal preference and workflow. Access to the following software is recommended.","title":"Software"},{"location":"guides/ppd-setup-guide/#required-software","text":"McNeel Rhinoceros 6 - Educational licenses available at CU Bookstore. Adobe Creative Cloud Formlabs Preform - Formlabs slicer Markforged - eiger.io is the cloud based slicer/print controller for Markforged machines. Bantam Tools - Controller for Bantam Desktop CNC Machine Ultimaker Cura - Ultimaker slicer Autodesk Fusion 360 - Useful for both CAD and CAM workflows.","title":"Required Software"},{"location":"guides/ppd-setup-guide/#additional-software","text":"Night Owl - Nice free utility to manage which apps are in light or dark mode. f.lux - A utility that gives you control of your screen temp. Visual Studio Community 2019 for Mac or Visual Studio 2019 Community for Windows Visual Studio Code (aka VSCode) Unity 2019.2 ( Installed with Unity Hub ) Xcode 11 (macOS only) Processing Blender Adobe Dimension Autodesk Maya Autodesk Mudbox ZBrush Substance Suite Meshlab Meshmixer Voxelizer","title":"Additional Software"},{"location":"guides/ppd-setup-guide/#learning-resources","text":"","title":"Learning Resources"},{"location":"guides/ppd-setup-guide/#rhino","text":"Rhino for Mac - Good list of topics to better understand similarities and differences between Mac and Windows Rhino versions. Rhino for Mac Forum Rhino for Mac Users Guide Learning Rhino for Mac - Linkedin Learning Course on Rhino 5 for Mac Rhino 6 Command Quick Reference Rhino 6 for Windows commands not in Rhino 6 for Mac","title":"Rhino"},{"location":"guides/ppd-setup-guide/#grasshopper","text":"Grasshopper Components Reference The Grasshopper Primer - It's a little dated and doesn't cover Rhino / Grasshopper for Mac. The concepts all still apply though. AAD Algorithms-Aided Design: Parametric Strategies using Grasshopper by Arturo Tedeschi - A good book from 2014 that covers how to use algorithms for designing parametric systems. Visual Programming in Rhino3D with Grasshopper by Luis E. Fraguada - This is a great intro and overview of Grasshopper. About 1/2 of the content is similar to what you get from the Grasshopper Primer. Essential Algorithms and Data Structures - A brand new free book from McNeel that introduces Computational Design in Grasshopper. Parametric House - A website with many tutorials covering a variety of topics in parametric design. Most of these tutorials are technique or case study oriented and typically work with a set of built in or library based components. Explode Breps @ UVA - A collection of definitions spanning various techniques used in architectural design. Nature of Code for Python in Grasshopper - A list of tutorials showing implementations of Nature of Code algorithms in Grasshopper with Python.","title":"Grasshopper"},{"location":"guides/ppd-setup-guide/#parametric-design","text":"Elements of Parametric Design - A foundational book covering the parametric design field and applications.","title":"Parametric Design"},{"location":"guides/ppd-setup-guide/#math-geometry","text":"Essential Mathematics for Computational Design","title":"Math &amp; Geometry"},{"location":"guides/ppd-setup-guide/#computers-code","text":"Code: The Hidden Language of Computer Hardware and Software","title":"Computers &amp; Code"},{"location":"guides/ppd-setup-guide/#creative-coding","text":"Learning Processing Processing: A Programming Handbook for Visual Designers and Artists The Nature of Code: Simulating Natural Systems with Processing Generative Gestaltung The Coding Train","title":"Creative Coding"},{"location":"guides/ppd-setup-guide/#programming","text":"It's not critical to understand C# or Python to use Grasshopper. It does however offer advantages for designing new functionality through built-in code based scripting components (GHPython Script, C# Script) and through developing custom components (plugins).","title":"Programming"},{"location":"guides/ppd-setup-guide/#c-c-sharp","text":"Visual Studio Tutorials | C# C# Documentation Learn C# W3Schools C# Tutorial (C Sharp) The C# Players Guide Book (pdf)","title":"C# (C Sharp)"},{"location":"guides/writing-blog-posts/","text":"Writing Blog Posts This guide is to help you write blog posts with the purpose of documenting your work done in CM Studio courses. Getting Started Before you can write blog posts you need a place to put the blog posts you write. Most students in the program choose to use Medium because other courses make use of it for assignments, but you can use any platform you wish. Take a look at some alternatives under Blogs, Wikis, and Content Management Systems (CMS) if you would like to use another tool. Once you have a blog, you are ready to write posts. You can follow the criteria below and customize for any deliverable. What's in a post? A title that clearly describes the subject matter. It is recommended that a post includes a variety of media and content to support the subject matter. For example: text, images, video, graphics, photos, mockups, screen captures, tutorials, 3d model viewers (sketchfab), sketches, code, gifs, references, etc. Anything that is required to effectively communicate the details of a project, process, prototype, or idea. The subject matter is in response to the topics of the week. Ideally, it falls in line with your interests, research area, project, creative process, etc. For example, you might consider doing a series of tutorials on a topic that interests you or a process/workflow you are currently exploring through the course. Posts should be written to the best of your abilities and for a public audience. The post and any accompanying visual content (images, video) may be shared on social media.","title":"Writing Blog Posts"},{"location":"guides/writing-blog-posts/#writing-blog-posts","text":"This guide is to help you write blog posts with the purpose of documenting your work done in CM Studio courses.","title":"Writing Blog Posts"},{"location":"guides/writing-blog-posts/#getting-started","text":"Before you can write blog posts you need a place to put the blog posts you write. Most students in the program choose to use Medium because other courses make use of it for assignments, but you can use any platform you wish. Take a look at some alternatives under Blogs, Wikis, and Content Management Systems (CMS) if you would like to use another tool. Once you have a blog, you are ready to write posts. You can follow the criteria below and customize for any deliverable.","title":"Getting Started"},{"location":"guides/writing-blog-posts/#whats-in-a-post","text":"A title that clearly describes the subject matter. It is recommended that a post includes a variety of media and content to support the subject matter. For example: text, images, video, graphics, photos, mockups, screen captures, tutorials, 3d model viewers (sketchfab), sketches, code, gifs, references, etc. Anything that is required to effectively communicate the details of a project, process, prototype, or idea. The subject matter is in response to the topics of the week. Ideally, it falls in line with your interests, research area, project, creative process, etc. For example, you might consider doing a series of tutorials on a topic that interests you or a process/workflow you are currently exploring through the course. Posts should be written to the best of your abilities and for a public audience. The post and any accompanying visual content (images, video) may be shared on social media.","title":"What's in a post?"},{"location":"imd/imd-looking-outwards/","text":"Looking Outwards [0]: The XR Landscape Technology & The Sacred Space: Exploring Contemporary Religious Experiences by Gia Almuaili Reality, But Make It Virtual by Caro Beresford-Wood Immersive Design: AR / VR by Yeon Choi Cool Tech is Cool by Steven Douglas IMD_AR Game by Min Kim Augmented Reality\u2014The Future Is Digital(ish) by Megan Kwiatkowski Scratching the Surface of VR by Nick Lunt AR/VR Journalism by Derek Palmer History in Augmented Reality by Tess Stevens VR in Traditional Education by Nicole Tang The XR Landscape by Yangmin Zhang Looking Outwards [1]: Motion Design Cinema 4D & The Octane Render by Gia Almuaili Admiring Motion Design by Caro Beresford-Wood Inspiring Motion designs/ers by Yeon Choi Cool Motion Graphics are Cool by Steven Douglas Motion design inspiration by Min Kim Looking Outwards 1 \u2014 Motion Design by Megan Kwiatkowski A Quick Look at the Motion in Motion Design by Nick Lunt Motion and Attention by Derek Palmer Motion Design by Tess Stevens Storytelling In Motion Design by Nicole Tang Motion Design Exploration by Yangmin Zhang Looking Outwards [2]: Report on XR Assets Unity-Built Apps & Video Games by Gia Almuaili The Wondrous Worlds of Cinema 4D and Unity by Caro Beresford-Wood CM: Report on XR assets by Yeon Choi Cool AR Stuff is Cool by Steven Douglas Intro to AR Game by Min Kim Looking Outwards 2 \u2014 Rick&Morty Meet Virtual Reality by Megan Kwiatkowski Bone Breaking VR Physics and Beautifully Animated Graphics by Nick Lunt Looking Outwards 2: Wrapping And Fixing XR Assets by Derek Palmer XR Asset Creation Experiments by Tess Stevens Continue Exploration for VR & AR by Yangmin Zhang Project #1: Asset Creation & Visualization Asset Creation & Visualization: Cartoons & Assets by Gia Almuaili Cinema4D, Torch AR, and a Whole Lot of Troubleshooting by Caro Beresford-Wood CM: Project 1 \u2014 C4D Low Poly by Yeon Choi Dealing with Trauma via Interactive AR Storytelling by Steven Douglas Project 1 \u2014 Asset Creation & Visualization by Megan Kwiatkowski I Made Some 3D Model Monstrosities in Blender by Nick Lunt IMD Project 1: AR Perspectives and Narrative by Derek Palmer Dancing Aliens, etc. C4D, Make Human, and Mixamo by Tess Stevens My Unity World by Nicole Tang Looking Outwards [3]: Identifying Functionality in Scripts Trying to Animate in Unity by Gia Almuaili Exploring Scripts in Unity by Caro Beresford-Wood C# is Cool by Steven Douglas Scripting Rotation in Unity by Derek Palmer Identifying Functionality in Scripts by Tess Stevens Little Game in Unity by Yangmin Zhang Looking Outwards [4]: Understanding AR Foundation Design Opportunities for AR by Gia Almuaili The Wondrous World of AR Foundation by Caro Beresford-Wood CM: AR Foundation and design opportunities by Yeon Choi AR Foundation is Cool by Steven Douglas Unity's AR Foundation by Min Kim AR is Hecking Awesome by Nick Lunt AR Foundation and Social Games by Derek Palmer Investigating AR Foundation by Tess Stevens Project #2: Build a Unity Based Mobile App Unity & Xcode by Gia Almuaili CM: Project 2 Unity & AR by Yeon Choi Master Chief and Some Text by Steven Douglas IMD Project 2: Accelerometer Ergonomics (Float-a-Ball) by Derek Palmer Building a Unity Mobile App by Tess Stevens Looking Outwards [5]: UI and UX for XR Research: UI & UX for XR by Gia Almuaili UI and UX in XR by Caro Beresford-Wood CM: UI UX and XR by Yeon Choi UI, UX, VR, AR by Steven Douglas The User Experience of XR - Designing For Empathy by Megan Kwiatkowski IMD: Multi-user Contextual AR Design by Derek Palmer UX and UI for XR by Tess Stevens","title":"Imd looking outwards"},{"location":"imd/imd-looking-outwards/#looking-outwards-0-the-xr-landscape","text":"Technology & The Sacred Space: Exploring Contemporary Religious Experiences by Gia Almuaili Reality, But Make It Virtual by Caro Beresford-Wood Immersive Design: AR / VR by Yeon Choi Cool Tech is Cool by Steven Douglas IMD_AR Game by Min Kim Augmented Reality\u2014The Future Is Digital(ish) by Megan Kwiatkowski Scratching the Surface of VR by Nick Lunt AR/VR Journalism by Derek Palmer History in Augmented Reality by Tess Stevens VR in Traditional Education by Nicole Tang The XR Landscape by Yangmin Zhang","title":"Looking Outwards [0]: The XR Landscape"},{"location":"imd/imd-looking-outwards/#looking-outwards-1-motion-design","text":"Cinema 4D & The Octane Render by Gia Almuaili Admiring Motion Design by Caro Beresford-Wood Inspiring Motion designs/ers by Yeon Choi Cool Motion Graphics are Cool by Steven Douglas Motion design inspiration by Min Kim Looking Outwards 1 \u2014 Motion Design by Megan Kwiatkowski A Quick Look at the Motion in Motion Design by Nick Lunt Motion and Attention by Derek Palmer Motion Design by Tess Stevens Storytelling In Motion Design by Nicole Tang Motion Design Exploration by Yangmin Zhang","title":"Looking Outwards [1]: Motion Design"},{"location":"imd/imd-looking-outwards/#looking-outwards-2-report-on-xr-assets","text":"Unity-Built Apps & Video Games by Gia Almuaili The Wondrous Worlds of Cinema 4D and Unity by Caro Beresford-Wood CM: Report on XR assets by Yeon Choi Cool AR Stuff is Cool by Steven Douglas Intro to AR Game by Min Kim Looking Outwards 2 \u2014 Rick&Morty Meet Virtual Reality by Megan Kwiatkowski Bone Breaking VR Physics and Beautifully Animated Graphics by Nick Lunt Looking Outwards 2: Wrapping And Fixing XR Assets by Derek Palmer XR Asset Creation Experiments by Tess Stevens Continue Exploration for VR & AR by Yangmin Zhang","title":"Looking Outwards [2]: Report on XR Assets"},{"location":"imd/imd-looking-outwards/#project-1-asset-creation-visualization","text":"Asset Creation & Visualization: Cartoons & Assets by Gia Almuaili Cinema4D, Torch AR, and a Whole Lot of Troubleshooting by Caro Beresford-Wood CM: Project 1 \u2014 C4D Low Poly by Yeon Choi Dealing with Trauma via Interactive AR Storytelling by Steven Douglas Project 1 \u2014 Asset Creation & Visualization by Megan Kwiatkowski I Made Some 3D Model Monstrosities in Blender by Nick Lunt IMD Project 1: AR Perspectives and Narrative by Derek Palmer Dancing Aliens, etc. C4D, Make Human, and Mixamo by Tess Stevens My Unity World by Nicole Tang","title":"Project #1: Asset Creation &amp; Visualization"},{"location":"imd/imd-looking-outwards/#looking-outwards-3-identifying-functionality-in-scripts","text":"Trying to Animate in Unity by Gia Almuaili Exploring Scripts in Unity by Caro Beresford-Wood C# is Cool by Steven Douglas Scripting Rotation in Unity by Derek Palmer Identifying Functionality in Scripts by Tess Stevens Little Game in Unity by Yangmin Zhang","title":"Looking Outwards [3]: Identifying Functionality in Scripts"},{"location":"imd/imd-looking-outwards/#looking-outwards-4-understanding-ar-foundation","text":"Design Opportunities for AR by Gia Almuaili The Wondrous World of AR Foundation by Caro Beresford-Wood CM: AR Foundation and design opportunities by Yeon Choi AR Foundation is Cool by Steven Douglas Unity's AR Foundation by Min Kim AR is Hecking Awesome by Nick Lunt AR Foundation and Social Games by Derek Palmer Investigating AR Foundation by Tess Stevens","title":"Looking Outwards [4]: Understanding AR Foundation"},{"location":"imd/imd-looking-outwards/#project-2-build-a-unity-based-mobile-app","text":"Unity & Xcode by Gia Almuaili CM: Project 2 Unity & AR by Yeon Choi Master Chief and Some Text by Steven Douglas IMD Project 2: Accelerometer Ergonomics (Float-a-Ball) by Derek Palmer Building a Unity Mobile App by Tess Stevens","title":"Project #2: Build a Unity Based Mobile App"},{"location":"imd/imd-looking-outwards/#looking-outwards-5-ui-and-ux-for-xr","text":"Research: UI & UX for XR by Gia Almuaili UI and UX in XR by Caro Beresford-Wood CM: UI UX and XR by Yeon Choi UI, UX, VR, AR by Steven Douglas The User Experience of XR - Designing For Empathy by Megan Kwiatkowski IMD: Multi-user Contextual AR Design by Derek Palmer UX and UI for XR by Tess Stevens","title":"Looking Outwards [5]: UI and UX for XR"},{"location":"pc/","text":"Parts and Supplies Sparkfun Adafruit Digikey Mouser Arrow Tools for Prototyping Electronics Multimeter - Measuring Voltage, Current, Resistance. Try to do this with the Arduino and its pins. How to use a multimeter Soldering Soldering Tutorial for Beginners: Five Easy Steps (Video) How to Solder (Instructables) Wires Working with wire How to Strip a wire","title":"Tools & Devices"},{"location":"pc/#parts-and-supplies","text":"Sparkfun Adafruit Digikey Mouser Arrow","title":"Parts and Supplies"},{"location":"pc/#tools-for-prototyping-electronics","text":"Multimeter - Measuring Voltage, Current, Resistance. Try to do this with the Arduino and its pins. How to use a multimeter Soldering Soldering Tutorial for Beginners: Five Easy Steps (Video) How to Solder (Instructables) Wires Working with wire How to Strip a wire","title":"Tools for Prototyping Electronics"},{"location":"pc/learning-arduino/","text":"This section contains resources for learning how to work with Arduino microcontrollers. Note this is a living document and is constantly being updated. Some things may come and go over time. Getting Started Arduino - What IS it? - Great overview What is an Arduino? A Beginners Guide to Arduino Arduino IDE Arduino Language Reference Arduino Hardware Arduino Uno Specs Arduino Prototyping Techniques History & Ethos Massimo Banzi: How Arduino is open-sourcing imagination (TED Talk) The Untold History of Arduino by Hernando Barrag\u00e1n - A great article on the history of Arduino and how it came to be. The Making of Arduino (2011) Open Source Hardware Association (OSHWA) Circuit Simulators Autodesk Tinkercad Circuits / Arduino UNO w/ TinkerCAD Circuits Tutorial - Youtube playlist of how-to videos. Arduino Boards Arduino UNO Sparkfun Arduino Uno Adafruit Arduino Uno Sparkfun Redboard Arduino Pro Mini Arduino Mega Sparkfun ESP32 Thing - Good for WiFi enabled projects! ESP32 ESP8266 Based Boards Sparkfun ESP8266 Thing NodeMCU (ESP8266) ( Amazon ), A Beginner's Guide to the ESP8266 Arduino Products Arduino Buying Guide by Sparkfun Adafruit Arduino Products Sparkfun Arduino Boards Sparkfun Arduino Products Examples / Tutorials Built In Examples Sparkfun Arduino Tutorials Adafruit Arduino Learning System Projects Instructables 20 Unbelievable Arduino Projects Arduino Playground 20 Projects to Celebrate Arduino Day Hackster.io Arduino Projects DIY Hacking Arduino Arduino Projects on Pintrest Arduino Project Hub 20 Arduino Projects with DIY Instructions - A great set of tutorials for building things with Arduino.","title":"Learning Arduino"},{"location":"pc/learning-arduino/#getting-started","text":"Arduino - What IS it? - Great overview What is an Arduino? A Beginners Guide to Arduino Arduino IDE Arduino Language Reference Arduino Hardware Arduino Uno Specs Arduino Prototyping Techniques","title":"Getting Started"},{"location":"pc/learning-arduino/#history-ethos","text":"Massimo Banzi: How Arduino is open-sourcing imagination (TED Talk) The Untold History of Arduino by Hernando Barrag\u00e1n - A great article on the history of Arduino and how it came to be. The Making of Arduino (2011) Open Source Hardware Association (OSHWA)","title":"History &amp; Ethos"},{"location":"pc/learning-arduino/#circuit-simulators","text":"Autodesk Tinkercad Circuits / Arduino UNO w/ TinkerCAD Circuits Tutorial - Youtube playlist of how-to videos.","title":"Circuit Simulators"},{"location":"pc/learning-arduino/#arduino-boards","text":"Arduino UNO Sparkfun Arduino Uno Adafruit Arduino Uno Sparkfun Redboard Arduino Pro Mini Arduino Mega Sparkfun ESP32 Thing - Good for WiFi enabled projects! ESP32 ESP8266 Based Boards Sparkfun ESP8266 Thing NodeMCU (ESP8266) ( Amazon ), A Beginner's Guide to the ESP8266","title":"Arduino Boards"},{"location":"pc/learning-arduino/#arduino-products","text":"Arduino Buying Guide by Sparkfun Adafruit Arduino Products Sparkfun Arduino Boards Sparkfun Arduino Products","title":"Arduino Products"},{"location":"pc/learning-arduino/#examples-tutorials","text":"Built In Examples Sparkfun Arduino Tutorials Adafruit Arduino Learning System","title":"Examples / Tutorials"},{"location":"pc/learning-arduino/#projects","text":"Instructables 20 Unbelievable Arduino Projects Arduino Playground 20 Projects to Celebrate Arduino Day Hackster.io Arduino Projects DIY Hacking Arduino Arduino Projects on Pintrest Arduino Project Hub 20 Arduino Projects with DIY Instructions - A great set of tutorials for building things with Arduino.","title":"Projects"},{"location":"pc/learning-eagle/","text":"This section contains resources for learning how to work with Eagle CAD. Note this is a living document and is constantly being updated. Some things may come and go over time. Beginner Tutorials Sparkfun Using EAGLE: Schematic Sparkfun Using EAGLE: Board Layout Bantam Mill: Intro to Creating Circuits with EAGLE From the Archives: Convert Gerber Files to G-Code with FlatCAM","title":"Learning Eagle (CAD)"},{"location":"pc/learning-eagle/#beginner","text":"","title":"Beginner"},{"location":"pc/learning-eagle/#tutorials","text":"Sparkfun Using EAGLE: Schematic Sparkfun Using EAGLE: Board Layout Bantam Mill: Intro to Creating Circuits with EAGLE From the Archives: Convert Gerber Files to G-Code with FlatCAM","title":"Tutorials"},{"location":"pc/learning-electronics/","text":"This section contains resources for learning the basics of electronics and tools used for working with electronics. Note this is a living document and is constantly being updated. Some things may come and go over time. Basic Electronics What is Electricity? Electricity Explained (Youtube) Sparkfun - Where Do I Start? Ohms Law: Voltage, Current, Resistance, Power Analog vs Digital Series and Parallel Circuits Resistors LEDS ADCs and DACs How to Power a Project","title":"Learning Electronics"},{"location":"pc/learning-electronics/#basic-electronics","text":"What is Electricity? Electricity Explained (Youtube) Sparkfun - Where Do I Start? Ohms Law: Voltage, Current, Resistance, Power Analog vs Digital Series and Parallel Circuits Resistors LEDS ADCs and DACs How to Power a Project","title":"Basic Electronics"},{"location":"pc/learning-rpi/","text":"This section contains resources for learning how to work with Raspberry Pi's. Note this is a living document and is constantly being updated. Some things may come and go over time. Beginner Raspberry Pi Foundation Raspberry Pi Downloads Raspberry Pi Setup Raspberry Pi Help Getting Started I recommend everyone purchase their own Raspberry Pi device and 16 or 32GB MicroSD card(s) . We do have a few Raspberry Pi boards in the shop but are low on MicroSD cards. We have plenty of Arduino boards to use so no need to purchase one unless you want to own one. You can pick up a Raspberry Pi 3 on Amazon or Microcenter (Retail Store in Denver). If you want a more complete starter kit you can find similar systems on Amazon, Sparkfun , and other online retailers. Packages with more components will typically cost more. Note that the Raspberry Pi 3 B+ was just released (on Pi Day 3/14/2018) and it costs a bit more than its predecessor (3 Model B). It doesn't matter if you have this new version or the slightly older version. Typical Raspberry Pi Setup Raspberry Pi 3 ~ $35 16, 32, or 64 GB MicroSD Card (16 GB is a good size to start with) ~ $10 for 16 GB HDMI Cable (To plug in display) ~ $6 USB Keyboard ~ $5-15 Est Total: $66 Terminal / Command Line Learning Terminal ssh, vi, scp (Transferring Data to/from Raspberry Pi's) Raspberry Pi 3 Model B / Amazon Raspberry Pi 3 Model B+ / Amazon Raspberry Pi A+ Tools and Frameworks RetroPi Openframe","title":"Learning Raspberry Pi"},{"location":"pc/learning-rpi/#beginner","text":"Raspberry Pi Foundation Raspberry Pi Downloads Raspberry Pi Setup Raspberry Pi Help","title":"Beginner"},{"location":"pc/learning-rpi/#getting-started","text":"I recommend everyone purchase their own Raspberry Pi device and 16 or 32GB MicroSD card(s) . We do have a few Raspberry Pi boards in the shop but are low on MicroSD cards. We have plenty of Arduino boards to use so no need to purchase one unless you want to own one. You can pick up a Raspberry Pi 3 on Amazon or Microcenter (Retail Store in Denver). If you want a more complete starter kit you can find similar systems on Amazon, Sparkfun , and other online retailers. Packages with more components will typically cost more. Note that the Raspberry Pi 3 B+ was just released (on Pi Day 3/14/2018) and it costs a bit more than its predecessor (3 Model B). It doesn't matter if you have this new version or the slightly older version. Typical Raspberry Pi Setup Raspberry Pi 3 ~ $35 16, 32, or 64 GB MicroSD Card (16 GB is a good size to start with) ~ $10 for 16 GB HDMI Cable (To plug in display) ~ $6 USB Keyboard ~ $5-15 Est Total: $66 Terminal / Command Line Learning Terminal ssh, vi, scp (Transferring Data to/from Raspberry Pi's) Raspberry Pi 3 Model B / Amazon Raspberry Pi 3 Model B+ / Amazon Raspberry Pi A+","title":"Getting Started"},{"location":"pc/learning-rpi/#tools-and-frameworks","text":"RetroPi Openframe","title":"Tools and Frameworks"},{"location":"ppd/ppd-looking-outwards/","text":"Looking Outwards [0]: The Parametric Design Landscape The Parametric Design Landscape by Yvonne Danyluck Parametric Forms in Everyday Life by Vanessa Frye Parametric Design by Mark Grundberg Looking Outwards [0]: The Parametric Design Landscape - Areas Ripe for Parametric Design Exploration by Clayton Kenny Utilizing Parametric Design by Dave Laskowski Research in Parametric Design by Aitana Rothfeld Parametric Design by Josh Sheetz Looking Outwards [1]: Patterns in Product Design The Parametric Design Landscape by Yvonne Danyluck Patterns in Product Design by Vanessa Frye Exploring Fractal Patterns by Mark Grundberg Looking Outwards [1]: Patterns in Product Design by Clayton Kenny Tessellate: looking at the application of symmetry and patterns of products by Dave Laskowski Patterns. Patterns Everywhere. by Aitana Rothfeld Parametric Patterns by Josh Sheetz Looking Outwards [2]: Patterns with Purpose Algorithmic Patterns by Yvonne Danyluck Breeze Block Designs Outside of Architecture by Vanessa Frye Fractals 2.0 by Mark Grundberg Moir\u00e9 Musings by Clayton Kenny Tactile in Motion by Dave Laskowski Tactile Patterning by Aitana Rothfeld Making Parametric Design Tangible by Josh Sheetz Looking Outwards [3]: CNC Milled Products CNC Milling by Yvonne Danyluck CNC Milled Products\u2013Fashion vs. Function by Vanessa Frye Holy Ship! Look at that CNC Milling by Mark Grundberg CNC Milled Products by Clayton Kenny CNC Milled Products by Dave Laskowski Slice and Dice: Learning about CNC milling by Aitana Rothfeld Bantam Boys by Josh Sheetz Looking Outwards [4]: 3D Printed Products 3D Printed Products and Processes by Yvonne Danyluck 3D Printing Everyday Products Opens the Door for Customization by Vanessa Frye 3D Printing Possibilities by Mark Grundberg 3D Printed Products by Clayton Kenny Exploring the Third Dimension by Dave Laskowski Topographic 3D Printing by Aitana Rothfeld 3D Printing and its Infinite Applications by Josh Sheetz","title":"Ppd looking outwards"},{"location":"ppd/ppd-looking-outwards/#looking-outwards-0-the-parametric-design-landscape","text":"The Parametric Design Landscape by Yvonne Danyluck Parametric Forms in Everyday Life by Vanessa Frye Parametric Design by Mark Grundberg Looking Outwards [0]: The Parametric Design Landscape - Areas Ripe for Parametric Design Exploration by Clayton Kenny Utilizing Parametric Design by Dave Laskowski Research in Parametric Design by Aitana Rothfeld Parametric Design by Josh Sheetz","title":"Looking Outwards [0]: The Parametric Design Landscape"},{"location":"ppd/ppd-looking-outwards/#looking-outwards-1-patterns-in-product-design","text":"The Parametric Design Landscape by Yvonne Danyluck Patterns in Product Design by Vanessa Frye Exploring Fractal Patterns by Mark Grundberg Looking Outwards [1]: Patterns in Product Design by Clayton Kenny Tessellate: looking at the application of symmetry and patterns of products by Dave Laskowski Patterns. Patterns Everywhere. by Aitana Rothfeld Parametric Patterns by Josh Sheetz","title":"Looking Outwards [1]: Patterns in Product Design"},{"location":"ppd/ppd-looking-outwards/#looking-outwards-2-patterns-with-purpose","text":"Algorithmic Patterns by Yvonne Danyluck Breeze Block Designs Outside of Architecture by Vanessa Frye Fractals 2.0 by Mark Grundberg Moir\u00e9 Musings by Clayton Kenny Tactile in Motion by Dave Laskowski Tactile Patterning by Aitana Rothfeld Making Parametric Design Tangible by Josh Sheetz","title":"Looking Outwards [2]: Patterns with Purpose"},{"location":"ppd/ppd-looking-outwards/#looking-outwards-3-cnc-milled-products","text":"CNC Milling by Yvonne Danyluck CNC Milled Products\u2013Fashion vs. Function by Vanessa Frye Holy Ship! Look at that CNC Milling by Mark Grundberg CNC Milled Products by Clayton Kenny CNC Milled Products by Dave Laskowski Slice and Dice: Learning about CNC milling by Aitana Rothfeld Bantam Boys by Josh Sheetz","title":"Looking Outwards [3]: CNC Milled Products"},{"location":"ppd/ppd-looking-outwards/#looking-outwards-4-3d-printed-products","text":"3D Printed Products and Processes by Yvonne Danyluck 3D Printing Everyday Products Opens the Door for Customization by Vanessa Frye 3D Printing Possibilities by Mark Grundberg 3D Printed Products by Clayton Kenny Exploring the Third Dimension by Dave Laskowski Topographic 3D Printing by Aitana Rothfeld 3D Printing and its Infinite Applications by Josh Sheetz","title":"Looking Outwards [4]: 3D Printed Products"},{"location":"studio-handbook/","text":"This handbook covers useful information about CMCI Studio spaces, rules, technology, and equipment. It is recommended that all students and faculty read through this page and refer to it often. Send any questions, comments, or suggestions via email or slack (@rjduran). Note this is a living document and is constantly being updated. West Studio Features: Secure 24/7 Access Large tables and chairs Kitchen AV Editing Workstation Photo Studio Configurable performance space Lighting Grid North Studio Features: Secure 24/7 Access Workshop Rapid Prototyping Large tables and chairs Printers Laptops VR Equipment WIFI High speed WIFI access is available in both studio spaces. The password for access is posted on the wall in each room. Access Points (SSID) Location CMCI-STUDIO-1 West Studio CMCI-STUDIO-2 North Studio Studio Rules The Studio space is a 24/7 facility. The Studio masters program is one of many activities that take place in the space. You will have an individualized FOB to enter the building. Contact faculty asap if your FOB goes missing. Food and drinks are allowed, but alcohol is NOT permitted on the premises. Bathrooms are through the door on the east side of the courtyard. You need a FOB to access. The kitchen is for your use. But you are expected to clean dishes etc. If you are the last person here, you are expected to turn off the lights and ensure that all doors are secure before you leave. The courtyard is a shared space with all the other building tenants. Treat the space as you would your home or office. You are expected to clean up after yourself. Do not stream or download illegial content on CMCI Studio network. General Safety TODO Printers To access the paper printer you need to be connected to one of the local wifi access points shown above. The following printers are available for use. Make/Model Type Location Website Brother MCF-L6800DW Black/White North Studio Support MacOS: Add the printer by going to System Preferences > Printers & Scanners and click the + sign. You should get the option to add the \"Brother MCF-L6800DW\" printer. After doing so you should be able to send jobs to print. Projectors Room Lights Lighting Grid Mobile Displays Photo Studio Equipment insert camera list here Media Workstations AV Editing VR & Rendering Room Cameras Streaming Content VR Equipment Laptops Usage Policy The Critical Making Studio has Razer Blade (14\") laptops for use with advanced graphics and media applications such as VR, 3d modeling, and programming. The laptops are to remain at the studio at all times. No exceptions. Personal files should be backed up using USB drives and/or a cloud based service such as Dropbox or Google Drive. Do not expect your files to be available on any one laptop the next time you use it. Please report any technical issues to RJ asap. Login The laptops are setup to be identical with following user account and installed software. Account: Student Password: student Software Rhino 5 + Grasshopper Fusion 360 Unity 5.6.4 Unity 2017.2.1 Unity 2017.3.0 Steam SteamVR Maya 2018 Adobe Creative Cloud - Login Required Blender Meshmixer Google Chrome Firefox Visual Studio 2017 Community Ultimaker Cura Screencast-O-Matic Notepad++ Meshlab DAZ 3D File Server The Critical Making Studio has a local network shared folder for transferring large projects between computers. To access it you must be on the STUDIO-2.4 or STUDIO-5 network. Follow the instructions below to connect to the shared folder. Server Use Make sure you keep backups of your projects on your local machines in case the server is ever down or someone deletes a folder. Be aware that once you delete a folder from the server its gone forever. You may make any folders you want or use any of the folders with your name. Local Access On MacOS: Go > Connect to Server (CMD + K) Enter: smb://CMCI_STUDIO/cm_share Click Connect Enter Username and Password when prompted. The shared folder should appear in the Finder. If it doesn\u2019t, go to Go > Network (SHIFT+CMD+K) and you will see the \"CMCI_STUDIO\" server with \"cm_share\" available. On Windows: Open Windows Explorer and choose Tools > Map Network Drive. Choose a drive number from the Drive drop-down menu. Enter: \\\\CMCI_STUDIO\\cm_share Click Finish Enter Username and Password when prompted. The shared folder should appear in the Windows Explorer as a network drive. Remote Access On MacOS: Go > Connect to Server (CMD + K) Enter: https://cmcistudio.synology.me:5006 Click Connect Enter Username and Password when prompted. The shared folder should appear in the Finder. If it doesn\u2019t, go to Go > Network (SHIFT+CMD+K) and you will see the \"cmcistudio.synology.me:5006\" server with \u201ccm_share\u201d available.","title":"Studio Handbook"},{"location":"studio-handbook/#west-studio","text":"Features: Secure 24/7 Access Large tables and chairs Kitchen AV Editing Workstation Photo Studio Configurable performance space Lighting Grid","title":"West Studio"},{"location":"studio-handbook/#north-studio","text":"Features: Secure 24/7 Access Workshop Rapid Prototyping Large tables and chairs Printers Laptops VR Equipment","title":"North Studio"},{"location":"studio-handbook/#wifi","text":"High speed WIFI access is available in both studio spaces. The password for access is posted on the wall in each room. Access Points (SSID) Location CMCI-STUDIO-1 West Studio CMCI-STUDIO-2 North Studio","title":"WIFI"},{"location":"studio-handbook/#studio-rules","text":"The Studio space is a 24/7 facility. The Studio masters program is one of many activities that take place in the space. You will have an individualized FOB to enter the building. Contact faculty asap if your FOB goes missing. Food and drinks are allowed, but alcohol is NOT permitted on the premises. Bathrooms are through the door on the east side of the courtyard. You need a FOB to access. The kitchen is for your use. But you are expected to clean dishes etc. If you are the last person here, you are expected to turn off the lights and ensure that all doors are secure before you leave. The courtyard is a shared space with all the other building tenants. Treat the space as you would your home or office. You are expected to clean up after yourself. Do not stream or download illegial content on CMCI Studio network.","title":"Studio Rules"},{"location":"studio-handbook/#general-safety","text":"TODO","title":"General Safety"},{"location":"studio-handbook/#printers","text":"To access the paper printer you need to be connected to one of the local wifi access points shown above. The following printers are available for use. Make/Model Type Location Website Brother MCF-L6800DW Black/White North Studio Support MacOS: Add the printer by going to System Preferences > Printers & Scanners and click the + sign. You should get the option to add the \"Brother MCF-L6800DW\" printer. After doing so you should be able to send jobs to print.","title":"Printers"},{"location":"studio-handbook/#projectors","text":"","title":"Projectors"},{"location":"studio-handbook/#room-lights","text":"","title":"Room Lights"},{"location":"studio-handbook/#lighting-grid","text":"","title":"Lighting Grid"},{"location":"studio-handbook/#mobile-displays","text":"","title":"Mobile Displays"},{"location":"studio-handbook/#photo-studio","text":"","title":"Photo Studio"},{"location":"studio-handbook/#equipment","text":"insert camera list here","title":"Equipment"},{"location":"studio-handbook/#media-workstations","text":"","title":"Media Workstations"},{"location":"studio-handbook/#av-editing","text":"","title":"AV Editing"},{"location":"studio-handbook/#vr-rendering","text":"","title":"VR &amp; Rendering"},{"location":"studio-handbook/#room-cameras","text":"","title":"Room Cameras"},{"location":"studio-handbook/#streaming-content","text":"","title":"Streaming Content"},{"location":"studio-handbook/#vr-equipment","text":"","title":"VR Equipment"},{"location":"studio-handbook/#laptops","text":"Usage Policy The Critical Making Studio has Razer Blade (14\") laptops for use with advanced graphics and media applications such as VR, 3d modeling, and programming. The laptops are to remain at the studio at all times. No exceptions. Personal files should be backed up using USB drives and/or a cloud based service such as Dropbox or Google Drive. Do not expect your files to be available on any one laptop the next time you use it. Please report any technical issues to RJ asap. Login The laptops are setup to be identical with following user account and installed software. Account: Student Password: student","title":"Laptops"},{"location":"studio-handbook/#software","text":"Rhino 5 + Grasshopper Fusion 360 Unity 5.6.4 Unity 2017.2.1 Unity 2017.3.0 Steam SteamVR Maya 2018 Adobe Creative Cloud - Login Required Blender Meshmixer Google Chrome Firefox Visual Studio 2017 Community Ultimaker Cura Screencast-O-Matic Notepad++ Meshlab DAZ 3D","title":"Software"},{"location":"studio-handbook/#file-server","text":"The Critical Making Studio has a local network shared folder for transferring large projects between computers. To access it you must be on the STUDIO-2.4 or STUDIO-5 network. Follow the instructions below to connect to the shared folder. Server Use Make sure you keep backups of your projects on your local machines in case the server is ever down or someone deletes a folder. Be aware that once you delete a folder from the server its gone forever. You may make any folders you want or use any of the folders with your name.","title":"File Server"},{"location":"studio-handbook/#local-access","text":"On MacOS: Go > Connect to Server (CMD + K) Enter: smb://CMCI_STUDIO/cm_share Click Connect Enter Username and Password when prompted. The shared folder should appear in the Finder. If it doesn\u2019t, go to Go > Network (SHIFT+CMD+K) and you will see the \"CMCI_STUDIO\" server with \"cm_share\" available. On Windows: Open Windows Explorer and choose Tools > Map Network Drive. Choose a drive number from the Drive drop-down menu. Enter: \\\\CMCI_STUDIO\\cm_share Click Finish Enter Username and Password when prompted. The shared folder should appear in the Windows Explorer as a network drive.","title":"Local Access"},{"location":"studio-handbook/#remote-access","text":"On MacOS: Go > Connect to Server (CMD + K) Enter: https://cmcistudio.synology.me:5006 Click Connect Enter Username and Password when prompted. The shared folder should appear in the Finder. If it doesn\u2019t, go to Go > Network (SHIFT+CMD+K) and you will see the \"cmcistudio.synology.me:5006\" server with \u201ccm_share\u201d available.","title":"Remote Access"},{"location":"studio-handbook/policies/","text":"CU Policies and Procedures Classroom Behavior Students and faculty each have responsibility for maintaining an appropriate learning environment. Those who fail to adhere to such behavioral standards may be subject to discipline. Professional courtesy and sensitivity are especially important with respect to individuals and topics dealing with differences of race, color, culture, religion, creed, politics, veteran\u2019s status, sexual orientation, gender, gender identity and gender expression, age, disability, and nationalities. Class rosters are provided to the instructor with the student's legal name. I will gladly honor your request to address you by an alternate name or gender pronoun. Please advise me of this preference early in the semester so that I may make appropriate changes to my records. See policies at: http://www.colorado.edu/policies/classbehavior.html and at http://www.colorado.edu/studentaffairs/judicialaffairs Disability If you qualify for accommodations because of a disability, please submit to your professor a letter from Disability Services in a timely manner (for exam accommodations provide your letter at least one week prior to the exam) so that your needs can be addressed. Disability Services determines accommodations based on documented disabilities. Contact Disability Services at 303-492-8671 or by e-mail at dsinfo@colorado.edu. If you have a temporary medical condition or injury, see Temporary Medical Conditions: Injuries, Surgeries, and Illnesses guidelines under Quick Links at Disability Services website and discuss your needs with your professor. Religious Observance Campus policy regarding religious observances requires that faculty make every effort to deal reasonably and fairly with all students who, because of religious obligations, have conflicts with scheduled exams, assignments or required attendance. Please notify me as quickly as possible regarding any possible absences so that we can plan your work accordingly. See full details at http://www.colorado.edu/policies/fac_relig.html Discrimination and Harassment The University of Colorado Boulder (CU-Boulder) is committed to maintaining a positive learning, working, and living environment. The University of Colorado does not discriminate on the basis of race, color, national origin, sex, age, disability, creed, religion, sexual orientation, or veteran status in admission and access to, and treatment and employment in, its educational programs and activities. (Regent Law, Article 10, amended 11/8/2001). CU-Boulder will not tolerate acts of discrimination or harassment based upon Protected Classes or related retaliation against or by any employee or student. For purposes of this CU-Boulder policy, \"Protected Classes\" refers to race, color, national origin, sex, pregnancy, age, disability, creed, religion, sexual orientation, gender identity, gender expression, or veteran status. Individuals who believe they have been discriminated against should contact the Office of Discrimination and Harassment (ODH) at 303-492-2127 or the Office of Student Conduct (OSC) at 303-492-5550. Information about the ODH, the above referenced policies, and the campus resources available to assist individuals regarding discrimination or harassment can be obtained at http://hr.colorado.edu/dh/ Honor Code All students of the University of Colorado at Boulder are responsible for knowing and adhering to the academic integrity policy of this institution. Violations of this policy may include: cheating, plagiarism, aid of academic dishonesty, fabrication, lying, bribery, and threatening behavior. All incidents of academic misconduct shall be reported to the Honor Code Council (honor@colorado.edu; 303-735-2273). Students who are found to be in violation of the academic integrity policy will be subject to both academic sanctions from the faculty member and non-academic sanctions (including but not limited to university probation, suspension, or expulsion). Other information on the Honor Code can be found at http://www.colorado.edu/policies/honor.html and at http://honorcode.colorado.edu Athletic Events The Boulder Campus has two separate but similar policies governing conflicts between a student's athletic events and his or her classes and exams. One policy governs students involved in intercollegiate varsity athletic events. The other policy governs students involved in Club Sports events. Each policy is accompanied by a detailed report with guidance on how instructors may deal with conflicts when they arise. Both policies may be viewed in detail on the Boulder Faculty Assembly's website: Policy on conflicts involving Intercollegiate Athletics, http://www.colorado.edu/FacultyGovernance/committees/IAC.html Policy on conflicts involving Club Sports http://www.colorado.edu/FacultyGovernance/committees/studentaffairs.html The two policies are substantially similar, having the following terms in common: That it is the student's responsibility to notify each instructor, in the first week of the semester and in writing, about any known conflicts between academic requirements and athletic events. That instructors have full authority to decide whether and/or how to accommodate those conflicts. While an instructor has the right to refuse to make accommodations, he or she is permitted to provide such accommodations. That coaches are forbidden from initiating contact with instructors regarding schedule conflicts, grades, or academic progress. The Intercollegiate Athletics Office of Academic Support Services and the Recreation Center's Collegiate Club Sports coordinators may contact instructors about certain topics. There is no rule preventing faculty from contacting these support organizations.Policy terms that are specific to intercollegiate varsity events, as opposed to club sports events, include: That intercollegiate varsity athletic events during final exams, which are normally forbidden by university policy, must be approved in writing by the BFA Intercollegiate Athletics Committee well in advance of the event. Students involved in these events must then work with their instructors in regard to any missed work.","title":"CU Policies and Procedures"},{"location":"studio-handbook/policies/#cu-policies-and-procedures","text":"","title":"CU Policies and Procedures"},{"location":"studio-handbook/policies/#classroom-behavior","text":"Students and faculty each have responsibility for maintaining an appropriate learning environment. Those who fail to adhere to such behavioral standards may be subject to discipline. Professional courtesy and sensitivity are especially important with respect to individuals and topics dealing with differences of race, color, culture, religion, creed, politics, veteran\u2019s status, sexual orientation, gender, gender identity and gender expression, age, disability, and nationalities. Class rosters are provided to the instructor with the student's legal name. I will gladly honor your request to address you by an alternate name or gender pronoun. Please advise me of this preference early in the semester so that I may make appropriate changes to my records. See policies at: http://www.colorado.edu/policies/classbehavior.html and at http://www.colorado.edu/studentaffairs/judicialaffairs","title":"Classroom Behavior"},{"location":"studio-handbook/policies/#disability","text":"If you qualify for accommodations because of a disability, please submit to your professor a letter from Disability Services in a timely manner (for exam accommodations provide your letter at least one week prior to the exam) so that your needs can be addressed. Disability Services determines accommodations based on documented disabilities. Contact Disability Services at 303-492-8671 or by e-mail at dsinfo@colorado.edu. If you have a temporary medical condition or injury, see Temporary Medical Conditions: Injuries, Surgeries, and Illnesses guidelines under Quick Links at Disability Services website and discuss your needs with your professor.","title":"Disability"},{"location":"studio-handbook/policies/#religious-observance","text":"Campus policy regarding religious observances requires that faculty make every effort to deal reasonably and fairly with all students who, because of religious obligations, have conflicts with scheduled exams, assignments or required attendance. Please notify me as quickly as possible regarding any possible absences so that we can plan your work accordingly. See full details at http://www.colorado.edu/policies/fac_relig.html","title":"Religious Observance"},{"location":"studio-handbook/policies/#discrimination-and-harassment","text":"The University of Colorado Boulder (CU-Boulder) is committed to maintaining a positive learning, working, and living environment. The University of Colorado does not discriminate on the basis of race, color, national origin, sex, age, disability, creed, religion, sexual orientation, or veteran status in admission and access to, and treatment and employment in, its educational programs and activities. (Regent Law, Article 10, amended 11/8/2001). CU-Boulder will not tolerate acts of discrimination or harassment based upon Protected Classes or related retaliation against or by any employee or student. For purposes of this CU-Boulder policy, \"Protected Classes\" refers to race, color, national origin, sex, pregnancy, age, disability, creed, religion, sexual orientation, gender identity, gender expression, or veteran status. Individuals who believe they have been discriminated against should contact the Office of Discrimination and Harassment (ODH) at 303-492-2127 or the Office of Student Conduct (OSC) at 303-492-5550. Information about the ODH, the above referenced policies, and the campus resources available to assist individuals regarding discrimination or harassment can be obtained at http://hr.colorado.edu/dh/","title":"Discrimination and Harassment"},{"location":"studio-handbook/policies/#honor-code","text":"All students of the University of Colorado at Boulder are responsible for knowing and adhering to the academic integrity policy of this institution. Violations of this policy may include: cheating, plagiarism, aid of academic dishonesty, fabrication, lying, bribery, and threatening behavior. All incidents of academic misconduct shall be reported to the Honor Code Council (honor@colorado.edu; 303-735-2273). Students who are found to be in violation of the academic integrity policy will be subject to both academic sanctions from the faculty member and non-academic sanctions (including but not limited to university probation, suspension, or expulsion). Other information on the Honor Code can be found at http://www.colorado.edu/policies/honor.html and at http://honorcode.colorado.edu","title":"Honor Code"},{"location":"studio-handbook/policies/#athletic-events","text":"The Boulder Campus has two separate but similar policies governing conflicts between a student's athletic events and his or her classes and exams. One policy governs students involved in intercollegiate varsity athletic events. The other policy governs students involved in Club Sports events. Each policy is accompanied by a detailed report with guidance on how instructors may deal with conflicts when they arise. Both policies may be viewed in detail on the Boulder Faculty Assembly's website: Policy on conflicts involving Intercollegiate Athletics, http://www.colorado.edu/FacultyGovernance/committees/IAC.html Policy on conflicts involving Club Sports http://www.colorado.edu/FacultyGovernance/committees/studentaffairs.html The two policies are substantially similar, having the following terms in common: That it is the student's responsibility to notify each instructor, in the first week of the semester and in writing, about any known conflicts between academic requirements and athletic events. That instructors have full authority to decide whether and/or how to accommodate those conflicts. While an instructor has the right to refuse to make accommodations, he or she is permitted to provide such accommodations. That coaches are forbidden from initiating contact with instructors regarding schedule conflicts, grades, or academic progress. The Intercollegiate Athletics Office of Academic Support Services and the Recreation Center's Collegiate Club Sports coordinators may contact instructors about certain topics. There is no rule preventing faculty from contacting these support organizations.Policy terms that are specific to intercollegiate varsity events, as opposed to club sports events, include: That intercollegiate varsity athletic events during final exams, which are normally forbidden by university policy, must be approved in writing by the BFA Intercollegiate Athletics Committee well in advance of the event. Students involved in these events must then work with their instructors in regard to any missed work.","title":"Athletic Events"},{"location":"xr/","text":"XR Platforms HTC Vive Vive Developer Vive Wave - Developer Portal for China Oculus Rift Google Daydream Game Engines Unity Unreal Reality Capture Structure Sensor 3D Scanner Autodesk Remake CAD / Mesh Conversion CAD Assistant - This will convert between almost any format. Meshlab","title":"Tools"},{"location":"xr/#xr","text":"","title":"XR"},{"location":"xr/#platforms","text":"HTC Vive Vive Developer Vive Wave - Developer Portal for China Oculus Rift Google Daydream","title":"Platforms"},{"location":"xr/#game-engines","text":"Unity Unreal","title":"Game Engines"},{"location":"xr/#reality-capture","text":"Structure Sensor 3D Scanner Autodesk Remake","title":"Reality Capture"},{"location":"xr/#cad-mesh-conversion","text":"CAD Assistant - This will convert between almost any format. Meshlab","title":"CAD / Mesh Conversion"},{"location":"xr/learning-unity/","text":"This section contains resources for learning how to work with Unity3D , a game engine for building immersive experiences, games, and more. Note this is a living document and is constantly being updated. Some things may come and go over time. Unity Basics Unity Interface Navigation Hierarchy Windows - Scene, Game Console Inspector Custom Layouts Tools - QUERTY Project / File Organization Assets Folder If you delete it in Unity it deletes it from the folder. Careful. .meta files generated by Unity. They need to go with the source file if you move it in the explorer (windows) or finder (MacOS). Make subdirectories to keep it organized Ex. Scenes, Scripts, Models, Textures, Prefabs, Physical Materials, Materials Adding Objects to a Scene Manipulating Objects Inspecting Objects Nesting Objects - Parents and Children Working with Game Objects Adding Components Rigid Body Game Play Init Objects, Compile Scripts, etc Changing parameters in Unity before and during gameplay Importing Assets Import your own assets (from CAD package - Rhino, Fusion, Maya, Blender, etc) Import assets from Asset store Import assets you find on the web Intro to scripting Scripting...What is scripting? What's in a script? Monodevelop and Visual Studio Make a GameObject Make a new script and add it as a Component to your new GameObject Print to the console from your script Debug.Log(\"Hello World!!\"); Unity + SteamVR The SteamVR Plugin is an easy way to integrate VR functionality into Unity. It's recommended to import the Unity package via Asset store within Unity. Note that SteamVR won't work unless there is VR capable hardware connected (ie. HTC VIVE) and you are running the Unity project on a Windows 10 machine. Required Software Unity 2018 and up - Installed via Unity Hub. SteamVR Runtime 1.2.10 - Installed via Steam. SteamVR Plugin 2.2.0 (Last Update: Jan 30, 2019) Github Docs Unity Asset Store OpenVR - SteamVR is using OpenVR behind the scenes to communicate with the SteamVR Runtime. The Wiki for OpenVR talks about more of the underlying API. You don't need to download anything else. Build a Unity project and add the SteamVR plugin Make a new Unity project. Name it \"MySteamVRProject.\" Import plugin SteamVR from asset store Search for SteamVR and click Import. Click Import when prompted. A dialog comes up that shows what files will be included.It may take a moment to include everything in the package. Click Accept All when prompted with the recommended project settings. You will see a confirmation that says \u201cYou have made the right choice\u201d. Click Ok. Now you should see the SteamVR folder under Assets. Disable or remove the default Main Camera in the Inspector Keep the included Directional Light or add a Point Light and disable any unused lights. Add a Plane and Cube to the scene Move the Cube up in the Z direction by 1 unit. Add the Player prefab found under SteamVR/InteractionSystem/Core/Prefabs. This includes the camera and controller objects. Generate the action.js file by navigating to Unity menu Window > SteamVR Input. Click Yes when prompted to save a copy of the example json files. Click Save and Generate on the SteamVR Input dialog. Once that\u2019s done there will be an example scene file in Assets/SteamVR/InteractionSystem/Samples/Interactions_Example.unity. Explore this scene or go back to the default SampleScene file you started with. Start adding other objects into the scene. Hit play and put on the VIVE References Player How to Add Teleportation Create an empty GameObject Locate and add the Teleporting prefab found under SteamVR/InteractionSystem/Teleport/Prefabs. 3. This is the primary object for managing teleportation functionality. Add one or more TeleportPoint game objects found under SteamVR/InteractionSystem/Teleport/Prefabs. These should be places at specific locations you would like to teleport to. Add one or more Teleport Areas Create a Plane and adjust the size and location. Rename the game object to TeleportArea Position the plane object 0.05 units in the Y direction so it\u2019s just above the ground plane. Add the Teleport Area component Hit play and put on the VIVE References Getting Started with the Interaction System Teleport TeleportPoint TeleportArea How to Add Object Interaction (Pickup & Throw) Add a Cube GameObject to the scene Add the Interactable component to enable interaction features such as highlighting. Add the Throwable component to be able to pick up and throw the object. References Getting Started with the Interaction System Interactable Throwable C# Scripting Resources Unity Scripting References Scripting Manual Scripting API Scripting Tutorials Execution Order of Event Functions Unity Scripting Tutorials Conventions and Syntax Data Types Variables and Functions Vector Maths If Statements Loops Enabling and Disabling Components Activating GameObjects Translate and Rotate GetButton and GetKey Colliders Colliders as Triggers C# References The C# Player's Guide (3rd Edition) / pdf Microsoft C# Quick Start Tutorials Unity Scripts Unity Script Collection - Great resource! Scripting Behavior The Nature of Code ( Processing Examples ) Q: How do you go about translating code from one language to another? A: Learn enough of the syntax for both programming lanages to translate from one language to another. Oscillation Examples Teleporter Examples Making Objects Slide w/ Physic Materials","title":"Learning Unity"},{"location":"xr/learning-unity/#unity-basics","text":"Unity Interface Navigation Hierarchy Windows - Scene, Game Console Inspector Custom Layouts Tools - QUERTY Project / File Organization Assets Folder If you delete it in Unity it deletes it from the folder. Careful. .meta files generated by Unity. They need to go with the source file if you move it in the explorer (windows) or finder (MacOS). Make subdirectories to keep it organized Ex. Scenes, Scripts, Models, Textures, Prefabs, Physical Materials, Materials Adding Objects to a Scene Manipulating Objects Inspecting Objects Nesting Objects - Parents and Children Working with Game Objects Adding Components Rigid Body Game Play Init Objects, Compile Scripts, etc Changing parameters in Unity before and during gameplay Importing Assets Import your own assets (from CAD package - Rhino, Fusion, Maya, Blender, etc) Import assets from Asset store Import assets you find on the web Intro to scripting Scripting...What is scripting? What's in a script? Monodevelop and Visual Studio Make a GameObject Make a new script and add it as a Component to your new GameObject Print to the console from your script Debug.Log(\"Hello World!!\");","title":"Unity Basics"},{"location":"xr/learning-unity/#unity-steamvr","text":"The SteamVR Plugin is an easy way to integrate VR functionality into Unity. It's recommended to import the Unity package via Asset store within Unity. Note that SteamVR won't work unless there is VR capable hardware connected (ie. HTC VIVE) and you are running the Unity project on a Windows 10 machine. Required Software Unity 2018 and up - Installed via Unity Hub. SteamVR Runtime 1.2.10 - Installed via Steam. SteamVR Plugin 2.2.0 (Last Update: Jan 30, 2019) Github Docs Unity Asset Store OpenVR - SteamVR is using OpenVR behind the scenes to communicate with the SteamVR Runtime. The Wiki for OpenVR talks about more of the underlying API. You don't need to download anything else. Build a Unity project and add the SteamVR plugin Make a new Unity project. Name it \"MySteamVRProject.\" Import plugin SteamVR from asset store Search for SteamVR and click Import. Click Import when prompted. A dialog comes up that shows what files will be included.It may take a moment to include everything in the package. Click Accept All when prompted with the recommended project settings. You will see a confirmation that says \u201cYou have made the right choice\u201d. Click Ok. Now you should see the SteamVR folder under Assets. Disable or remove the default Main Camera in the Inspector Keep the included Directional Light or add a Point Light and disable any unused lights. Add a Plane and Cube to the scene Move the Cube up in the Z direction by 1 unit. Add the Player prefab found under SteamVR/InteractionSystem/Core/Prefabs. This includes the camera and controller objects. Generate the action.js file by navigating to Unity menu Window > SteamVR Input. Click Yes when prompted to save a copy of the example json files. Click Save and Generate on the SteamVR Input dialog. Once that\u2019s done there will be an example scene file in Assets/SteamVR/InteractionSystem/Samples/Interactions_Example.unity. Explore this scene or go back to the default SampleScene file you started with. Start adding other objects into the scene. Hit play and put on the VIVE References Player How to Add Teleportation Create an empty GameObject Locate and add the Teleporting prefab found under SteamVR/InteractionSystem/Teleport/Prefabs. 3. This is the primary object for managing teleportation functionality. Add one or more TeleportPoint game objects found under SteamVR/InteractionSystem/Teleport/Prefabs. These should be places at specific locations you would like to teleport to. Add one or more Teleport Areas Create a Plane and adjust the size and location. Rename the game object to TeleportArea Position the plane object 0.05 units in the Y direction so it\u2019s just above the ground plane. Add the Teleport Area component Hit play and put on the VIVE References Getting Started with the Interaction System Teleport TeleportPoint TeleportArea How to Add Object Interaction (Pickup & Throw) Add a Cube GameObject to the scene Add the Interactable component to enable interaction features such as highlighting. Add the Throwable component to be able to pick up and throw the object. References Getting Started with the Interaction System Interactable Throwable","title":"Unity + SteamVR"},{"location":"xr/learning-unity/#c-scripting-resources","text":"Unity Scripting References Scripting Manual Scripting API Scripting Tutorials Execution Order of Event Functions Unity Scripting Tutorials Conventions and Syntax Data Types Variables and Functions Vector Maths If Statements Loops Enabling and Disabling Components Activating GameObjects Translate and Rotate GetButton and GetKey Colliders Colliders as Triggers C# References The C# Player's Guide (3rd Edition) / pdf Microsoft C# Quick Start Tutorials Unity Scripts Unity Script Collection - Great resource!","title":"C# Scripting Resources"},{"location":"xr/learning-unity/#scripting-behavior","text":"The Nature of Code ( Processing Examples ) Q: How do you go about translating code from one language to another? A: Learn enough of the syntax for both programming lanages to translate from one language to another. Oscillation Examples Teleporter Examples Making Objects Slide w/ Physic Materials","title":"Scripting Behavior"},{"location":"xr/reality-capture/","text":"Download the pre-compiled binary for macos and try it out. https://github.com/wjakob/instant-meshes This is an article about the tool and its use in a cad program called MODO. It talks about the next steps in scanning and points at the following research. https://www.foundry.com/%20insights/vr-ar-mr/mitsuba-renderer-instant-meshes Field-Aligned Online Surface Reconstruction. Check out the video. http://rgl.epfl.ch/publications/Schertler2017Field","title":"Reality capture"}]}